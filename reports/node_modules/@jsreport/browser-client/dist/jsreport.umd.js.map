{"version":3,"file":"jsreport.umd.js","sources":["../src/jsreport.js"],"sourcesContent":["/* globals jsreportInit */\nimport { saveAs } from 'file-saver'\n\nclass RenderResponse {\n  constructor (res) {\n    this._response = res\n  }\n\n  /**\n   * Return the fetch original response\n   */\n  get response () {\n    return this._response\n  }\n\n  /**\n   * Returns Promise<string> content of the response\n   * @returns {Promise<string>}\n   */\n  async toString () {\n    const blob = await this.response.blob()\n    return blob.text()\n  }\n\n  /**\n   * Invoke save of the output content as the file\n   * @param {string} afilename  - filename to save the file as\n   */\n  async download (afilename) {\n    const blob = await this.response.blob()\n    saveAs(blob, afilename)\n  }\n\n  /**\n   * Returns Promise<Blob> content of the response\n   * @returns {Promise<Blob>}\n   */\n  async toBlob () {\n    return this.response.blob()\n  }\n\n  /**\n   *  Return Promise<string> data URI of the response\n   * @returns {Promise<string>}\n   */\n  async toDataURI () {\n    const reader = new FileReader()\n    const blob = await this.response.blob()\n    return new Promise((resolve) => {\n      reader.onload = function (e) {\n        resolve(reader.result)\n      }\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  /**\n   * Opens the response content in a new browser window\n   * @param {Object} options - optional configs passed to the window.open\n   * @param {string} options.windowName - name of the window\n   * @param {string} options.windowFeatures - features of the window\n   * @param {Number} options.cleanInterval - how often to check if the window is closed to clean up the object URL\n   * @param {Number} options.title - tab title name\n   * @returns {Promise<Window}\n   */\n  async openInWindow ({\n    cleanInterval = 5000,\n    windowName,\n    windowFeatures,\n    title\n  } = { }) {\n    const blob = await this.response.blob()\n    const objectURL = URL.createObjectURL(blob, windowName, windowFeatures)\n\n    const previewURL = window.URL.createObjectURL(new Blob([`\n    <html>\n      <head>\n        <title>${title || 'report'}</title>\n        <style>\n          html, body {\n            margin: 0px;\n            width: 100%;\n            height: 100%;\n          }\n        </style>\n      </head>\n      <body>\n        <iframe src=\"${objectURL}\" frameborder=\"0\" width=\"100%\" height=\"100%\" />\n      </body>\n    </html>\n  `], { type: 'text/html' }))\n\n    const w = window.open(previewURL)\n    const interval = setInterval(() => {\n      if (w && w.closed) {\n        URL.revokeObjectURL(objectURL)\n        URL.revokeObjectURL(previewURL)\n        clearInterval(interval)\n      }\n    }, cleanInterval)\n    return w\n  }\n\n  /**\n   * Return the response as object URL. Remember you need to revoke the object URL when you are done with it\n   * @returns {Promise<string>}\n   */\n  async toObjectURL () {\n    const blob = await this.response.blob()\n    return URL.createObjectURL(blob)\n  }\n}\n\nclass JsReportClient {\n  constructor () {\n    this.headers = {}\n  }\n\n  _normalizeUrl (baseUrl, ...paths) {\n    const rootUrl = new URL(baseUrl)\n    const normalizedPaths = []\n\n    for (const path of paths) {\n      let normalizedPath = path\n\n      if (normalizedPath[0] === '/') {\n        normalizedPath = normalizedPath.slice(1)\n      }\n\n      if (normalizedPath[normalizedPath.length - 1] === '/') {\n        normalizedPath = normalizedPath.slice(0, -1)\n      }\n\n      if (normalizedPath !== '') {\n        normalizedPaths.push(normalizedPath)\n      }\n    }\n\n    if (normalizedPaths.length === 0) {\n      return rootUrl.toString()\n    }\n\n    const normalizedOriginalPathname = rootUrl.pathname[rootUrl.pathname.length - 1] === '/' ? rootUrl.pathname.slice(0, -1) : rootUrl.pathname\n\n    normalizedPaths.unshift(normalizedOriginalPathname)\n\n    return new URL(normalizedPaths.join('/'), rootUrl).toString()\n  }\n\n  async _jsreportRequest ({ method, path, body }) {\n    if (!this.serverUrl) {\n      throw new Error('The script was not linked from jsreport. You need to fill jsreport.serverUrl property with valid url to jsreport server.')\n    }\n\n    const reportUrl = this._normalizeUrl(this.serverUrl, path)\n\n    let res\n    try {\n      res = await fetch(reportUrl, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...this.headers\n        },\n        body: body != null ? JSON.stringify(body) : null,\n        method\n      })\n    } catch (e) {\n      throw new Error('Failed to connect to jsreport server.')\n    }\n\n    if (!res.ok) {\n      let error = {\n        message: `jsreport server responded with error. status text: ${res.statusText}, status code: ${res.status}`\n      }\n      try {\n        const blob = await res.blob()\n        const text = await blob.text()\n        const remoteError = JSON.parse(text)\n        error = {\n          ...remoteError,\n          message: `${error.message}, details: ${remoteError.message}`\n        }\n      } catch (e) {\n\n      }\n      const returnError = new Error(error.message)\n      Object.assign(returnError, {\n        status: res.status,\n        statusText: res.statusText,\n        error\n      })\n      throw returnError\n    }\n\n    return res\n  }\n\n  _submitFormRequest (req, target, title) {\n    const mapForm = document.createElement('form')\n    mapForm.target = target\n    mapForm.id = new Date().getTime()\n    mapForm.method = 'POST'\n    mapForm.action = this._normalizeUrl(this.serverUrl, '/api/report', encodeURIComponent(title))\n\n    const input = document.createElement('input')\n    input.type = 'hidden'\n    input.name = 'renderRequestContent'\n    input.value = JSON.stringify(req)\n    mapForm.appendChild(input)\n    document.body.appendChild(mapForm)\n\n    function submit (i) {\n      if (i > 10) {\n        return console.log('Unable to submit render form.')\n      }\n      try {\n        mapForm.submit()\n        mapForm.outerHTML = ''\n      } catch (e) {\n        setTimeout(function () {\n          submit(i + 1)\n        }, 50)\n      }\n    }\n\n    submit(0)\n  }\n\n  /**\n   * Render report in remote server and initiate download\n   * This method doesn't support submitting to jsreport with authentication enabled\n   * @param {filename} new tab title\n   * @param {RenderRequest} renderRequest\n   */\n  download (filename, req) {\n    if (\n      filename == null ||\n      typeof filename !== 'string' ||\n      filename.trim() === ''\n    ) {\n      throw new Error('jsreport.download requires filename parameter and must be a non empty string')\n    }\n\n    const request = Object.assign({}, req)\n    request.options = Object.assign({}, request.options)\n    if (request.options['Content-Disposition'] == null) {\n      request.options['Content-Disposition'] = `attachment; filename=\"${filename}\"`\n    }\n    this._submitFormRequest(request, '_self', filename)\n  }\n\n  /**\n   * Render report in remote server and open in new tab\n   * This method doesn't support submitting to jsreport with authentication enabled\n   * @param {Object} options\n   * @param {string} options.filename\n   * @param {string} options.title\n   * @param {RenderRequest} renderRequest\n   */\n  openInWindow ({ title, filename } = {}, req) {\n    if (\n      title == null ||\n      typeof title !== 'string' ||\n      title.trim() === ''\n    ) {\n      throw new Error('jsreport.openInWindow requires title parameter and must be a non empty string')\n    }\n\n    if (\n      filename == null ||\n      typeof filename !== 'string' ||\n      filename.trim() === ''\n    ) {\n      throw new Error('jsreport.openInWindow requires filename parameter and must be a non empty string')\n    }\n\n    const request = Object.assign({}, req)\n    if (filename) {\n      request.options = Object.assign({}, request.options)\n      if (request.options['Content-Disposition'] == null) {\n        request.options['Content-Disposition'] = `inline; filename=\"${filename}\"`\n      }\n    }\n\n    this._submitFormRequest(request, '_blank', title)\n  }\n\n  /**\n   * Render report in remote server\n   * @param {RenderRequest} renderRequest\n   * @returns {Promise<RenderResponse>}\n   */\n  async render (renderRequest) {\n    const res = await this._jsreportRequest({ method: 'POST', path: '/api/report', body: renderRequest })\n    return new RenderResponse(res)\n  }\n\n  /**\n   * Create new instance of the client, this is rarely needed and you can use the default in the most of the cases\n   * @returns {JsReportClient}\n   */\n  createClient () {\n    return new JsReportClient()\n  }\n}\n\nconst jsreportInstance = new JsReportClient()\nsetTimeout(function () {\n  if (window.jsreportInit !== undefined) {\n    jsreportInit(jsreportInstance)\n  }\n}, 0)\n\nexport default jsreportInstance\n"],"names":["_catch","body","recover","result","e","then","RenderResponse","res","this","_response","toString","Promise","resolve","response","blob","text","download","afilename","saveAs","toBlob","toDataURI","FileReader","reader","onload","readAsDataURL","openInWindow","_temp","_ref","cleanInterval","windowName","windowFeatures","title","objectURL","URL","createObjectURL","previewURL","window","Blob","type","w","open","setInterval","closed","revokeObjectURL","clearInterval","interval","toObjectURL","JsReportClient","headers","_normalizeUrl","baseUrl","_step","_iterator","_createForOfIteratorHelperLoose","slice","call","arguments","done","path","value","normalizedPath","length","normalizedPaths","push","rootUrl","normalizedOriginalPathname","pathname","unshift","join","_jsreportRequest","method","_temp9","_result","_temp4","ok","_temp7","returnError","Error","error","message","Object","assign","status","statusText","_error","_temp8","remoteError","JSON","parse","_result2","_this14","serverUrl","reportUrl","_temp10","fetch","stringify","_fetch","_submitFormRequest","req","target","mapForm","document","createElement","id","Date","getTime","action","encodeURIComponent","input","name","appendChild","i","console","log","submit","outerHTML","setTimeout","filename","trim","request","options","_ref3","_temp11","render","renderRequest","createClient","jsreportInstance","undefined","jsreportInit"],"mappings":"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"}