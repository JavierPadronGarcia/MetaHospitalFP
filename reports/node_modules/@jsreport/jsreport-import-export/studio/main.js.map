{"version":3,"file":"main.js","mappings":"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","sources":["webpack://@jsreport/jsreport-import-export/external var \"Studio\"","webpack://@jsreport/jsreport-import-export/external var \"Studio.libraries['react']\"","webpack://@jsreport/jsreport-import-export/./studio/ExportModal.js","webpack://@jsreport/jsreport-import-export/external var \"Studio.libraries['filesaver.js-npm']\"","webpack://@jsreport/jsreport-import-export/./studio/ImportModal.js","webpack://@jsreport/jsreport-import-export/external var \"Studio.runtime['helpers/extends']\"","webpack://@jsreport/jsreport-import-export/webpack/bootstrap","webpack://@jsreport/jsreport-import-export/webpack/runtime/compat get default export","webpack://@jsreport/jsreport-import-export/webpack/runtime/define property getters","webpack://@jsreport/jsreport-import-export/webpack/runtime/hasOwnProperty shorthand","webpack://@jsreport/jsreport-import-export/webpack/runtime/make namespace object","webpack://@jsreport/jsreport-import-export/./studio/main_dev.js"],"sourcesContent":["module.exports = Studio;","module.exports = Studio.libraries['react'];","import React, { useState, useRef, useMemo, useCallback } from 'react'\nimport Studio, { EntityTree } from 'jsreport-studio'\nimport fileSaver from 'filesaver.js-npm'\n\nconst useEntitiesSelector = Studio.createUseEntitiesSelector()\n\nfunction ExportModal (props) {\n  const { options } = props\n  const references = useEntitiesSelector((entities) => entities)\n  const [processing, setProcessing] = useState(false)\n  const entityTreeRef = useRef(null)\n\n  const exportableReferences = useMemo(() => {\n    const exportableEntitySets = Studio.extensions['import-export'].options.exportableEntitySets\n\n    return Object.keys(references).reduce((acu, entitySetName) => {\n      if (exportableEntitySets.indexOf(entitySetName) !== -1) {\n        acu[entitySetName] = references[entitySetName]\n      }\n\n      return acu\n    }, {})\n  }, [references])\n\n  const initialSelected = useMemo(() => {\n    const selections = {}\n\n    Object.keys(exportableReferences).forEach((k) => {\n      Object.keys(exportableReferences[k]).forEach((e) => {\n        if (options.initialSelected != null) {\n          const selected = Array.isArray(options.initialSelected) ? options.initialSelected : [options.initialSelected]\n\n          selected.forEach((s) => {\n            if (exportableReferences[k][e]._id === s) {\n              selections[exportableReferences[k][e]._id] = true\n            } else if (selections[exportableReferences[k][e]._id] == null) {\n              selections[exportableReferences[k][e]._id] = false\n            }\n          })\n        } else {\n          selections[exportableReferences[k][e]._id] = true\n        }\n      })\n    })\n\n    return selections\n  }, [])\n\n  const download = useCallback(async () => {\n    if (processing) {\n      return\n    }\n\n    setProcessing(true)\n\n    try {\n      const selected = entityTreeRef.current.selected\n\n      const response = await Studio.api.post('api/export', {\n        data: {\n          selection: Object.keys(selected).filter((k) => selected[k] === true)\n        },\n        responseType: 'blob'\n      }, true)\n\n      fileSaver.saveAs(response, 'export.jsrexport')\n\n      setProcessing(false)\n    } catch (e) {\n      setProcessing(false)\n\n      alert('Unable to prepare export ' + e.message + ' ' + e.stack)\n    }\n  }, [processing])\n\n  return (\n    <div className='form-group'>\n      <div>\n        <h1><i className='fa fa-download' /> Export objects</h1>\n      </div>\n      <div style={{ height: '30rem', overflow: 'auto' }}>\n        <EntityTree\n          ref={entityTreeRef}\n          entities={exportableReferences}\n          selectable\n          initialSelected={initialSelected}\n        />\n      </div>\n      <div className='button-bar'>\n        <a className={`button confirmation ${processing ? 'disabled' : ''}`} onClick={() => download()}>\n          <i className='fa fa-circle-o-notch fa-spin' style={{ display: processing ? 'inline-block' : 'none' }} />\n          <span style={{ display: processing ? 'none' : 'inline' }}>Download</span>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default ExportModal\n","module.exports = Studio.libraries['filesaver.js-npm'];","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\nconst FileInput = Studio.FileInput\nconst sharedComponents = Studio.sharedComponents\n\nclass ImportFinishedModal extends Component {\n  componentDidMount () {\n    setTimeout(() => this.confirmBtn.focus(), 0)\n  }\n\n  componentWillUnmount () {\n    Studio.reset().catch(() => {})\n  }\n\n  confirm () {\n    this.props.close()\n\n    Studio.reset().catch((e) => { console.error(e) })\n  }\n\n  render () {\n    const { log } = this.props.options\n\n    return (\n      <div>\n        <h1><i className='fa fa-info-circle' /> Import finished</h1>\n        {log != null && log !== '' && (\n          <div className='form-group'>\n            <div>\n              <i>Some errors/warnings happened during the import:</i>\n            </div>\n            <textarea style={{ width: '100%', boxSizing: 'border-box' }} rows='10' readOnly value={log} />\n          </div>\n        )}\n        <div className='form-group'>\n          <i>Now we need to reload the studio..</i>\n        </div>\n        <div className='button-bar'>\n          <button ref={(el) => { this.confirmBtn = el }} className='button confirmation' onClick={() => this.confirm()}>\n            Ok\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ImportModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      selectedFolderShortid: props.options != null && props.options.selectedFolderShortid ? props.options.selectedFolderShortid : null,\n      fullImport: false,\n      retryWithContinueOnFail: false,\n      validated: false\n    }\n\n    if (props.options && props.options.selectedFile) {\n      this.state.selectedFile = props.options.selectedFile\n    }\n\n    this.handleImportModeChange = this.handleImportModeChange.bind(this)\n  }\n\n  handleImportModeChange (ev) {\n    if (this.state.processing === true || this.state.validated) {\n      return\n    }\n\n    let fullImport = false\n\n    if (ev.target.value === 'full') {\n      fullImport = true\n    }\n\n    this.setState({\n      fullImport\n    })\n  }\n\n  async validate (file) {\n    if (!file || this.state.processing) {\n      return\n    }\n\n    this.setState({\n      status: '1',\n      processing: true,\n      log: 'Validating import....'\n    })\n\n    try {\n      const params = {\n        fullImport: this.state.fullImport\n      }\n\n      if (this.state.selectedFolderShortid != null) {\n        params.targetFolder = this.state.selectedFolderShortid\n      }\n\n      const result = await Studio.api.post('api/validate-import', {\n        params,\n        attach: { filename: 'import.jsrexport', file }\n      }, true)\n\n      this.setState({\n        validated: true,\n        status: result.status,\n        processing: false,\n        log: result.log\n      })\n    } catch (e) {\n      this.setState({\n        validated: true,\n        status: '1',\n        processing: false,\n        log: e.message + ' ' + e.stack\n      })\n    }\n  }\n\n  async import () {\n    if (this.state.processing) {\n      return\n    }\n\n    const { retryWithContinueOnFail } = this.state\n\n    try {\n      this.setState({\n        status: '1',\n        processing: true,\n        log: 'Working on import....'\n      })\n\n      const params = {\n        fullImport: this.state.fullImport,\n        continueOnFail: retryWithContinueOnFail\n      }\n\n      if (this.state.selectedFolderShortid != null) {\n        params.targetFolder = this.state.selectedFolderShortid\n      }\n\n      const result = await Studio.api.post('api/import', {\n        params,\n        attach: { filename: 'import.jsrexport', file: this.state.selectedFile }\n      }, true)\n\n      this.setState({\n        processing: false,\n        retryWithContinueOnFail: false\n      })\n\n      Studio.openModal(ImportFinishedModal, {\n        log: result.log\n      })\n    } catch (e) {\n      const stateToUpdate = {\n        status: '1',\n        processing: false,\n        log: e.message + ' ' + e.stack\n      }\n\n      if (!retryWithContinueOnFail && e.canContinueAfterFail) {\n        stateToUpdate.retryWithContinueOnFail = true\n      } else {\n        stateToUpdate.retryWithContinueOnFail = false\n      }\n\n      this.setState(stateToUpdate)\n    }\n  }\n\n  cancel () {\n    if (this.state.processing) {\n      return\n    }\n\n    this.setState({\n      status: null,\n      log: null,\n      retryWithContinueOnFail: false,\n      validated: false\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <h1><i className='fa fa-upload' /> Import objects</h1>\n        <div className='form-group'>\n          <p>\n            A <b>validation is run first</b>, so you can safely upload the exported package and review the changes which will be performed. Afterwards <b>you can confirm or cancel the import</b>.\n          </p>\n        </div>\n        <div className='form-group'>\n          <FileInput\n            placeholder='select export file to import...'\n            selectedFile={this.state.selectedFile}\n            onFileSelect={(file) => this.setState({ selectedFile: file })}\n            disabled={this.state.processing === true || this.state.validated}\n          />\n        </div>\n        <div className='form-group'>\n          <fieldset style={{ padding: '0px', margin: '0px', borderWidth: '1px' }}>\n            <legend style={{ marginLeft: '0.2rem' }}>Options</legend>\n            <div className='form-group'>\n              <div style={{ opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1 }}>\n                <label>\n                  <input\n                    type='radio'\n                    name='import-mode'\n                    value='merge'\n                    style={{ verticalAlign: 'middle', margin: '0px' }}\n                    checked={!this.state.fullImport}\n                    onChange={this.handleImportModeChange}\n                  />\n                  <span style={{ display: 'inline-block', verticalAlign: 'middle', paddingLeft: '0.2rem', paddingRight: '0.5rem' }}>Merge</span>\n                </label>\n                <label>\n                  <input\n                    type='radio'\n                    name='import-mode'\n                    value='full'\n                    style={{ verticalAlign: 'middle', margin: '0px' }}\n                    checked={this.state.fullImport}\n                    onChange={this.handleImportModeChange}\n                  />\n                  <span style={{ display: 'inline-block', verticalAlign: 'middle', paddingLeft: '0.2rem', paddingRight: '0.5rem' }}>Full</span>\n                </label>\n              </div>\n            </div>\n            <div className='form-group'>\n              <div\n                style={{\n                  display: !this.state.fullImport ? 'block' : 'none',\n                  border: '1px dashed black',\n                  padding: '0.6rem',\n                  opacity: (this.state.processing === true || this.state.validated) ? 0.7 : 1\n                }}\n              >\n                <label style={{ display: 'inline-block', marginBottom: '5px' }}>\n                  <b>Optionally</b> you can select a folder in which the entities  will be inserted\n                </label>\n                <div style={{ maxHeight: '20rem', overflow: 'auto' }}>\n                  <EntityRefSelect\n                    noModal\n                    treeStyle={{ minHeight: 'auto', maxHeight: 'none' }}\n                    headingLabel='Select folder'\n                    newLabel='New folder for import'\n                    filter={(references) => ({ folders: references.folders })}\n                    selectableFilter={(isGroup, entity) => entity.__entitySet === 'folders'}\n                    value={this.state.selectedFolderShortid}\n                    disabled={this.state.processing === true || this.state.validated}\n                    onChange={(selected) => {\n                      this.setState({\n                        selectedFolderShortid: selected.length > 0 ? selected[0].shortid : null\n                      })\n                    }}\n                    renderNew={(modalProps) => <sharedComponents.NewFolderModal {...modalProps} options={{ ...modalProps.options, entitySet: 'folders' }} />}\n                  />\n                </div>\n              </div>\n              {this.state.fullImport && (\n                <p style={{ marginTop: '10px' }}>\n                  A <b>full import</b> means that <b>all the entities that are not present in the export file will be deleted</b>, after the import <b>you will have only the entities that were present in the export file</b>.\n                </p>\n              )}\n            </div>\n          </fieldset>\n        </div>\n        <div className='form-group'>\n          {!this.state.validated && (\n            <div className='button-bar'>\n              <button\n                className={`button confirmation ${this.state.processing ? 'disabled' : ''}`}\n                style={{ opacity: this.state.selectedFile == null ? 0.7 : 1 }}\n                disabled={this.state.selectedFile == null}\n                onClick={() => this.validate(this.state.selectedFile)}\n              >\n                <i className='fa fa-circle-o-notch fa-spin' style={{ display: this.state.processing ? 'inline-block' : 'none' }} />\n                <span style={{ display: this.state.processing ? 'none' : 'inline' }}>Validate</span>\n              </button>\n            </div>\n          )}\n          <br />\n          {this.state.validated && (\n            <div>\n              <div>\n                <i>Log of changes with the import:</i>\n              </div>\n              <textarea style={{ width: '100%', boxSizing: 'border-box' }} rows='10' readOnly value={this.state.log} />\n            </div>\n          )}\n          {this.state.validated && (\n            <div className='button-bar'>\n              <button className={`button danger ${this.state.processing ? 'disabled' : ''}`} onClick={() => this.cancel()}>\n                Cancel\n              </button>\n              {(this.state.status === '0' || this.state.retryWithContinueOnFail) && (\n                <button className={`button confirmation ${this.state.processing ? 'disabled' : ''}`} onClick={() => this.import()}>\n                  <i className='fa fa-circle-o-notch fa-spin' style={{ display: this.state.processing ? 'inline-block' : 'none' }} />\n                  <span style={{ display: this.state.processing ? 'none' : 'inline' }}>{this.state.retryWithContinueOnFail ? 'Ignore errors and continue' : 'Import'}</span>\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ImportModal\n","module.exports = Studio.runtime['helpers/extends'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ExportModal from './ExportModal.js'\nimport ImportModal from './ImportModal.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addToolbarComponent((props) => (\n  <div\n    className='toolbar-button'\n    onClick={() => {\n      Studio.openModal(ExportModal)\n      props.closeMenu()\n    }}\n  >\n    <i className='fa fa-download' />Export\n  </div>\n), 'settings')\n\nStudio.addToolbarComponent((props) => (\n  <div\n    className='toolbar-button'\n    onClick={() => {\n      Studio.openModal(ImportModal)\n      props.closeMenu()\n    }}\n  >\n    <i className='fa fa-upload' />Import\n  </div>\n), 'settings')\n\nStudio.addEntityTreeContextMenuItemsResolver(({\n  node,\n  entity,\n  editSelection,\n  isRoot,\n  isGroupEntity,\n  getAllEntitiesInHierarchy\n}) => {\n  if (editSelection != null) {\n    return\n  }\n\n  const items = []\n\n  if (isRoot) {\n    items.push({\n      key: 'Import',\n      title: 'Import',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal)\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export',\n      icon: 'fa-download',\n      onClick: () => {\n        Studio.openModal(ExportModal)\n      }\n    })\n  } else if (isGroupEntity && entity.__entitySet === 'folders') {\n    items.push({\n      key: 'Import',\n      title: 'Import into folder',\n      icon: 'fa-upload',\n      onClick: () => {\n        Studio.openModal(ImportModal, { selectedFolderShortid: entity.shortid })\n      }\n    })\n\n    items.push({\n      key: 'Export',\n      title: 'Export folder',\n      icon: 'fa-download',\n      onClick: () => {\n        const selected = getAllEntitiesInHierarchy(node, true)\n        Studio.openModal(ExportModal, { initialSelected: selected })\n      }\n    })\n  }\n\n  return {\n    grouped: true,\n    items\n  }\n})\n\nStudio.entityTreeDropResolvers.push({\n  type: Studio.dragAndDropNativeTypes.FILE,\n  async handler ({\n    draggedItem,\n    dragOverContext,\n    dropComplete\n  }) {\n    const files = draggedItem.files\n\n    const targetInfo = {\n      shortid: null\n    }\n\n    if (dragOverContext && dragOverContext.containerTargetEntity) {\n      targetInfo.shortid = dragOverContext.containerTargetEntity.shortid\n    }\n\n    if (\n      files &&\n      files.length === 1 &&\n      (\n        /\\.zip$/.test(files[0].name) ||\n        /\\.jsrexport$/.test(files[0].name)\n      )\n    ) {\n      dropComplete()\n\n      const opts = {\n        selectedFile: files[0]\n      }\n\n      if (targetInfo.shortid) {\n        opts.selectedFolderShortid = targetInfo.shortid\n      }\n\n      Studio.openModal(ImportModal, opts)\n    }\n  }\n})\n"],"names":["React","useState","useRef","useMemo","useCallback","Studio","EntityTree","fileSaver","useEntitiesSelector","createUseEntitiesSelector","ExportModal","props","options","references","entities","processing","setProcessing","entityTreeRef","exportableReferences","exportableEntitySets","extensions","Object","keys","reduce","acu","entitySetName","indexOf","initialSelected","selections","forEach","k","e","selected","Array","isArray","s","_id","download","current","response","api","post","data","selection","filter","responseType","saveAs","alert","message","stack","createElement","className","style","height","overflow","ref","selectable","onClick","display","Component","EntityRefSelect","FileInput","sharedComponents","ImportFinishedModal","componentDidMount","setTimeout","confirmBtn","focus","componentWillUnmount","reset","catch","confirm","close","console","error","render","log","width","boxSizing","rows","readOnly","value","el","ImportModal","constructor","state","selectedFolderShortid","fullImport","retryWithContinueOnFail","validated","selectedFile","handleImportModeChange","bind","ev","target","setState","validate","file","status","params","targetFolder","result","attach","filename","import","continueOnFail","openModal","stateToUpdate","canContinueAfterFail","cancel","placeholder","onFileSelect","disabled","padding","margin","borderWidth","marginLeft","opacity","type","name","verticalAlign","checked","onChange","paddingLeft","paddingRight","border","marginBottom","maxHeight","noModal","treeStyle","minHeight","headingLabel","newLabel","folders","selectableFilter","isGroup","entity","__entitySet","length","shortid","renderNew","modalProps","NewFolderModal","_extends","entitySet","marginTop","addToolbarComponent","closeMenu","addEntityTreeContextMenuItemsResolver","_ref","node","editSelection","isRoot","isGroupEntity","getAllEntitiesInHierarchy","items","push","key","title","icon","grouped","entityTreeDropResolvers","dragAndDropNativeTypes","FILE","handler","_ref2","draggedItem","dragOverContext","dropComplete","files","targetInfo","containerTargetEntity","test","opts"],"sourceRoot":""}