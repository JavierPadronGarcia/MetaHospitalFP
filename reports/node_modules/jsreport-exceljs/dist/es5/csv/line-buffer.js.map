{"version":3,"file":"line-buffer.js","names":["require","EventEmitter","LineBuffer","options","encoding","buffer","corked","queue","chunk","data","lines","split","pop","forEach","line","push","emit","_flush","module","exports"],"sources":["../../../lib/csv/line-buffer.js"],"sourcesContent":["const {EventEmitter} = require('events');\n\nclass LineBuffer extends EventEmitter {\n  constructor(options) {\n    super();\n\n    this.encoding = options.encoding;\n\n    this.buffer = null;\n\n    // part of cork/uncork\n    this.corked = false;\n    this.queue = [];\n  }\n\n  // Events:\n  //  line: here is a line\n  //  done: all lines emitted\n\n  write(chunk) {\n    // find line or lines in chunk and emit them if not corked\n    // or queue them if corked\n    const data = this.buffer ? this.buffer + chunk : chunk;\n    const lines = data.split(/\\r?\\n/g);\n\n    // save the last line\n    this.buffer = lines.pop();\n\n    lines.forEach(function(line) {\n      if (this.corked) {\n        this.queue.push(line);\n      } else {\n        this.emit('line', line);\n      }\n    });\n\n    return !this.corked;\n  }\n\n  cork() {\n    this.corked = true;\n  }\n\n  uncork() {\n    this.corked = false;\n    this._flush();\n\n    // tell the source I'm ready again\n    this.emit('drain');\n  }\n\n  setDefaultEncoding() {\n    // ?\n  }\n\n  end() {\n    if (this.buffer) {\n      this.emit('line', this.buffer);\n      this.buffer = null;\n    }\n    this.emit('done');\n  }\n\n  _flush() {\n    if (!this.corked) {\n      this.queue.forEach(line => {\n        this.emit('line', line);\n      });\n      this.queue = [];\n    }\n  }\n}\n\nmodule.exports = LineBuffer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAAuBA,OAAO,CAAC,QAAD,CAA9B;AAAA,IAAOC,YAAP,YAAOA,YAAP;;IAEMC,U;;;;;EACJ,oBAAYC,OAAZ,EAAqB;IAAA;;IAAA;;IACnB;IAEA,MAAKC,QAAL,GAAgBD,OAAO,CAACC,QAAxB;IAEA,MAAKC,MAAL,GAAc,IAAd,CALmB,CAOnB;;IACA,MAAKC,MAAL,GAAc,KAAd;IACA,MAAKC,KAAL,GAAa,EAAb;IATmB;EAUpB,C,CAED;EACA;EACA;;;;;WAEA,eAAMC,KAAN,EAAa;MACX;MACA;MACA,IAAMC,IAAI,GAAG,KAAKJ,MAAL,GAAc,KAAKA,MAAL,GAAcG,KAA5B,GAAoCA,KAAjD;MACA,IAAME,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,QAAX,CAAd,CAJW,CAMX;;MACA,KAAKN,MAAL,GAAcK,KAAK,CAACE,GAAN,EAAd;MAEAF,KAAK,CAACG,OAAN,CAAc,UAASC,IAAT,EAAe;QAC3B,IAAI,KAAKR,MAAT,EAAiB;UACf,KAAKC,KAAL,CAAWQ,IAAX,CAAgBD,IAAhB;QACD,CAFD,MAEO;UACL,KAAKE,IAAL,CAAU,MAAV,EAAkBF,IAAlB;QACD;MACF,CAND;MAQA,OAAO,CAAC,KAAKR,MAAb;IACD;;;WAED,gBAAO;MACL,KAAKA,MAAL,GAAc,IAAd;IACD;;;WAED,kBAAS;MACP,KAAKA,MAAL,GAAc,KAAd;;MACA,KAAKW,MAAL,GAFO,CAIP;;;MACA,KAAKD,IAAL,CAAU,OAAV;IACD;;;WAED,8BAAqB,CACnB;IACD;;;WAED,eAAM;MACJ,IAAI,KAAKX,MAAT,EAAiB;QACf,KAAKW,IAAL,CAAU,MAAV,EAAkB,KAAKX,MAAvB;QACA,KAAKA,MAAL,GAAc,IAAd;MACD;;MACD,KAAKW,IAAL,CAAU,MAAV;IACD;;;WAED,kBAAS;MAAA;;MACP,IAAI,CAAC,KAAKV,MAAV,EAAkB;QAChB,KAAKC,KAAL,CAAWM,OAAX,CAAmB,UAAAC,IAAI,EAAI;UACzB,MAAI,CAACE,IAAL,CAAU,MAAV,EAAkBF,IAAlB;QACD,CAFD;QAGA,KAAKP,KAAL,GAAa,EAAb;MACD;IACF;;;;EApEsBN,Y;;AAuEzBiB,MAAM,CAACC,OAAP,GAAiBjB,UAAjB"}