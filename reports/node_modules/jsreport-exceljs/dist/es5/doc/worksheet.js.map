{"version":3,"file":"worksheet.js","names":["_","require","colCache","Range","Row","Column","Enums","Image","Table","DataValidations","Encryptor","Worksheet","options","id","orderNo","name","state","_rows","_columns","_keys","_merges","rowBreaks","_workbook","workbook","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","firstPageNumber","horizontalCentered","verticalCentered","colBreaks","headerFooter","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","dataValidations","views","autoFilter","_media","sheetProtection","tables","conditionalFormattings","removeWorksheetEx","dimensions","forEach","row","rowDims","expand","number","min","max","value","_headerRowCount","reduce","pv","cv","headerCount","headers","length","Math","count","columns","defn","column","push","key","f","each","c","col","l2n","n","start","inserts","Array","prototype","slice","call","arguments","rows","nRows","i","rowArguments","insert","getRow","splice","apply","r","nExpand","nKeep","nEnd","getColumn","definedNames","spliceColumns","maxCount","eachRow","cellCount","counts","eachCell","_lastRowNumber","_nextRow","values","addRow","rowNum","rSrc","fill","spliceRows","rDst","style","includeEmpty","cell","colNumber","getCell","iteratee","hasValues","address","getAddress","findCell","getCellEx","merge","intersects","Error","master","j","unmerge","some","Boolean","type","ValueType","Merge","_unMergeMaster","range","formula","results","shareType","decoded","decode","width","masterAddress","encodeAddress","isShared","getResult","isArray","first","ref","result","sharedFormula","imageId","model","filter","m","image","find","password","Promise","resolve","sheet","algorithmName","saltValue","randomBytes","toString","spinCount","hashValue","convertPasswordToHash","table","cf","Function","console","trace","tabColor","media","map","medium","cols","toModel","rowModel","merges","fromModel","_parseRows","_parseMergeCells","t","mergeCells","module","exports"],"sources":["../../../lib/doc/worksheet.js"],"sourcesContent":["const _ = require('../utils/under-dash');\n\nconst colCache = require('./../utils/col-cache');\nconst Range = require('./range');\nconst Row = require('./row');\nconst Column = require('./column');\nconst Enums = require('./enums');\nconst Image = require('./image');\nconst Table = require('./table');\nconst DataValidations = require('./data-validations');\nconst Encryptor = require('../utils/encryptor');\n\n// Worksheet requirements\n//  Operate as sheet inside workbook or standalone\n//  Load and Save from file and stream\n//  Access/Add/Delete individual cells\n//  Manage column widths and row heights\n\nclass Worksheet {\n  constructor(options) {\n    options = options || {};\n\n    // in a workbook, each sheet will have a number\n    this.id = options.id;\n    this.orderNo = options.orderNo;\n\n    // and a name\n    this.name = options.name || `Sheet${this.id}`;\n\n    // add a state\n    this.state = options.state || 'visible';\n\n    // rows allows access organised by row. Sparse array of arrays indexed by row-1, col\n    // Note: _rows is zero based. Must subtract 1 to go from cell.row to index\n    this._rows = [];\n\n    // column definitions\n    this._columns = null;\n\n    // column keys (addRow convenience): key ==> this._collumns index\n    this._keys = {};\n\n    // keep record of all merges\n    this._merges = {};\n\n    // record of all row and column pageBreaks\n    this.rowBreaks = [];\n\n    this._workbook = options.workbook;\n\n    // for tabColor, default row height, outline levels, etc\n    this.properties = Object.assign(\n      {},\n      {\n        defaultRowHeight: 15,\n        dyDescent: 55,\n        outlineLevelCol: 0,\n        outlineLevelRow: 0,\n      },\n      options.properties\n    );\n\n    // for all things printing\n    this.pageSetup = Object.assign(\n      {},\n      {\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\n        orientation: 'portrait',\n        horizontalDpi: 4294967295,\n        verticalDpi: 4294967295,\n        fitToPage: !!(options.pageSetup && ((options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) && !options.pageSetup.scale)),\n        pageOrder: 'downThenOver',\n        blackAndWhite: false,\n        draft: false,\n        cellComments: 'None',\n        errors: 'displayed',\n        scale: 100,\n        fitToWidth: 1,\n        fitToHeight: 1,\n        paperSize: undefined,\n        showRowColHeaders: false,\n        showGridLines: false,\n        firstPageNumber: undefined,\n        horizontalCentered: false,\n        verticalCentered: false,\n        rowBreaks: null,\n        colBreaks: null,\n      },\n      options.pageSetup\n    );\n\n    this.headerFooter = {\n      differentFirst: false,\n      differentOddEven: false,\n      oddHeader: null,\n      oddFooter: null,\n      evenHeader: null,\n      evenFooter: null,\n      firstHeader: null,\n      firstFooter: null,\n    };\n\n    this.dataValidations = new DataValidations();\n\n    // for freezepanes, split, zoom, gridlines, etc\n    this.views = options.views || [];\n\n    this.autoFilter = options.autoFilter || null;\n\n    // for images, etc\n    this._media = [];\n\n    // worksheet protection\n    this.sheetProtection = null;\n\n    // for tables\n    this.tables = {};\n\n    this.conditionalFormattings = [];\n  }\n\n  get workbook() {\n    return this._workbook;\n  }\n\n  // when you're done with this worksheet, call this to remove from workbook\n  destroy() {\n    this._workbook.removeWorksheetEx(this);\n  }\n\n  // Get the bounding range of the cells in this worksheet\n  get dimensions() {\n    const dimensions = new Range();\n    this._rows.forEach(row => {\n      if (row) {\n        const rowDims = row.dimensions;\n        if (rowDims) {\n          dimensions.expand(row.number, rowDims.min, row.number, rowDims.max);\n        }\n      }\n    });\n    return dimensions;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    let count = 1;\n    const columns = (this._columns = []);\n    value.forEach(defn => {\n      const column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  // get a single column by col number. If it doesn't exist, create it and any gaps before it\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  spliceColumns(start, count) {\n    // each member of inserts is a column of data.\n    const inserts = Array.prototype.slice.call(arguments, 2);\n    const rows = this._rows;\n    const nRows = rows.length;\n    if (inserts.length > 0) {\n      // must iterate over all rows whether they exist yet or not\n      for (let i = 0; i < nRows; i++) {\n        const rowArguments = [start, count];\n        // eslint-disable-next-line no-loop-func\n        inserts.forEach(insert => {\n          rowArguments.push(insert[i] || null);\n        });\n        const row = this.getRow(i + 1);\n        // eslint-disable-next-line prefer-spread\n        row.splice.apply(row, rowArguments);\n      }\n    } else {\n      // nothing to insert, so just splice all rows\n      this._rows.forEach(r => {\n        if (r) {\n          r.splice(start, count);\n        }\n      });\n    }\n\n    // splice column definitions\n    const nExpand = inserts.length - count;\n    const nKeep = start + count;\n    const nEnd = this._columns.length;\n    if (nExpand < 0) {\n      for (let i = start + inserts.length; i <= nEnd; i++) {\n        this.getColumn(i).defn = this.getColumn(i - nExpand).defn;\n      }\n    } else if (nExpand > 0) {\n      for (let i = nEnd; i >= nKeep; i--) {\n        this.getColumn(i + nExpand).defn = this.getColumn(i).defn;\n      }\n    }\n    for (let i = start; i < start + inserts.length; i++) {\n      this.getColumn(i).defn = null;\n    }\n\n    // account for defined names\n    this.workbook.definedNames.spliceColumns(this.name, start, count, inserts.length);\n  }\n\n  get columnCount() {\n    let maxCount = 0;\n    this.eachRow(row => {\n      maxCount = Math.max(maxCount, row.cellCount);\n    });\n    return maxCount;\n  }\n\n  get actualColumnCount() {\n    // performance nightmare - for each row, counts all the columns used\n    const counts = [];\n    let count = 0;\n    this.eachRow(row => {\n      row.eachCell(({col}) => {\n        if (!counts[col]) {\n          counts[col] = true;\n          count++;\n        }\n      });\n    });\n    return count;\n  }\n\n  // =========================================================================\n  // Rows\n\n  _commitRow() {\n    // nop - allows streaming reader to fill a document\n  }\n\n  get _lastRowNumber() {\n    // need to cope with results of splice\n    const rows = this._rows;\n    let n = rows.length;\n    while (n > 0 && rows[n - 1] === undefined) {\n      n--;\n    }\n    return n;\n  }\n\n  get _nextRow() {\n    return this._lastRowNumber + 1;\n  }\n\n  get lastRow() {\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  }\n\n  // find a row (if exists) by row number\n  findRow(r) {\n    return this._rows[r - 1];\n  }\n\n  get rowCount() {\n    return this._lastRowNumber;\n  }\n\n  get actualRowCount() {\n    // counts actual rows that have actual data\n    let count = 0;\n    this.eachRow(() => {\n      count++;\n    });\n    return count;\n  }\n\n  // get a row by row number.\n  getRow(r) {\n    let row = this._rows[r - 1];\n    if (!row) {\n      row = this._rows[r - 1] = new Row(this, r);\n    }\n    return row;\n  }\n\n  addRow(value) {\n    const row = this.getRow(this._nextRow);\n    row.values = value;\n    return row;\n  }\n\n  addRows(value) {\n    value.forEach(row => {\n      this.addRow(row);\n    });\n  }\n\n  duplicateRow(rowNum, count, insert = false) {\n    // create count duplicates of rowNum\n    // either inserting new or overwriting existing rows\n\n    const rSrc = this._rows[rowNum - 1];\n    const inserts = new Array(count).fill(rSrc.values);\n    this.spliceRows(rowNum + 1, insert ? 0 : count, ...inserts);\n\n    // now copy styles...\n    for (let i = 0; i < count; i++) {\n      const rDst = this._rows[rowNum + i];\n      rDst.style = rSrc.style;\n      // eslint-disable-next-line no-loop-func\n      rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n        rDst.getCell(colNumber).style = cell.style;\n      });\n    }\n  }\n\n  spliceRows(start, count) {\n    // same problem as row.splice, except worse.\n    const inserts = Array.prototype.slice.call(arguments, 2);\n    const nKeep = start + count;\n    const nExpand = inserts.length - count;\n    const nEnd = this._rows.length;\n    let i;\n    let rSrc;\n    if (nExpand < 0) {\n      // remove rows\n      for (i = nKeep; i <= nEnd; i++) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          const rDst = this.getRow(i + nExpand);\n          rDst.values = rSrc.values;\n          rDst.style = rSrc.style;\n          // eslint-disable-next-line no-loop-func\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n            rDst.getCell(colNumber).style = cell.style;\n          });\n          this._rows[i - 1] = undefined;\n        } else {\n          this._rows[i + nExpand - 1] = undefined;\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        rSrc = this._rows[i - 1];\n        if (rSrc) {\n          const rDst = this.getRow(i + nExpand);\n          rDst.values = rSrc.values;\n          rDst.style = rSrc.style;\n          // eslint-disable-next-line no-loop-func\n          rSrc.eachCell({includeEmpty: true}, (cell, colNumber) => {\n            rDst.getCell(colNumber).style = cell.style;\n          });\n        } else {\n          this._rows[i + nExpand - 1] = undefined;\n        }\n      }\n    }\n\n    // now copy over the new values\n    for (i = 0; i < inserts.length; i++) {\n      const rDst = this.getRow(start + i);\n      rDst.style = {};\n      rDst.values = inserts[i];\n    }\n\n    // account for defined names\n    this.workbook.definedNames.spliceRows(this.name, start, count, inserts.length);\n  }\n\n  // iterate over every row in the worksheet, including maybe empty rows\n  eachRow(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._rows.length;\n      for (let i = 1; i <= n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(row => {\n        if (row && row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  }\n\n  // return all rows as sparse array\n  getSheetValues() {\n    const rows = [];\n    this._rows.forEach(row => {\n      if (row) {\n        rows[row.number] = row.values;\n      }\n    });\n    return rows;\n  }\n\n  // =========================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this._rows[address.row - 1];\n    return row ? row.findCell(address.col) : undefined;\n  }\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.getRow(address.row);\n    return row.getCellEx(address);\n  }\n\n  // =========================================================================\n  // Merge\n\n  // convert the range defined by ['tl:br'], [tl,br] or [t,l,b,r] into a single 'merged' cell\n  mergeCells() {\n    const dimensions = new Range(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // check cells aren't already merged\n    _.each(this._merges, merge => {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    const master = this.getCell(dimensions.top, dimensions.left);\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        // merge all but the master cell\n        if (i > dimensions.top || j > dimensions.left) {\n          this.getCell(i, j).merge(master);\n        }\n      }\n    }\n\n    // index merge\n    this._merges[master.address] = dimensions;\n  }\n\n  _unMergeMaster(master) {\n    // master is always top left of a rectangle\n    const merge = this._merges[master.address];\n    if (merge) {\n      for (let i = merge.top; i <= merge.bottom; i++) {\n        for (let j = merge.left; j <= merge.right; j++) {\n          this.getCell(i, j).unmerge();\n        }\n      }\n      delete this._merges[master.address];\n    }\n  }\n\n  get hasMerges() {\n    // return true if this._merges has a merge object\n    return _.some(this._merges, Boolean);\n  }\n\n  // scan the range defined by ['tl:br'], [tl,br] or [t,l,b,r] and if any cell is part of a merge,\n  // un-merge the group. Note this function can affect multiple merges and merge-blocks are\n  // atomic - either they're all merged or all un-merged.\n  unMergeCells() {\n    const dimensions = new Range(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // find any cells in that range and unmerge them\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        const cell = this.findCell(i, j);\n        if (cell) {\n          if (cell.type === Enums.ValueType.Merge) {\n            // this cell merges to another master\n            this._unMergeMaster(cell.master);\n          } else if (this._merges[cell.address]) {\n            // this cell is a master\n            this._unMergeMaster(cell);\n          }\n        }\n      }\n    }\n  }\n\n  // ===========================================================================\n  // Shared/Array Formula\n  fillFormula(range, formula, results, shareType = 'shared') {\n    // Define formula for top-left cell and share to rest\n    const decoded = colCache.decode(range);\n    const {top, left, bottom, right} = decoded;\n    const width = right - left + 1;\n    const masterAddress = colCache.encodeAddress(top, left);\n    const isShared = shareType === 'shared';\n\n    // work out result accessor\n    let getResult;\n    if (typeof results === 'function') {\n      getResult = results;\n    } else if (Array.isArray(results)) {\n      if (Array.isArray(results[0])) {\n        getResult = (row, col) => results[row - top][col - left];\n      } else {\n        getResult = (row, col) => results[((row - top) * width) + (col - left)];\n      }\n    } else {\n      getResult = () => undefined;\n    }\n    let first = true;\n    for (let r = top; r <= bottom; r++) {\n      for (let c = left; c <= right; c++) {\n        if (first) {\n          this.getCell(r, c).value = {\n            shareType,\n            formula,\n            ref: range,\n            result: getResult(r, c),\n          };\n          first = false;\n        } else {\n          this.getCell(r, c).value = isShared ?\n            {\n              sharedFormula: masterAddress,\n              result: getResult(r, c),\n            } :\n            getResult(r, c);\n        }\n      }\n    }\n  }\n\n  // =========================================================================\n  // Images\n  addImage(imageId, range) {\n    const model = {\n      type: 'image',\n      imageId,\n      range,\n    };\n    this._media.push(new Image(this, model));\n  }\n\n  getImages() {\n    return this._media.filter(m => m.type === 'image');\n  }\n\n  addBackgroundImage(imageId) {\n    const model = {\n      type: 'background',\n      imageId,\n    };\n    this._media.push(new Image(this, model));\n  }\n\n  getBackgroundImageId() {\n    const image = this._media.find(m => m.type === 'background');\n    return image && image.imageId;\n  }\n\n  // =========================================================================\n  // Worksheet Protection\n  protect(password, options) {\n    // TODO: make this function truly async\n    // perhaps marshal to worker thread or something\n    return new Promise(resolve => {\n      this.sheetProtection = {\n        sheet: true,\n      };\n      if (password) {\n        this.sheetProtection.algorithmName = 'SHA-512';\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\n        this.sheetProtection.spinCount = 100000;\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(password, 'SHA512', this.sheetProtection.saltValue, this.sheetProtection.spinCount);\n      }\n      if (options) {\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\n      }\n      resolve();\n    });\n  }\n\n  unprotect() {\n    this.sheetProtection = null;\n  }\n\n  // =========================================================================\n  // Tables\n  addTable(model) {\n    const table = new Table(this, model);\n    this.tables[model.name] = table;\n    return table;\n  }\n\n  getTable(name) {\n    return this.tables[name];\n  }\n\n  removeTable(name) {\n    delete this.tables[name];\n  }\n\n  getTables() {\n    return Object.values(this.tables);\n  }\n\n  // ===========================================================================\n  // Conditional Formatting\n  addConditionalFormatting(cf) {\n    this.conditionalFormattings.push(cf);\n  }\n\n  removeConditionalFormatting(filter) {\n    if (typeof filter === 'number') {\n      this.conditionalFormattings.splice(filter, 1);\n    } else if (filter instanceof Function) {\n      this.conditionalFormattings = this.conditionalFormattings.filter(filter);\n    } else {\n      this.conditionalFormattings = [];\n    }\n  }\n\n  // ===========================================================================\n  // Deprecated\n  get tabColor() {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    return this.properties.tabColor;\n  }\n\n  set tabColor(value) {\n    // eslint-disable-next-line no-console\n    console.trace('worksheet.tabColor property is now deprecated. Please use worksheet.properties.tabColor');\n    this.properties.tabColor = value;\n  }\n\n  // ===========================================================================\n  // Model\n\n  get model() {\n    const model = {\n      id: this.id,\n      name: this.name,\n      dataValidations: this.dataValidations.model,\n      properties: this.properties,\n      state: this.state,\n      pageSetup: this.pageSetup,\n      headerFooter: this.headerFooter,\n      rowBreaks: this.rowBreaks,\n      views: this.views,\n      autoFilter: this.autoFilter,\n      media: this._media.map(medium => medium.model),\n      sheetProtection: this.sheetProtection,\n      tables: Object.values(this.tables).map(table => table.model),\n      conditionalFormattings: this.conditionalFormattings,\n    };\n\n    // =================================================\n    // columns\n    model.cols = Column.toModel(this.columns);\n\n    // ==========================================================\n    // Rows\n    const rows = (model.rows = []);\n    const dimensions = (model.dimensions = new Range());\n    this._rows.forEach(row => {\n      const rowModel = row && row.model;\n      if (rowModel) {\n        dimensions.expand(rowModel.number, rowModel.min, rowModel.number, rowModel.max);\n        rows.push(rowModel);\n      }\n    });\n\n    // ==========================================================\n    // Merges\n    model.merges = [];\n    _.each(this._merges, merge => {\n      model.merges.push(merge.range);\n    });\n\n    return model;\n  }\n\n  _parseRows(model) {\n    this._rows = [];\n    model.rows.forEach(rowModel => {\n      const row = new Row(this, rowModel.number);\n      this._rows[row.number - 1] = row;\n      row.model = rowModel;\n    });\n  }\n\n  _parseMergeCells(model) {\n    _.each(model.mergeCells, merge => {\n      this.mergeCells(merge);\n    });\n  }\n\n  set model(value) {\n    this.name = value.name;\n    this._columns = Column.fromModel(this, value.cols);\n    this._parseRows(value);\n\n    this._parseMergeCells(value);\n    this.dataValidations = new DataValidations(value.dataValidations);\n    this.properties = value.properties;\n    this.pageSetup = value.pageSetup;\n    this.headerFooter = value.headerFooter;\n    this.views = value.views;\n    this.autoFilter = value.autoFilter;\n    this._media = value.media.map(medium => new Image(this, medium));\n    this.sheetProtection = value.sheetProtection;\n    this.tables = value.tables.reduce((tables, table) => {\n      const t = new Table();\n      t.model = table;\n      tables[table.name] = t;\n      return tables;\n    }, {});\n    this.conditionalFormattings = value.conditionalFormattings;\n  }\n}\n\nmodule.exports = Worksheet;\n"],"mappings":"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"}