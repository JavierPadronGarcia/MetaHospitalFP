{"version":3,"file":"defined-names.js","names":["_","require","colCache","CellMatrix","Range","rangeRegexp","DefinedNames","matrixMap","name","matrix","locStr","location","decodeEx","addEx","getMatrix","top","col","left","right","row","bottom","address","sheetName","n2l","addCellEx","removeEx","removeCellEx","each","callback","forEach","cell","addressStr","getNamesEx","map","findCellEx","filter","Boolean","mark","range","x","y","vGrow","yy","edge","c","findCellAt","hGrow","xx","cells","push","i","length","ranges","_explore","$shortRange","forEachInSheet","start","numDelete","numInsert","spliceRows","normaliseMatrix","spliceColumns","getRanges","definedName","value","rangeStr","test","split","pop","addCell","module","exports"],"sources":["../../../lib/doc/defined-names.js"],"sourcesContent":["'use strict';\n\nconst _ = require('../utils/under-dash');\nconst colCache = require('../utils/col-cache');\nconst CellMatrix = require('../utils/cell-matrix');\nconst Range = require('./range');\n\nconst rangeRegexp = /[$](\\w+)[$](\\d+)(:[$](\\w+)[$](\\d+))?/;\n\nclass DefinedNames {\n  constructor() {\n    this.matrixMap = {};\n  }\n\n  getMatrix(name) {\n    const matrix = this.matrixMap[name] || (this.matrixMap[name] = new CellMatrix());\n    return matrix;\n  }\n\n  // add a name to a cell. locStr in the form SheetName!$col$row or SheetName!$c1$r1:$c2:$r2\n  add(locStr, name) {\n    const location = colCache.decodeEx(locStr);\n    this.addEx(location, name);\n  }\n\n  addEx(location, name) {\n    const matrix = this.getMatrix(name);\n    if (location.top) {\n      for (let col = location.left; col <= location.right; col++) {\n        for (let row = location.top; row <= location.bottom; row++) {\n          const address = {\n            sheetName: location.sheetName,\n            address: colCache.n2l(col) + row,\n            row,\n            col,\n          };\n\n          matrix.addCellEx(address);\n        }\n      }\n    } else {\n      matrix.addCellEx(location);\n    }\n  }\n\n  remove(locStr, name) {\n    const location = colCache.decodeEx(locStr);\n    this.removeEx(location, name);\n  }\n\n  removeEx(location, name) {\n    const matrix = this.getMatrix(name);\n    matrix.removeCellEx(location);\n  }\n\n  removeAllNames(location) {\n    _.each(this.matrixMap, matrix => {\n      matrix.removeCellEx(location);\n    });\n  }\n\n  forEach(callback) {\n    _.each(this.matrixMap, (matrix, name) => {\n      matrix.forEach(cell => {\n        callback(name, cell);\n      });\n    });\n  }\n\n  // get all the names of a cell\n  getNames(addressStr) {\n    return this.getNamesEx(colCache.decodeEx(addressStr));\n  }\n\n  getNamesEx(address) {\n    return _.map(this.matrixMap, (matrix, name) => matrix.findCellEx(address) && name).filter(Boolean);\n  }\n\n  _explore(matrix, cell) {\n    cell.mark = false;\n    const {sheetName} = cell;\n\n    const range = new Range(cell.row, cell.col, cell.row, cell.col, sheetName);\n    let x;\n    let y;\n\n    // grow vertical - only one col to worry about\n    function vGrow(yy, edge) {\n      const c = matrix.findCellAt(sheetName, yy, cell.col);\n      if (!c || !c.mark) {\n        return false;\n      }\n      range[edge] = yy;\n      c.mark = false;\n      return true;\n    }\n    for (y = cell.row - 1; vGrow(y, 'top'); y--);\n    for (y = cell.row + 1; vGrow(y, 'bottom'); y++);\n\n    // grow horizontal - ensure all rows can grow\n    function hGrow(xx, edge) {\n      const cells = [];\n      for (y = range.top; y <= range.bottom; y++) {\n        const c = matrix.findCellAt(sheetName, y, xx);\n        if (c && c.mark) {\n          cells.push(c);\n        } else {\n          return false;\n        }\n      }\n      range[edge] = xx;\n      for (let i = 0; i < cells.length; i++) {\n        cells[i].mark = false;\n      }\n      return true;\n    }\n    for (x = cell.col - 1; hGrow(x, 'left'); x--);\n    for (x = cell.col + 1; hGrow(x, 'right'); x++);\n\n    return range;\n  }\n\n  getRanges(name, matrix) {\n    matrix = matrix || this.matrixMap[name];\n\n    if (!matrix) {\n      return {name, ranges: []};\n    }\n\n    // mark and sweep!\n    matrix.forEach(cell => {\n      cell.mark = true;\n    });\n    const ranges = matrix\n      .map(cell => cell.mark && this._explore(matrix, cell))\n      .filter(Boolean)\n      .map(range => range.$shortRange);\n\n    return {\n      name,\n      ranges,\n    };\n  }\n\n  normaliseMatrix(matrix, sheetName) {\n    // some of the cells might have shifted on specified sheet\n    // need to reassign rows, cols\n    matrix.forEachInSheet(sheetName, (cell, row, col) => {\n      if (cell) {\n        if (cell.row !== row || cell.col !== col) {\n          cell.row = row;\n          cell.col = col;\n          cell.address = colCache.n2l(col) + row;\n        }\n      }\n    });\n  }\n\n  spliceRows(sheetName, start, numDelete, numInsert) {\n    _.each(this.matrixMap, matrix => {\n      matrix.spliceRows(sheetName, start, numDelete, numInsert);\n      this.normaliseMatrix(matrix, sheetName);\n    });\n  }\n\n  spliceColumns(sheetName, start, numDelete, numInsert) {\n    _.each(this.matrixMap, matrix => {\n      matrix.spliceColumns(sheetName, start, numDelete, numInsert);\n      this.normaliseMatrix(matrix, sheetName);\n    });\n  }\n\n  get model() {\n    // To get names per cell - just iterate over all names finding cells if they exist\n    return _.map(this.matrixMap, (matrix, name) => this.getRanges(name, matrix)).filter(definedName => definedName.ranges.length);\n  }\n\n  set model(value) {\n    // value is [ { name, ranges }, ... ]\n    const matrixMap = (this.matrixMap = {});\n    value.forEach(definedName => {\n      const matrix = (matrixMap[definedName.name] = new CellMatrix());\n      definedName.ranges.forEach(rangeStr => {\n        if (rangeRegexp.test(rangeStr.split('!').pop() || '')) {\n          matrix.addCell(rangeStr);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = DefinedNames;\n"],"mappings":"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"}