{"version":3,"file":"row.js","names":["_","require","Enums","colCache","Cell","Row","worksheet","number","_worksheet","_number","_cells","style","outlineLevel","_commitRow","colNumber","address","cell","col","column","getColumn","getColumnKey","l2n","getCellEx","encodeAddress","row","start","count","inserts","Array","prototype","slice","call","arguments","nKeep","nExpand","length","nEnd","i","cSrc","cDst","getCell","value","undefined","options","iteratee","includeEmpty","n","forEach","index","type","ValueType","Null","lft","rght","ws","left","Math","max","right","pb","id","man","min","rowBreaks","push","values","offset","hasOwnProperty","item","eachColumnKey","key","some","eachCell","name","numFmt","_applyStyle","font","alignment","protection","border","fill","_hidden","_outlineLevel","properties","outlineLevelRow","cells","cellModel","model","height","hidden","collapsed","Error","previousAddress","Types","Merge","decodeAddress","$col$row","n2l","JSON","parse","stringify","module","exports"],"sources":["../../../lib/doc/row.js"],"sourcesContent":["'use strict';\n\nconst _ = require('../utils/under-dash');\n\nconst Enums = require('./enums');\nconst colCache = require('./../utils/col-cache');\nconst Cell = require('./cell');\n\nclass Row {\n  constructor(worksheet, number) {\n    this._worksheet = worksheet;\n    this._number = number;\n    this._cells = [];\n    this.style = {};\n    this.outlineLevel = 0;\n  }\n\n  // return the row number\n  get number() {\n    return this._number;\n  }\n\n  get worksheet() {\n    return this._worksheet;\n  }\n\n  // Inform Streaming Writer that this row (and all rows before it) are complete\n  // and ready to write. Has no effect on Worksheet document\n  commit() {\n    this._worksheet._commitRow(this); // eslint-disable-line no-underscore-dangle\n  }\n\n  // helps GC by breaking cyclic references\n  destroy() {\n    delete this._worksheet;\n    delete this._cells;\n    delete this.style;\n  }\n\n  findCell(colNumber) {\n    return this._cells[colNumber - 1];\n  }\n\n  // given {address, row, col}, find or create new cell\n  getCellEx(address) {\n    let cell = this._cells[address.col - 1];\n    if (!cell) {\n      const column = this._worksheet.getColumn(address.col);\n      cell = new Cell(this, column, address.address);\n      this._cells[address.col - 1] = cell;\n    }\n    return cell;\n  }\n\n  // get cell by key, letter or column number\n  getCell(col) {\n    if (typeof col === 'string') {\n      // is it a key?\n      const column = this._worksheet.getColumnKey(col);\n      if (column) {\n        col = column.number;\n      } else {\n        col = colCache.l2n(col);\n      }\n    }\n    return (\n      this._cells[col - 1] ||\n      this.getCellEx({\n        address: colCache.encodeAddress(this._number, col),\n        row: this._number,\n        col,\n      })\n    );\n  }\n\n  // remove cell(s) and shift all higher cells down by count\n  splice(start, count) {\n    const inserts = Array.prototype.slice.call(arguments, 2);\n    const nKeep = start + count;\n    const nExpand = inserts.length - count;\n    const nEnd = this._cells.length;\n    let i;\n    let cSrc;\n    let cDst;\n\n    if (nExpand < 0) {\n      // remove cells\n      for (i = start + inserts.length; i <= nEnd; i++) {\n        cDst = this._cells[i - 1];\n        cSrc = this._cells[i - nExpand - 1];\n        if (cSrc) {\n          cDst = this.getCell(i);\n          cDst.value = cSrc.value;\n          cDst.style = cSrc.style;\n        } else if (cDst) {\n          cDst.value = null;\n          cDst.style = {};\n        }\n      }\n    } else if (nExpand > 0) {\n      // insert new cells\n      for (i = nEnd; i >= nKeep; i--) {\n        cSrc = this._cells[i - 1];\n        if (cSrc) {\n          cDst = this.getCell(i + nExpand);\n          cDst.value = cSrc.value;\n          cDst.style = cSrc.style;\n        } else {\n          this._cells[i + nExpand - 1] = undefined;\n        }\n      }\n    }\n\n    // now add the new values\n    for (i = 0; i < inserts.length; i++) {\n      cDst = this.getCell(start + i);\n      cDst.value = inserts[i];\n      cDst.style = {};\n    }\n  }\n\n  // Iterate over all non-null cells in this row\n  eachCell(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = null;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._cells.length;\n      for (let i = 1; i <= n; i++) {\n        iteratee(this.getCell(i), i);\n      }\n    } else {\n      this._cells.forEach((cell, index) => {\n        if (cell && cell.type !== Enums.ValueType.Null) {\n          iteratee(cell, index + 1);\n        }\n      });\n    }\n  }\n\n  // ===========================================================================\n  // Page Breaks\n  addPageBreak(lft, rght) {\n    const ws = this._worksheet;\n    const left = Math.max(0, lft - 1) || 0;\n    const right = Math.max(0, rght - 1) || 16838;\n    const pb = {\n      id: this._number,\n      max: right,\n      man: 1,\n    };\n    if (left) pb.min = left;\n\n    ws.rowBreaks.push(pb);\n  }\n\n  // return a sparse array of cell values\n  get values() {\n    const values = [];\n    this._cells.forEach(cell => {\n      if (cell && cell.type !== Enums.ValueType.Null) {\n        values[cell.col] = cell.value;\n      }\n    });\n    return values;\n  }\n\n  // set the values by contiguous or sparse array, or by key'd object literal\n  set values(value) {\n    // this operation is not additive - any prior cells are removed\n    this._cells = [];\n    if (!value) {\n      // empty row\n    } else if (value instanceof Array) {\n      let offset = 0;\n      if (value.hasOwnProperty('0')) {\n        // contiguous array - start at column 1\n        offset = 1;\n      }\n      value.forEach((item, index) => {\n        if (item !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, index + offset),\n            row: this._number,\n            col: index + offset,\n          }).value = item;\n        }\n      });\n    } else {\n      // assume object with column keys\n      this._worksheet.eachColumnKey((column, key) => {\n        if (value[key] !== undefined) {\n          this.getCellEx({\n            address: colCache.encodeAddress(this._number, column.number),\n            row: this._number,\n            col: column.number,\n          }).value = value[key];\n        }\n      });\n    }\n  }\n\n  // returns true if the row includes at least one cell with a value\n  get hasValues() {\n    return _.some(this._cells, cell => cell && cell.type !== Enums.ValueType.Null);\n  }\n\n  get cellCount() {\n    return this._cells.length;\n  }\n\n  get actualCellCount() {\n    let count = 0;\n    this.eachCell(() => {\n      count++;\n    });\n    return count;\n  }\n\n  // get the min and max column number for the non-null cells in this row or null\n  get dimensions() {\n    let min = 0;\n    let max = 0;\n    this._cells.forEach(cell => {\n      if (cell && cell.type !== Enums.ValueType.Null) {\n        if (!min || min > cell.col) {\n          min = cell.col;\n        }\n        if (max < cell.col) {\n          max = cell.col;\n        }\n      }\n    });\n    return min > 0\n      ? {\n          min,\n          max,\n        }\n      : null;\n  }\n\n  // =========================================================================\n  // styles\n  _applyStyle(name, value) {\n    this.style[name] = value;\n    this._cells.forEach(cell => {\n      if (cell) {\n        cell[name] = value;\n      }\n    });\n    return value;\n  }\n\n  get numFmt() {\n    return this.style.numFmt;\n  }\n\n  set numFmt(value) {\n    this._applyStyle('numFmt', value);\n  }\n\n  get font() {\n    return this.style.font;\n  }\n\n  set font(value) {\n    this._applyStyle('font', value);\n  }\n\n  get alignment() {\n    return this.style.alignment;\n  }\n\n  set alignment(value) {\n    this._applyStyle('alignment', value);\n  }\n\n  get protection() {\n    return this.style.protection;\n  }\n\n  set protection(value) {\n    this._applyStyle('protection', value);\n  }\n\n  get border() {\n    return this.style.border;\n  }\n\n  set border(value) {\n    this._applyStyle('border', value);\n  }\n\n  get fill() {\n    return this.style.fill;\n  }\n\n  set fill(value) {\n    this._applyStyle('fill', value);\n  }\n\n  get hidden() {\n    return !!this._hidden;\n  }\n\n  set hidden(value) {\n    this._hidden = value;\n  }\n\n  get outlineLevel() {\n    return this._outlineLevel || 0;\n  }\n\n  set outlineLevel(value) {\n    this._outlineLevel = value;\n  }\n\n  get collapsed() {\n    return !!(this._outlineLevel && this._outlineLevel >= this._worksheet.properties.outlineLevelRow);\n  }\n\n  // =========================================================================\n  get model() {\n    const cells = [];\n    let min = 0;\n    let max = 0;\n    this._cells.forEach(cell => {\n      if (cell) {\n        const cellModel = cell.model;\n        if (cellModel) {\n          if (!min || min > cell.col) {\n            min = cell.col;\n          }\n          if (max < cell.col) {\n            max = cell.col;\n          }\n          cells.push(cellModel);\n        }\n      }\n    });\n\n    return this.height || cells.length\n      ? {\n          cells,\n          number: this.number,\n          min,\n          max,\n          height: this.height,\n          style: this.style,\n          hidden: this.hidden,\n          outlineLevel: this.outlineLevel,\n          collapsed: this.collapsed,\n        }\n      : null;\n  }\n\n  set model(value) {\n    if (value.number !== this._number) {\n      throw new Error('Invalid row number in model');\n    }\n    this._cells = [];\n    let previousAddress;\n    value.cells.forEach(cellModel => {\n      switch (cellModel.type) {\n        case Cell.Types.Merge:\n          // special case - don't add this types\n          break;\n        default: {\n          let address;\n          if (cellModel.address) {\n            address = colCache.decodeAddress(cellModel.address);\n          } else if (previousAddress) {\n            // This is a <c> element without an r attribute\n            // Assume that it's the cell for the next column\n            const {row} = previousAddress;\n            const col = previousAddress.col + 1;\n            address = {\n              row,\n              col,\n              address: colCache.encodeAddress(row, col),\n              $col$row: `$${colCache.n2l(col)}$${row}`,\n            };\n          }\n          previousAddress = address;\n          const cell = this.getCellEx(address);\n          cell.model = cellModel;\n          break;\n        }\n      }\n    });\n\n    if (value.height) {\n      this.height = value.height;\n    } else {\n      delete this.height;\n    }\n\n    this.hidden = value.hidden;\n    this.outlineLevel = value.outlineLevel || 0;\n\n    this.style = (value.style && JSON.parse(JSON.stringify(value.style))) || {};\n  }\n}\n\nmodule.exports = Row;\n"],"mappings":"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"}