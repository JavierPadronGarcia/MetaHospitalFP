{"version":3,"file":"worksheet-reader.js","names":["require","EventEmitter","Sax","_","utils","colCache","Dimensions","Row","Column","WorksheetReader","workbook","id","name","_columns","_keys","_dimensions","Error","c","col","l2n","length","n","push","key","value","f","each","row","emit","entry","options","emitSheet","emitHyperlinks","hyperlinks","worksheets","autodrain","sharedStrings","styles","properties","inCols","inRows","inHyperlinks","cols","current","parser","createStream","on","node","min","parseInt","attributes","max","width","parseFloat","styleId","style","r","ht","height","s","getStyleModel","ref","t","text","v","hyperlink","rId","fromModel","expandRow","_emitRow","address","decodeAddress","cell","getCell","formula","result","xmlDecode","index","sharedString","error","isDateFmt","numFmt","excelToDate","model","date1904","undefined","flowControl","createChild","pipe","sync","module","exports"],"sources":["../../../../lib/stream/xlsx/worksheet-reader.js"],"sourcesContent":["const {EventEmitter} = require('events');\nconst Sax = require('sax');\n\nconst _ = require('../../utils/under-dash');\nconst utils = require('../../utils/utils');\nconst colCache = require('../../utils/col-cache');\nconst Dimensions = require('../../doc/range');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nclass WorksheetReader extends EventEmitter {\n  constructor(workbook, id) {\n    super();\n\n    this.workbook = workbook;\n    this.id = id;\n\n    // and a name\n    this.name = `Sheet${this.id}`;\n\n    // column definitions\n    this._columns = null;\n    this._keys = {};\n\n    // keep a record of dimensions\n    this._dimensions = new Dimensions();\n  }\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  }\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) {\n        return col;\n      }\n\n      // otherise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  // =========================================================================\n  // Read\n\n  _emitRow(row) {\n    this.emit('row', row);\n  }\n\n  read(entry, options) {\n    let emitSheet = false;\n    let emitHyperlinks = false;\n    let hyperlinks = null;\n    switch (options.worksheets) {\n      case 'emit':\n        emitSheet = true;\n        break;\n      case 'prep':\n        break;\n      default:\n        break;\n    }\n    switch (options.hyperlinks) {\n      case 'emit':\n        emitHyperlinks = true;\n        break;\n      case 'cache':\n        this.hyperlinks = hyperlinks = {};\n        break;\n      default:\n        break;\n    }\n    if (!emitSheet && !emitHyperlinks && !hyperlinks) {\n      entry.autodrain();\n      this.emit('finished');\n      return;\n    }\n\n    // references\n    const {sharedStrings} = this.workbook;\n    const {styles} = this.workbook;\n    const {properties} = this.workbook;\n\n    // xml position\n    let inCols = false;\n    let inRows = false;\n    let inHyperlinks = false;\n\n    // parse state\n    let cols = null;\n    let row = null;\n    let c = null;\n    let current = null;\n\n    const parser = Sax.createStream(true, {});\n    parser.on('opentag', node => {\n      if (emitSheet) {\n        switch (node.name) {\n          case 'cols':\n            inCols = true;\n            cols = [];\n            break;\n          case 'sheetData':\n            inRows = true;\n            break;\n\n          case 'col':\n            if (inCols) {\n              cols.push({\n                min: parseInt(node.attributes.min, 10),\n                max: parseInt(node.attributes.max, 10),\n                width: parseFloat(node.attributes.width),\n                styleId: parseInt(node.attributes.style || '0', 10),\n              });\n            }\n            break;\n\n          case 'row':\n            if (inRows) {\n              const r = parseInt(node.attributes.r, 10);\n              row = new Row(this, r);\n              if (node.attributes.ht) {\n                row.height = parseFloat(node.attributes.ht);\n              }\n              if (node.attributes.s) {\n                const styleId = parseInt(node.attributes.s, 10);\n                const style = styles.getStyleModel(styleId);\n                if (style) {\n                  row.style = style;\n                }\n              }\n            }\n            break;\n          case 'c':\n            if (row) {\n              c = {\n                ref: node.attributes.r,\n                s: parseInt(node.attributes.s, 10),\n                t: node.attributes.t,\n              };\n            }\n            break;\n          case 'f':\n            if (c) {\n              current = c.f = {text: ''};\n            }\n            break;\n          case 'v':\n            if (c) {\n              current = c.v = {text: ''};\n            }\n            break;\n          case 'mergeCell':\n            break;\n          default:\n            break;\n        }\n      }\n\n      // =================================================================\n      //\n      if (emitHyperlinks || hyperlinks) {\n        switch (node.name) {\n          case 'hyperlinks':\n            inHyperlinks = true;\n            break;\n          case 'hyperlink':\n            if (inHyperlinks) {\n              const hyperlink = {\n                ref: node.attributes.ref,\n                rId: node.attributes['r:id'],\n              };\n              if (emitHyperlinks) {\n                this.emit('hyperlink', hyperlink);\n              } else {\n                hyperlinks[hyperlink.ref] = hyperlink;\n              }\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    // only text data is for sheet values\n    parser.on('text', text => {\n      if (emitSheet) {\n        if (current) {\n          current.text += text;\n        }\n      }\n    });\n\n    parser.on('closetag', name => {\n      if (emitSheet) {\n        switch (name) {\n          case 'cols':\n            inCols = false;\n            this._columns = Column.fromModel(cols);\n            break;\n          case 'sheetData':\n            inRows = false;\n            break;\n\n          case 'row':\n            this._dimensions.expandRow(row);\n            this._emitRow(row);\n            row = null;\n            break;\n\n          case 'c':\n            if (row && c) {\n              const address = colCache.decodeAddress(c.ref);\n              const cell = row.getCell(address.col);\n              if (c.s) {\n                const style = styles.getStyleModel(c.s);\n                if (style) {\n                  cell.style = style;\n                }\n              }\n\n              if (c.f) {\n                const value = {\n                  formula: c.f.text,\n                };\n                if (c.v) {\n                  if (c.t === 'str') {\n                    value.result = utils.xmlDecode(c.v.text);\n                  } else {\n                    value.result = parseFloat(c.v.text);\n                  }\n                }\n                cell.value = value;\n              } else if (c.v) {\n                switch (c.t) {\n                  case 's': {\n                    const index = parseInt(c.v.text, 10);\n                    if (sharedStrings) {\n                      cell.value = sharedStrings[index];\n                    } else {\n                      cell.value = {\n                        sharedString: index,\n                      };\n                    }\n                    break;\n                  }\n\n                  case 'str':\n                    cell.value = utils.xmlDecode(c.v.text);\n                    break;\n\n                  case 'e':\n                    cell.value = {error: c.v.text};\n                    break;\n\n                  case 'b':\n                    cell.value = parseInt(c.v.text, 10) !== 0;\n                    break;\n\n                  default:\n                    if (utils.isDateFmt(cell.numFmt)) {\n                      cell.value = utils.excelToDate(parseFloat(c.v.text), properties.model.date1904);\n                    } else {\n                      cell.value = parseFloat(c.v.text);\n                    }\n                    break;\n                }\n              }\n              if (hyperlinks) {\n                const hyperlink = hyperlinks[c.ref];\n                if (hyperlink) {\n                  cell.text = cell.value;\n                  cell.value = undefined;\n                  cell.hyperlink = hyperlink;\n                }\n              }\n              c = null;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n      if (emitHyperlinks || hyperlinks) {\n        switch (name) {\n          case 'hyperlinks':\n            inHyperlinks = false;\n            break;\n          default:\n            break;\n        }\n      }\n    });\n    parser.on('error', error => {\n      this.emit('error', error);\n    });\n    parser.on('end', () => {\n      this.emit('finished');\n    });\n\n    // create a down-stream flow-control to regulate the stream\n    const flowControl = this.workbook.flowControl.createChild();\n    flowControl.pipe(\n      parser,\n      {sync: true}\n    );\n    entry.pipe(flowControl);\n  }\n}\n\nmodule.exports = WorksheetReader;\n"],"mappings":"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"}