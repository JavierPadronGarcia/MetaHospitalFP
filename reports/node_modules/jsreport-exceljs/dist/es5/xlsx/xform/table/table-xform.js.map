{"version":3,"file":"table-xform.js","names":["XmlStream","require","BaseXform","ListXform","AutoFilterXform","TableColumnXform","TableStyleInfoXform","TableXform","map","autoFilter","tableColumns","tag","count","empty","childXform","tableStyleInfo","model","options","prepare","columns","xmlStream","openXml","StdDocAttributes","openNode","TABLE_ATTRIBUTES","id","name","displayName","ref","tableRef","totalsRowCount","totalsRow","undefined","totalsRowShown","headerRowCount","headerRow","render","style","closeNode","node","parser","parseOpen","attributes","reset","text","parseText","parseClose","autoFilterRef","forEach","column","index","filterButton","dxfId","styles","getDxfStyle","module","exports"],"sources":["../../../../../lib/xlsx/xform/table/table-xform.js"],"sourcesContent":["const XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst ListXform = require('../list-xform');\n\nconst AutoFilterXform = require('./auto-filter-xform');\nconst TableColumnXform = require('./table-column-xform');\nconst TableStyleInfoXform = require('./table-style-info-xform');\n\nclass TableXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      autoFilter: new AutoFilterXform(),\n      tableColumns: new ListXform({\n        tag: 'tableColumns',\n        count: true,\n        empty: true,\n        childXform: new TableColumnXform(),\n      }),\n      tableStyleInfo: new TableStyleInfoXform(),\n    };\n  }\n\n  prepare(model, options) {\n    this.map.autoFilter.prepare(model);\n    this.map.tableColumns.prepare(model.columns, options);\n  }\n\n  get tag() {\n    return 'table';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode(this.tag, {\n      ...TableXform.TABLE_ATTRIBUTES,\n      id: model.id,\n      name: model.name,\n      displayName: model.displayName || model.name,\n      ref: model.tableRef,\n      totalsRowCount: model.totalsRow ? '1' : undefined,\n      totalsRowShown: model.totalsRow ? undefined: '1',\n      headerRowCount: model.headerRow ? '1' : '0',\n    });\n\n    this.map.autoFilter.render(xmlStream, model);\n    this.map.tableColumns.render(xmlStream, model.columns);\n    this.map.tableStyleInfo.render(xmlStream, model.style);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    const {name, attributes} = node;\n    switch (name) {\n      case this.tag:\n        this.reset();\n        this.model = {\n          name: attributes.name,\n          displayName: attributes.displayName || attributes.name,\n          tableRef: attributes.ref,\n          totalsRow: attributes.totalsRowCount === '1',\n          headerRow: attributes.headerRowCount === '1',\n        };\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        this.model.columns = this.map.tableColumns.model;\n        if (this.map.autoFilter.model) {\n          this.model.autoFilterRef = this.map.autoFilter.model.autoFilterRef;\n          this.map.autoFilter.model.columns.forEach((column, index) => {\n            this.model.columns[index].filterButton = column.filterButton;\n          });\n        }\n        this.model.style = this.map.tableStyleInfo.model;\n        return false;\n      default:\n        // could be some unrecognised tags\n        return true;\n    }\n  }\n\n  reconcile(model, options) {\n    // fetch the dfxs from styles\n    model.columns.forEach(column => {\n      if (column.dxfId !== undefined) {\n        column.style = options.styles.getDxfStyle(column.dxfId);\n      }\n    });\n  }\n}\n\n\nTableXform.TABLE_ATTRIBUTES = {\n  'xmlns': 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n  'mc:Ignorable': 'xr xr3',\n  'xmlns:xr': 'http://schemas.microsoft.com/office/spreadsheetml/2014/revision',\n  'xmlns:xr3': 'http://schemas.microsoft.com/office/spreadsheetml/2016/revision3',\n  // 'xr:uid': '{00000000-000C-0000-FFFF-FFFF00000000}',\n};\n\nmodule.exports = TableXform;\n"],"mappings":"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"}