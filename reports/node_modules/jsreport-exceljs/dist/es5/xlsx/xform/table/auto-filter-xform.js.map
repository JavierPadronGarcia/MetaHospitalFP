{"version":3,"file":"auto-filter-xform.js","names":["BaseXform","require","FilterColumnXform","AutoFilterXform","map","filterColumn","model","columns","forEach","column","index","prepare","xmlStream","openNode","tag","ref","autoFilterRef","render","closeNode","node","parser","parseOpen","name","attributes","Error","JSON","stringify","text","parseText","parseClose","push","undefined","module","exports"],"sources":["../../../../../lib/xlsx/xform/table/auto-filter-xform.js"],"sourcesContent":["const BaseXform = require('../base-xform');\n\nconst FilterColumnXform = require('./filter-column-xform');\n\nclass AutoFilterXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      filterColumn: new FilterColumnXform(),\n    };\n  }\n\n  get tag() {\n    return 'autoFilter';\n  }\n\n  prepare(model) {\n    model.columns.forEach((column, index) => {\n      this.map.filterColumn.prepare(column, {index});\n    });\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(\n      this.tag,\n      {ref: model.autoFilterRef}\n    );\n\n    model.columns.forEach(column => {\n      this.map.filterColumn.render(xmlStream, column);\n    });\n\n    xmlStream.closeNode();\n    return true;\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          autoFilterRef: node.attributes.ref,\n          columns: [],\n        };\n        return true;\n\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parseOpen(node);\n          return true;\n        }\n        throw new Error(`Unexpected xml node in parseOpen: ${JSON.stringify(node)}`);\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.columns.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        throw new Error(`Unexpected xml node in parseClose: ${name}`);\n    }\n  }\n}\n\nmodule.exports = AutoFilterXform;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;IAEME,e;;;;;EACJ,2BAAc;IAAA;;IAAA;;IACZ;IAEA,MAAKC,GAAL,GAAW;MACTC,YAAY,EAAE,IAAIH,iBAAJ;IADL,CAAX;IAHY;EAMb;;;;SAED,eAAU;MACR,OAAO,YAAP;IACD;;;WAED,iBAAQI,KAAR,EAAe;MAAA;;MACbA,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsB,UAACC,MAAD,EAASC,KAAT,EAAmB;QACvC,MAAI,CAACN,GAAL,CAASC,YAAT,CAAsBM,OAAtB,CAA8BF,MAA9B,EAAsC;UAACC,KAAK,EAALA;QAAD,CAAtC;MACD,CAFD;IAGD;;;WAED,gBAAOE,SAAP,EAAkBN,KAAlB,EAAyB;MAAA;;MACvBM,SAAS,CAACC,QAAV,CACE,KAAKC,GADP,EAEE;QAACC,GAAG,EAAET,KAAK,CAACU;MAAZ,CAFF;MAKAV,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsB,UAAAC,MAAM,EAAI;QAC9B,MAAI,CAACL,GAAL,CAASC,YAAT,CAAsBY,MAAtB,CAA6BL,SAA7B,EAAwCH,MAAxC;MACD,CAFD;MAIAG,SAAS,CAACM,SAAV;MACA,OAAO,IAAP;IACD;;;WAED,mBAAUC,IAAV,EAAgB;MACd,IAAI,KAAKC,MAAT,EAAiB;QACf,KAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;QACA,OAAO,IAAP;MACD;;MACD,QAAQA,IAAI,CAACG,IAAb;QACE,KAAK,KAAKR,GAAV;UACE,KAAKR,KAAL,GAAa;YACXU,aAAa,EAAEG,IAAI,CAACI,UAAL,CAAgBR,GADpB;YAEXR,OAAO,EAAE;UAFE,CAAb;UAIA,OAAO,IAAP;;QAEF;UACE,KAAKa,MAAL,GAAc,KAAKhB,GAAL,CAASe,IAAI,CAACG,IAAd,CAAd;;UACA,IAAI,KAAKF,MAAT,EAAiB;YACf,KAAKC,SAAL,CAAeF,IAAf;YACA,OAAO,IAAP;UACD;;UACD,MAAM,IAAIK,KAAJ,6CAA+CC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA/C,EAAN;MAdJ;IAgBD;;;WAED,mBAAUQ,IAAV,EAAgB;MACd,IAAI,KAAKP,MAAT,EAAiB;QACf,KAAKA,MAAL,CAAYQ,SAAZ,CAAsBD,IAAtB;MACD;IACF;;;WAED,oBAAWL,IAAX,EAAiB;MACf,IAAI,KAAKF,MAAT,EAAiB;QACf,IAAI,CAAC,KAAKA,MAAL,CAAYS,UAAZ,CAAuBP,IAAvB,CAAL,EAAmC;UACjC,KAAKhB,KAAL,CAAWC,OAAX,CAAmBuB,IAAnB,CAAwB,KAAKV,MAAL,CAAYd,KAApC;UACA,KAAKc,MAAL,GAAcW,SAAd;QACD;;QACD,OAAO,IAAP;MACD;;MACD,QAAQT,IAAR;QACE,KAAK,KAAKR,GAAV;UACE,OAAO,KAAP;;QACF;UACE,MAAM,IAAIU,KAAJ,8CAAgDF,IAAhD,EAAN;MAJJ;IAMD;;;;EA5E2BtB,S;;AA+E9BgC,MAAM,CAACC,OAAP,GAAiB9B,eAAjB"}