{"version":3,"file":"styles-xform.js","names":["Enums","require","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","CellStyleXform","MruColorsXform","DxfXform","NUMFMT_BASE","StylesXform","initialise","map","numFmts","tag","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","dxfs","always","cellStyles","colors","numFmt","font","fill","border","styleXfs","cellStyle","style","color","tableStyles","STATIC_XFORMS","extLst","init","index","numFmtNextId","model","styles","stylesXfs","initIndex","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","weakMap","WeakMap","xmlStream","openXml","StdDocAttributes","openNode","STYLESHEET_ATTRIBUTES","length","forEach","numFmtXml","writeXml","closeNode","_addFont","size","theme","name","family","scheme","fontXml","fillXml","borderXml","render","styleXml","node","parser","parseOpen","text","parseText","parseClose","undefined","add","_addFn","xform","getter","params","call","_addNumFmtStr","formatCode","_addStyleXfs","_addCellStyle","addDxfStyle","_addColor","numFmtIndex","id","cellType","has","get","ValueType","Number","Date","alignment","protection","styleId","set","getDefaultFmtCode","addStyle","group","part","push","allowDuplicates","xml","toXml","getDefaultFmtId","xmlns","c","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","StylesXformMock","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","Mock","module","exports"],"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst Enums = require('../../../doc/enums');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst FontXform = require('./font-xform');\nconst FillXform = require('./fill-xform');\nconst BorderXform = require('./border-xform');\nconst NumFmtXform = require('./numfmt-xform');\nconst StyleXform = require('./style-xform');\nconst CellStyleXform = require('./cell-style-xform');\nconst MruColorsXform = require('./mru-colors-xform');\nconst DxfXform = require('./dxf-xform');\n\n// custom numfmt ids start here\nconst NUMFMT_BASE = 164;\n\n// =============================================================================\n// StylesXform is used to generate and parse the styles.xml file\n// it manages the collections of fonts, number formats, alignments, etc\nclass StylesXform extends BaseXform {\n  constructor(initialise) {\n    super();\n\n    this.map = {\n      numFmts: new ListXform({tag: 'numFmts', count: true, childXform: new NumFmtXform()}),\n      fonts: new ListXform({tag: 'fonts', count: true, childXform: new FontXform(), $: {'x14ac:knownFonts': 1}}),\n      fills: new ListXform({tag: 'fills', count: true, childXform: new FillXform()}),\n      borders: new ListXform({tag: 'borders', count: true, childXform: new BorderXform()}),\n      cellStyleXfs: new ListXform({tag: 'cellStyleXfs', count: true, childXform: new StyleXform()}),\n      cellXfs: new ListXform({tag: 'cellXfs', count: true, childXform: new StyleXform({xfId: true})}),\n      dxfs: new ListXform({tag: 'dxfs', always: true, count: true, childXform: new DxfXform()}),\n      cellStyles: new ListXform({tag: 'cellStyles', always: true, count: true, childXform: new CellStyleXform()}),\n      colors: new ListXform({tag: 'colors', childXform: new MruColorsXform()}),\n\n      // for style manager\n      numFmt: new NumFmtXform(),\n      font: new FontXform(),\n      fill: new FillXform(),\n      border: new BorderXform(),\n      styleXfs: new StyleXform(),\n      cellStyle: new CellStyleXform(),\n      style: new StyleXform({xfId: true}),\n      color: new MruColorsXform(),\n\n      // cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\n      tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\n      extLst: StylesXform.STATIC_XFORMS.extLst,\n    };\n\n    if (initialise) {\n      // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\n      this.init();\n    }\n  }\n\n  initIndex() {\n    this.index = {\n      style: {},\n      styleXfs: {},\n      cellStyle: {},\n      numFmt: {},\n      numFmtNextId: 164, // start custom format ids here\n      font: {},\n      border: {},\n      fill: {},\n    };\n  }\n\n  init() {\n    // Prepare for Style Manager role\n    this.model = {\n      styles: [],\n      stylesXfs: [],\n      cellStyles: [],\n      colors: [],\n      numFmts: [],\n      fonts: [],\n      borders: [],\n      fills: [],\n      dxfs: [],\n    };\n\n    this.initIndex();\n\n    // default (zero) border\n    this._addBorder({});\n\n    // add default (all zero) style\n    this._addStyle({numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0});\n\n    // add default fills\n    this._addFill({type: 'pattern', pattern: 'none'});\n    this._addFill({type: 'pattern', pattern: 'gray125'});\n\n    this.weakMap = new WeakMap();\n  }\n\n  render(xmlStream, model) {\n    model = model || this.model;\n    //\n    //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n\n    xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\n\n    if (this.index) {\n      // model has been built by style manager role (contains xml)\n      if (model.numFmts && model.numFmts.length) {\n        xmlStream.openNode('numFmts', {count: model.numFmts.length});\n        model.numFmts.forEach(numFmtXml => {\n          xmlStream.writeXml(numFmtXml);\n        });\n        xmlStream.closeNode();\n      }\n\n      if (!model.fonts.length) {\n        // default (zero) font\n        this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n      }\n      xmlStream.openNode('fonts', {count: model.fonts.length, 'x14ac:knownFonts': 1});\n      model.fonts.forEach(fontXml => {\n        xmlStream.writeXml(fontXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('fills', {count: model.fills.length});\n      model.fills.forEach(fillXml => {\n        xmlStream.writeXml(fillXml);\n      });\n      xmlStream.closeNode();\n\n      xmlStream.openNode('borders', {count: model.borders.length});\n      model.borders.forEach(borderXml => {\n        xmlStream.writeXml(borderXml);\n      });\n      xmlStream.closeNode();\n\n      if (model.stylesXfs.length) {\n        xmlStream.openNode('cellStyleXfs', {count: model.stylesXfs.length});\n        model.stylesXfs.forEach(styleXfs => {\n          xmlStream.writeXml(styleXfs);\n        });\n        xmlStream.closeNode();\n      } else {\n        this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n      }\n\n      xmlStream.openNode('cellXfs', {count: model.styles.length});\n      model.styles.forEach(styleXml => {\n        xmlStream.writeXml(styleXml);\n      });\n      xmlStream.closeNode();\n    } else {\n      // model is plain JSON and needs to be xformed\n      this.map.numFmts.render(xmlStream, model.numFmts);\n      this.map.fonts.render(xmlStream, model.fonts);\n      this.map.fills.render(xmlStream, model.fills);\n      this.map.borders.render(xmlStream, model.borders);\n      this.map.cellStyleXfs.render(xmlStream, [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}]);\n      this.map.cellXfs.render(xmlStream, model.styles);\n    }\n\n    if (model.cellStyles.length) {\n      xmlStream.openNode('cellStyles', {count: model.cellStyles.length});\n      model.cellStyles.forEach(cellStyle => {\n        xmlStream.writeXml(cellStyle);\n      });\n      xmlStream.closeNode();\n    } else {\n      StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\n    }\n\n    this.map.dxfs.render(xmlStream, model.dxfs);\n\n    StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\n\n    if (model.colors.length) {\n      xmlStream.openNode('colors');\n      model.colors.forEach((color) => {\n        xmlStream.writeXml(color);\n      });\n      xmlStream.closeNode();\n    }\n\n    StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'styleSheet':\n        this.initIndex();\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'styleSheet': {\n        this.model = {\n          styles: [],\n          stylesXfs: [],\n          cellStyles: [],\n          colors: [],\n          numFmts: [],\n          fonts: [],\n          borders: [],\n          fills: [],\n          dxfs: [],\n        };\n\n        // index numFmts\n        this.initIndex();\n\n        const add = (_addFn, xform, {getter, params = []} = {}) => {\n          if (xform.model && xform.model.length) {\n            // eslint-disable-next-line no-restricted-syntax\n            for (const model of xform.model) {\n              _addFn.call(this, ...[getter != null ? getter(model) : model], ...params);\n            }\n          }\n        };\n\n        add(this._addNumFmtStr, this.map.numFmts, {getter: (model) => model.formatCode, params: [true]});\n        add(this._addFont, this.map.fonts, {params: [true]});\n        add(this._addFill, this.map.fills, {params: [true]});\n        add(this._addBorder, this.map.borders, {params: [true]});\n        add(this._addStyleXfs, this.map.cellStyleXfs, {params: [true]});\n        add(this._addStyle, this.map.cellXfs, {params: [true]});\n        add(this._addCellStyle, this.map.cellStyles, {params: [true]});\n        add(this.addDxfStyle, this.map.dxfs, {params: [true]});\n        add(this._addColor, this.map.colors);\n\n        if (this.model.numFmts) {\n          const numFmtIndex = this.index.numFmt;\n          this.model.numFmts.forEach(numFmt => {\n            numFmtIndex[numFmt.id] = numFmt.formatCode;\n          });\n        }\n\n        return false;\n      }\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    if (!model) {\n      return 0;\n    }\n\n    // if we have no default font, add it here now\n    if (!this.model.fonts.length) {\n      // default (zero) font\n      this._addFont({size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'});\n    }\n\n    // if we have seen this style object before, assume it has the same styleId\n    if (this.weakMap && this.weakMap.has(model)) {\n      return this.weakMap.get(model);\n    }\n\n    const style = {};\n    cellType = cellType || Enums.ValueType.Number;\n\n    if (model.numFmt) {\n      style.numFmtId = this._addNumFmtStr(model.numFmt);\n    } else {\n      switch (cellType) {\n        case Enums.ValueType.Number:\n          style.numFmtId = this._addNumFmtStr('General');\n          break;\n        case Enums.ValueType.Date:\n          style.numFmtId = this._addNumFmtStr('mm-dd-yy');\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (model.font) {\n      style.fontId = this._addFont(model.font);\n    }\n\n    if (model.border) {\n      style.borderId = this._addBorder(model.border);\n    }\n\n    if (model.fill) {\n      style.fillId = this._addFill(model.fill);\n    }\n\n    if (model.alignment) {\n      style.alignment = model.alignment;\n    }\n\n    if (model.protection) {\n      style.protection = model.protection;\n    }\n\n    const styleId = this._addStyle(style);\n    if (this.weakMap) {\n      this.weakMap.set(model, styleId);\n    }\n    return styleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(id) {\n    // if the style doesn't exist return null\n    const style = this.model.styles[id];\n    if (!style) return null;\n\n    // have we built this model before?\n    let model = this.index.model[id];\n    if (model) return model;\n\n    // build a new model\n    model = this.index.model[id] = {};\n\n    // -------------------------------------------------------\n    // number format\n    if (style.numFmtId) {\n      const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\n      if (numFmt) {\n        model.numFmt = numFmt;\n      }\n    }\n\n    function addStyle(name, group, styleId) {\n      if (styleId || styleId === 0) {\n        const part = group[styleId];\n        if (part) {\n          model[name] = part;\n        }\n      }\n    }\n\n    addStyle('font', this.model.fonts, style.fontId);\n    addStyle('border', this.model.borders, style.borderId);\n    addStyle('fill', this.model.fills, style.fillId);\n\n    // -------------------------------------------------------\n    // alignment\n    if (style.alignment) {\n      model.alignment = style.alignment;\n    }\n\n    // -------------------------------------------------------\n    // protection\n    if (style.protection) {\n      model.protection = style.protection;\n    }\n\n    return model;\n  }\n\n  addDxfStyle(style) {\n    this.model.dxfs.push(style);\n    return this.model.dxfs.length - 1;\n  }\n\n  getDxfStyle(id) {\n    return this.model.dxfs[id];\n  }\n\n  // =========================================================================\n  // Private Interface\n  _addStyle(style, allowDuplicates) {\n    const xml = this.map.style.toXml(style);\n    let index = this.index.style[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.style[xml] = this.model.styles.length;\n      this.model.styles.push(xml);\n    }\n    return index;\n  }\n\n  _addStyleXfs(style, allowDuplicates) {\n    const xml = this.map.styleXfs.toXml(style);\n    let index = this.index.styleXfs[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.styleXfs[xml] = this.model.stylesXfs.length;\n      this.model.stylesXfs.push(xml);\n    }\n    return index;\n  }\n\n  _addCellStyle(style, allowDuplicates) {\n    const xml = this.map.cellStyle.toXml(style);\n    let index = this.index.cellStyle[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.cellStyle[xml] = this.model.cellStyles.length;\n      this.model.cellStyles.push(xml);\n    }\n    return index;\n  }\n\n  _addColor(style) {\n    const xml = this.map.color.toXml({\n      colors: style.colors,\n    });\n    this.model.colors.push(xml);\n  }\n\n  // =========================================================================\n  // Number Formats\n  _addNumFmtStr(formatCode, allowDuplicates) {\n    // check if default format\n    let index = NumFmtXform.getDefaultFmtId(formatCode);\n    if (index !== undefined) return index;\n\n    // check if already in\n    index = this.index.numFmt[formatCode];\n    if (index !== undefined && !allowDuplicates) return index;\n\n    index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\n    const xml = this.map.numFmt.toXml({id: index, formatCode});\n    this.model.numFmts.push(xml);\n    return index;\n  }\n\n  // =========================================================================\n  // Fonts\n  _addFont(font, allowDuplicates) {\n    const xml = this.map.font.toXml(font);\n    let index = this.index.font[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.font[xml] = this.model.fonts.length;\n      this.model.fonts.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Borders\n  _addBorder(border, allowDuplicates) {\n    const xml = this.map.border.toXml(border);\n    let index = this.index.border[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.border[xml] = this.model.borders.length;\n      this.model.borders.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n  // Fills\n  _addFill(fill, allowDuplicates) {\n    const xml = this.map.fill.toXml(fill);\n    let index = this.index.fill[xml];\n    if (index === undefined || allowDuplicates === true) {\n      index = this.index.fill[xml] = this.model.fills.length;\n      this.model.fills.push(xml);\n    }\n    return index;\n  }\n\n  // =========================================================================\n}\n\nStylesXform.STYLESHEET_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n  'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n  'mc:Ignorable': 'x14ac x16r2',\n  'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n  'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n};\nStylesXform.STATIC_XFORMS = {\n  cellStyles: new StaticXform({tag: 'cellStyles', $: {count: 1}, c: [{tag: 'cellStyle', $: {name: 'Normal', xfId: 0, builtinId: 0}}]}),\n  dxfs: new StaticXform({tag: 'dxfs', $: {count: 0}}),\n  tableStyles: new StaticXform({tag: 'tableStyles', $: {count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16'}}),\n  extLst: new StaticXform({\n    tag: 'extLst',\n    c: [\n      {\n        tag: 'ext',\n        $: {uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}', 'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main'},\n        c: [{tag: 'x14:slicerStyles', $: {defaultSlicerStyle: 'SlicerStyleLight1'}}],\n      },\n      {\n        tag: 'ext',\n        $: {uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}', 'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main'},\n        c: [{tag: 'x15:timelineStyles', $: {defaultTimelineStyle: 'TimeSlicerStyleLight1'}}],\n      },\n    ],\n  }),\n};\n\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\nclass StylesXformMock extends StylesXform {\n  constructor() {\n    super();\n\n    this.model = {\n      styles: [{numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0}],\n      stylesXfs: [],\n      cellStyles: [],\n      colors: [],\n      numFmts: [],\n      fonts: [{size: 11, color: {theme: 1}, name: 'Calibri', family: 2, scheme: 'minor'}],\n      borders: [{}],\n      fills: [{type: 'pattern', pattern: 'none'}, {type: 'pattern', pattern: 'gray125'}],\n    };\n  }\n\n  // =========================================================================\n  // Style Manager Interface\n\n  // override normal behaviour - consume and dispose\n  parseStream(stream) {\n    stream.autodrain();\n    return Promise.resolve();\n  }\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    switch (cellType) {\n      case Enums.ValueType.Date:\n        return this.dateStyleId;\n      default:\n        return 0;\n    }\n  }\n\n  get dateStyleId() {\n    if (!this._dateStyleId) {\n      const dateStyle = {\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\n      };\n      this._dateStyleId = this.model.styles.length;\n      this.model.styles.push(dateStyle);\n    }\n    return this._dateStyleId;\n  }\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(/* id */) {\n    return {};\n  }\n}\n\nStylesXform.Mock = StylesXformMock;\n\nmodule.exports = StylesXform;\n"],"mappings":"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"}