{"version":3,"file":"list-xform.js","names":["BaseXform","require","ListXform","options","tag","always","count","empty","$count","$","childXform","maxItems","model","forEach","childModel","index","prepare","xmlStream","length","openNode","addAttribute","render","closeNode","leafNode","node","parser","parseOpen","name","text","parseText","parseClose","push","undefined","Error","reconcile","module","exports"],"sources":["../../../../lib/xlsx/xform/list-xform.js"],"sourcesContent":["const BaseXform = require('./base-xform');\n\nclass ListXform extends BaseXform {\n  constructor(options) {\n    super();\n\n    this.tag = options.tag;\n    this.always = !!options.always;\n    this.count = options.count;\n    this.empty = options.empty;\n    this.$count = options.$count || 'count';\n    this.$ = options.$;\n    this.childXform = options.childXform;\n    this.maxItems = options.maxItems;\n  }\n\n  prepare(model, options) {\n    const {childXform} = this;\n    if (model) {\n      model.forEach((childModel, index) => {\n        options.index = index;\n        childXform.prepare(childModel, options);\n      });\n    }\n  }\n\n  render(xmlStream, model) {\n    if (this.always || (model && model.length)) {\n      xmlStream.openNode(this.tag, this.$);\n      if (this.count) {\n        xmlStream.addAttribute(this.$count, (model && model.length) || 0);\n      }\n\n      const {childXform} = this;\n      (model || []).forEach((childModel, index) => {\n        childXform.render(xmlStream, childModel, index);\n      });\n\n      xmlStream.closeNode();\n    } else if (this.empty) {\n      xmlStream.leafNode(this.tag);\n    }\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.model = [];\n        return true;\n      default:\n        if (this.childXform.parseOpen(node)) {\n          this.parser = this.childXform;\n          return true;\n        }\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.push(this.parser.model);\n        this.parser = undefined;\n\n        if (this.maxItems && this.model.length > this.maxItems) {\n          throw new Error(`Max ${this.childXform.tag} count exceeded`);\n        }\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  reconcile(model, options) {\n    if (model) {\n      const {childXform} = this;\n      model.forEach(childModel => {\n        childXform.reconcile(childModel, options);\n      });\n    }\n  }\n}\n\nmodule.exports = ListXform;\n"],"mappings":"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"}