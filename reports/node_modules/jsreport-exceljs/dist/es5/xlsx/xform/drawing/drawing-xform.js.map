{"version":3,"file":"drawing-xform.js","names":["colCache","require","XmlStream","BaseXform","TwoCellAnchorXform","OneCellAnchorXform","getAnchorType","model","range","decode","br","DrawingXform","map","anchors","forEach","item","index","anchorType","anchor","prepare","xmlStream","openXml","StdDocAttributes","openNode","tag","DRAWING_ATTRIBUTES","render","closeNode","node","parser","parseOpen","name","reset","text","parseText","parseClose","push","undefined","options","reconcile","module","exports"],"sources":["../../../../../lib/xlsx/xform/drawing/drawing-xform.js"],"sourcesContent":["const colCache = require('../../../utils/col-cache');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst TwoCellAnchorXform = require('./two-cell-anchor-xform');\nconst OneCellAnchorXform = require('./one-cell-anchor-xform');\n\nfunction getAnchorType(model) {\n  const range = typeof model.range === 'string' ? colCache.decode(model.range) : model.range;\n\n  return range.br ? 'xdr:twoCellAnchor' : 'xdr:oneCellAnchor';\n}\n\nclass DrawingXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'xdr:twoCellAnchor': new TwoCellAnchorXform(),\n      'xdr:oneCellAnchor': new OneCellAnchorXform(),\n    };\n  }\n\n  prepare(model) {\n    model.anchors.forEach((item, index) => {\n      item.anchorType = getAnchorType(item);\n      const anchor = this.map[item.anchorType];\n      anchor.prepare(item, {index});\n    });\n  }\n\n  get tag() {\n    return 'xdr:wsDr';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode(this.tag, DrawingXform.DRAWING_ATTRIBUTES);\n\n    model.anchors.forEach(item => {\n      const anchor = this.map[item.anchorType];\n      anchor.render(xmlStream, item);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        this.model = {\n          anchors: [],\n        };\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.anchors.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        // could be some unrecognised tags\n        return true;\n    }\n  }\n\n  reconcile(model, options) {\n    model.anchors.forEach(anchor => {\n      if (anchor.br) {\n        this.map['xdr:twoCellAnchor'].reconcile(anchor, options);\n      } else {\n        this.map['xdr:oneCellAnchor'].reconcile(anchor, options);\n      }\n    });\n  }\n}\n\n\nDrawingXform.DRAWING_ATTRIBUTES = {\n  'xmlns:xdr': 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing',\n  'xmlns:a': 'http://schemas.openxmlformats.org/drawingml/2006/main',\n};\n\nmodule.exports = DrawingXform;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,2BAAD,CAAzB;;AAEA,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMG,kBAAkB,GAAGH,OAAO,CAAC,yBAAD,CAAlC;;AACA,IAAMI,kBAAkB,GAAGJ,OAAO,CAAC,yBAAD,CAAlC;;AAEA,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,IAAMC,KAAK,GAAG,OAAOD,KAAK,CAACC,KAAb,KAAuB,QAAvB,GAAkCR,QAAQ,CAACS,MAAT,CAAgBF,KAAK,CAACC,KAAtB,CAAlC,GAAiED,KAAK,CAACC,KAArF;EAEA,OAAOA,KAAK,CAACE,EAAN,GAAW,mBAAX,GAAiC,mBAAxC;AACD;;IAEKC,Y;;;;;EACJ,wBAAc;IAAA;;IAAA;;IACZ;IAEA,MAAKC,GAAL,GAAW;MACT,qBAAqB,IAAIR,kBAAJ,EADZ;MAET,qBAAqB,IAAIC,kBAAJ;IAFZ,CAAX;IAHY;EAOb;;;;WAED,iBAAQE,KAAR,EAAe;MAAA;;MACbA,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsB,UAACC,IAAD,EAAOC,KAAP,EAAiB;QACrCD,IAAI,CAACE,UAAL,GAAkBX,aAAa,CAACS,IAAD,CAA/B;QACA,IAAMG,MAAM,GAAG,MAAI,CAACN,GAAL,CAASG,IAAI,CAACE,UAAd,CAAf;QACAC,MAAM,CAACC,OAAP,CAAeJ,IAAf,EAAqB;UAACC,KAAK,EAALA;QAAD,CAArB;MACD,CAJD;IAKD;;;SAED,eAAU;MACR,OAAO,UAAP;IACD;;;WAED,gBAAOI,SAAP,EAAkBb,KAAlB,EAAyB;MAAA;;MACvBa,SAAS,CAACC,OAAV,CAAkBnB,SAAS,CAACoB,gBAA5B;MACAF,SAAS,CAACG,QAAV,CAAmB,KAAKC,GAAxB,EAA6Bb,YAAY,CAACc,kBAA1C;MAEAlB,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsB,UAAAC,IAAI,EAAI;QAC5B,IAAMG,MAAM,GAAG,MAAI,CAACN,GAAL,CAASG,IAAI,CAACE,UAAd,CAAf;QACAC,MAAM,CAACQ,MAAP,CAAcN,SAAd,EAAyBL,IAAzB;MACD,CAHD;MAKAK,SAAS,CAACO,SAAV;IACD;;;WAED,mBAAUC,IAAV,EAAgB;MACd,IAAI,KAAKC,MAAT,EAAiB;QACf,KAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;QACA,OAAO,IAAP;MACD;;MACD,QAAQA,IAAI,CAACG,IAAb;QACE,KAAK,KAAKP,GAAV;UACE,KAAKQ,KAAL;UACA,KAAKzB,KAAL,GAAa;YACXM,OAAO,EAAE;UADE,CAAb;UAGA;;QACF;UACE,KAAKgB,MAAL,GAAc,KAAKjB,GAAL,CAASgB,IAAI,CAACG,IAAd,CAAd;;UACA,IAAI,KAAKF,MAAT,EAAiB;YACf,KAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;UACD;;UACD;MAZJ;;MAcA,OAAO,IAAP;IACD;;;WAED,mBAAUK,IAAV,EAAgB;MACd,IAAI,KAAKJ,MAAT,EAAiB;QACf,KAAKA,MAAL,CAAYK,SAAZ,CAAsBD,IAAtB;MACD;IACF;;;WAED,oBAAWF,IAAX,EAAiB;MACf,IAAI,KAAKF,MAAT,EAAiB;QACf,IAAI,CAAC,KAAKA,MAAL,CAAYM,UAAZ,CAAuBJ,IAAvB,CAAL,EAAmC;UACjC,KAAKxB,KAAL,CAAWM,OAAX,CAAmBuB,IAAnB,CAAwB,KAAKP,MAAL,CAAYtB,KAApC;UACA,KAAKsB,MAAL,GAAcQ,SAAd;QACD;;QACD,OAAO,IAAP;MACD;;MACD,QAAQN,IAAR;QACE,KAAK,KAAKP,GAAV;UACE,OAAO,KAAP;;QACF;UACE;UACA,OAAO,IAAP;MALJ;IAOD;;;WAED,mBAAUjB,KAAV,EAAiB+B,OAAjB,EAA0B;MAAA;;MACxB/B,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsB,UAAAI,MAAM,EAAI;QAC9B,IAAIA,MAAM,CAACR,EAAX,EAAe;UACb,MAAI,CAACE,GAAL,CAAS,mBAAT,EAA8B2B,SAA9B,CAAwCrB,MAAxC,EAAgDoB,OAAhD;QACD,CAFD,MAEO;UACL,MAAI,CAAC1B,GAAL,CAAS,mBAAT,EAA8B2B,SAA9B,CAAwCrB,MAAxC,EAAgDoB,OAAhD;QACD;MACF,CAND;IAOD;;;;EAvFwBnC,S;;AA2F3BQ,YAAY,CAACc,kBAAb,GAAkC;EAChC,aAAa,qEADmB;EAEhC,WAAW;AAFqB,CAAlC;AAKAe,MAAM,CAACC,OAAP,GAAiB9B,YAAjB"}