{"version":3,"file":"cf-rule-xform.js","names":["BaseXform","require","CompositeXform","Range","DatabarXform","ExtLstRefXform","FormulaXform","ColorScaleXform","IconSetXform","extIcons","getTextFormula","model","formulae","range","ref","tl","operator","text","undefined","getTimePeriodFormula","timePeriod","opType","attributes","type","CfRuleXform","map","dataBar","databarXform","extLst","extLstRefXform","formula","formulaXform","colorScale","colorScaleXform","iconSet","iconSetXform","xmlStream","renderExpression","renderCellIs","renderTop10","renderAboveAverage","renderDataBar","renderColorScale","renderIconSet","renderText","renderTimePeriod","openNode","tag","dxfId","priority","render","closeNode","forEach","leafNode","percent","toBoolAttribute","bottom","rank","toIntValue","aboveAverage","isPrimitive","toStringAttribute","toBoolValue","name","parser","Object","assign","push","rule","custom","module","exports"],"sources":["../../../../../../lib/xlsx/xform/sheet/cf/cf-rule-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\nconst CompositeXform = require('../../composite-xform');\n\nconst Range = require('../../../../doc/range');\n\nconst DatabarXform = require('./databar-xform');\nconst ExtLstRefXform = require('./ext-lst-ref-xform');\nconst FormulaXform = require('./formula-xform');\nconst ColorScaleXform = require('./color-scale-xform');\nconst IconSetXform = require('./icon-set-xform');\n\nconst extIcons = {\n  '3Triangles': true,\n  '3Stars': true,\n  '5Boxes': true,\n};\n\nconst getTextFormula = model => {\n  if (model.formulae && model.formulae[0]) {\n    return model.formulae[0];\n  }\n\n  const range = new Range(model.ref);\n  const {tl} = range;\n  switch (model.operator) {\n    case 'containsText':\n      return `NOT(ISERROR(SEARCH(\"${model.text}\",${tl})))`;\n    case 'containsBlanks':\n      return `LEN(TRIM(${tl}))=0`;\n    case 'notContainsBlanks':\n      return `LEN(TRIM(${tl}))>0`;\n    case 'containsErrors':\n      return `ISERROR(${tl})`;\n    case 'notContainsErrors':\n      return `NOT(ISERROR(${tl}))`;\n    default:\n      return undefined;\n  }\n};\n\nconst getTimePeriodFormula = model => {\n  if (model.formulae && model.formulae[0]) {\n    return model.formulae[0];\n  }\n\n  const range = new Range(model.ref);\n  const {tl} = range;\n  switch (model.timePeriod) {\n    case 'thisWeek':\n      return `AND(TODAY()-ROUNDDOWN(${tl},0)<=WEEKDAY(TODAY())-1,ROUNDDOWN(${tl},0)-TODAY()<=7-WEEKDAY(TODAY()))`;\n    case 'lastWeek':\n      return `AND(TODAY()-ROUNDDOWN(${tl},0)>=(WEEKDAY(TODAY())),TODAY()-ROUNDDOWN(${tl},0)<(WEEKDAY(TODAY())+7))`;\n    case 'nextWeek':\n      return `AND(ROUNDDOWN(${tl},0)-TODAY()>(7-WEEKDAY(TODAY())),ROUNDDOWN(${tl},0)-TODAY()<(15-WEEKDAY(TODAY())))`;\n    case 'yesterday':\n      return `FLOOR(${tl},1)=TODAY()-1`;\n    case 'today':\n      return `FLOOR(${tl},1)=TODAY()`;\n    case 'tomorrow':\n      return `FLOOR(${tl},1)=TODAY()+1`;\n    case 'last7Days':\n      return `AND(TODAY()-FLOOR(${tl},1)<=6,FLOOR(${tl},1)<=TODAY())`;\n    case 'lastMonth':\n      return `AND(MONTH(${tl})=MONTH(EDATE(TODAY(),0-1)),YEAR(${tl})=YEAR(EDATE(TODAY(),0-1)))`;\n    case 'thisMonth':\n      return `AND(MONTH(${tl})=MONTH(TODAY()),YEAR(${tl})=YEAR(TODAY()))`;\n    case 'nextMonth':\n      return `AND(MONTH(${tl})=MONTH(EDATE(TODAY(),0+1)),YEAR(${tl})=YEAR(EDATE(TODAY(),0+1)))`;\n    default:\n      return undefined;\n  }\n};\n\nconst opType = attributes => {\n  const {type, operator} = attributes;\n  switch (type) {\n    case 'containsText':\n    case 'containsBlanks':\n    case 'notContainsBlanks':\n    case 'containsErrors':\n    case 'notContainsErrors':\n      return {\n        type: 'containsText',\n        operator: type,\n      };\n\n    default:\n      return {type, operator};\n  }\n};\n\nclass CfRuleXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      dataBar: this.databarXform = new DatabarXform(),\n      extLst: this.extLstRefXform = new ExtLstRefXform(),\n      formula: this.formulaXform = new FormulaXform(),\n      colorScale: this.colorScaleXform = new ColorScaleXform(),\n      iconSet: this.iconSetXform = new IconSetXform(),\n    };\n  }\n\n  get tag() {\n    return 'cfRule';\n  }\n\n  static isPrimitive(rule) {\n    // is this rule primitive?\n    if (rule.type === 'iconSet') {\n      if (rule.custom || extIcons[rule.iconSet]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  render(xmlStream, model) {\n    switch (model.type) {\n      case 'expression':\n        this.renderExpression(xmlStream, model);\n        break;\n      case 'cellIs':\n        this.renderCellIs(xmlStream, model);\n        break;\n      case 'top10':\n        this.renderTop10(xmlStream, model);\n        break;\n      case 'aboveAverage':\n        this.renderAboveAverage(xmlStream, model);\n        break;\n      case 'dataBar':\n        this.renderDataBar(xmlStream, model);\n        break;\n      case 'colorScale':\n        this.renderColorScale(xmlStream, model);\n        break;\n      case 'iconSet':\n        this.renderIconSet(xmlStream, model);\n        break;\n      case 'containsText':\n        this.renderText(xmlStream, model);\n        break;\n      case 'timePeriod':\n        this.renderTimePeriod(xmlStream, model);\n        break;\n    }\n  }\n\n  renderExpression(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'expression',\n      dxfId: model.dxfId,\n      priority: model.priority,\n    });\n\n    this.formulaXform.render(xmlStream, model.formulae[0]);\n\n    xmlStream.closeNode();\n  }\n\n  renderCellIs(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'cellIs',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      operator: model.operator,\n    });\n\n    model.formulae.forEach(formula => {\n      this.formulaXform.render(xmlStream, formula);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  renderTop10(xmlStream, model) {\n    xmlStream.leafNode(this.tag, {\n      type: 'top10',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      percent: BaseXform.toBoolAttribute(model.percent, false),\n      bottom: BaseXform.toBoolAttribute(model.bottom, false),\n      rank: BaseXform.toIntValue(model.rank, 10, true),\n    });\n  }\n\n  renderAboveAverage(xmlStream, model) {\n    xmlStream.leafNode(this.tag, {\n      type: 'aboveAverage',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      aboveAverage: BaseXform.toBoolAttribute(model.aboveAverage, true),\n    });\n  }\n\n  renderDataBar(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'dataBar',\n      priority: model.priority,\n    });\n\n    this.databarXform.render(xmlStream, model);\n    this.extLstRefXform.render(xmlStream, model);\n\n    xmlStream.closeNode();\n  }\n\n  renderColorScale(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'colorScale',\n      priority: model.priority,\n    });\n\n    this.colorScaleXform.render(xmlStream, model);\n\n    xmlStream.closeNode();\n  }\n\n  renderIconSet(xmlStream, model) {\n    // iconset is all primitive or all extLst\n    if (!CfRuleXform.isPrimitive(model)) {\n      return;\n    }\n\n    xmlStream.openNode(this.tag, {\n      type: 'iconSet',\n      priority: model.priority,\n    });\n\n    this.iconSetXform.render(xmlStream, model);\n\n    xmlStream.closeNode();\n  }\n\n  renderText(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: model.operator,\n      dxfId: model.dxfId,\n      priority: model.priority,\n      operator: BaseXform.toStringAttribute(model.operator, 'containsText'),\n    });\n\n    const formula = getTextFormula(model);\n    if (formula) {\n      this.formulaXform.render(xmlStream, formula);\n    }\n\n    xmlStream.closeNode();\n  }\n\n  renderTimePeriod(xmlStream, model) {\n    xmlStream.openNode(this.tag, {\n      type: 'timePeriod',\n      dxfId: model.dxfId,\n      priority: model.priority,\n      timePeriod: model.timePeriod,\n    });\n\n    const formula = getTimePeriodFormula(model);\n    if (formula) {\n      this.formulaXform.render(xmlStream, formula);\n    }\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel({attributes}) {\n    return {\n      ...opType(attributes),\n      dxfId: BaseXform.toIntValue(attributes.dxfId),\n      priority: BaseXform.toIntValue(attributes.priority),\n      timePeriod: attributes.timePeriod,\n      percent: BaseXform.toBoolValue(attributes.percent),\n      bottom: BaseXform.toBoolValue(attributes.bottom),\n      rank: BaseXform.toIntValue(attributes.rank),\n      aboveAverage: BaseXform.toBoolValue(attributes.aboveAverage),\n    };\n  }\n\n  onParserClose(name, parser) {\n    switch(name) {\n      case 'dataBar':\n      case 'extLst':\n      case 'colorScale':\n      case 'iconSet':\n        // merge parser model with ours\n        Object.assign(this.model, parser.model);\n        break;\n\n      case 'formula':\n        // except - formula is a string and appends to formulae\n        this.model.formulae = this.model.formulae || [];\n        this.model.formulae.push(parser.model);\n        break;\n    }\n  }\n}\n\nmodule.exports = CfRuleXform;\n"],"mappings":"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"}