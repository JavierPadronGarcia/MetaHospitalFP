{"version":3,"file":"data-validations-xform.js","names":["_","require","utils","colCache","BaseXform","Range","assign","definedName","attributes","name","defaultValue","value","undefined","parseBool","assignBool","optimiseDataValidations","model","dvList","map","dataValidation","address","marked","sort","a","b","strcmp","dvMap","keyBy","matchCol","addr","height","col","i","otherAddress","encodeAddress","row","isEqual","dv","decodeAddress","width","j","bottom","right","sqref","filter","Boolean","DataValidationsXform","xmlStream","optimizedModel","length","openNode","count","forEach","type","addAttribute","operator","allowBlank","showInputMessage","promptTitle","prompt","showErrorMessage","errorStyle","errorTitle","error","formulae","formula","index","writeText","dateToExcel","Date","closeNode","node","_address","_dataValidation","_formula","text","push","includes","range","forEachAddress","join","parseInt","parseFloat","excelToDate","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/data-validations-xform.js"],"sourcesContent":["const _ = require('../../../utils/under-dash');\nconst utils = require('../../../utils/utils');\nconst colCache = require('../../../utils/col-cache');\nconst BaseXform = require('../base-xform');\nconst Range = require('../../../doc/range');\n\nfunction assign(definedName, attributes, name, defaultValue) {\n  const value = attributes[name];\n  if (value !== undefined) {\n    definedName[name] = value;\n  } else if (defaultValue !== undefined) {\n    definedName[name] = defaultValue;\n  }\n}\nfunction parseBool(value) {\n  switch (value) {\n    case '1':\n    case 'true':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction assignBool(definedName, attributes, name, defaultValue) {\n  const value = attributes[name];\n  if (value !== undefined) {\n    definedName[name] = parseBool(value);\n  } else if (defaultValue !== undefined) {\n    definedName[name] = defaultValue;\n  }\n}\n\nfunction optimiseDataValidations(model) {\n  // Squeeze alike data validations together into rectangular ranges\n  // to reduce file size and speed up Excel load time\n  const dvList = _\n    .map(model, (dataValidation, address) => ({\n      address,\n      dataValidation,\n      marked: false,\n    }))\n    .sort((a, b) => _.strcmp(a.address, b.address));\n  const dvMap = _.keyBy(dvList, 'address');\n  const matchCol = (addr, height, col) => {\n    for (let i = 0; i < height; i++) {\n      const otherAddress = colCache.encodeAddress(addr.row + i, col);\n      if (!model[otherAddress] || !_.isEqual(model[addr.address], model[otherAddress])) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return dvList\n    .map(dv => {\n      if (!dv.marked) {\n        const addr = colCache.decodeAddress(dv.address);\n\n        // iterate downwards - finding matching cells\n        let height = 1;\n        let otherAddress = colCache.encodeAddress(addr.row + height, addr.col);\n        while (model[otherAddress] && _.isEqual(dv.dataValidation, model[otherAddress])) {\n          height++;\n          otherAddress = colCache.encodeAddress(addr.row + height, addr.col);\n        }\n\n        // iterate rightwards...\n\n        let width = 1;\n        while (matchCol(addr, height, addr.col + width)) {\n          width++;\n        }\n\n        // mark all included addresses\n        for (let i = 0; i < height; i++) {\n          for (let j = 0; j < width; j++) {\n            otherAddress = colCache.encodeAddress(addr.row + i, addr.col + j);\n            dvMap[otherAddress].marked = true;\n          }\n        }\n\n        if ((height > 1) || (width > 1)) {\n          const bottom = addr.row + (height - 1);\n          const right = addr.col + (width - 1);\n          return {\n            ...dv.dataValidation,\n            sqref: `${dv.address}:${colCache.encodeAddress(bottom, right)}`,\n          };\n        }\n        return {\n          ...dv.dataValidation,\n          sqref: dv.address,\n        };\n      }\n      return null;\n    })\n    .filter(Boolean);\n}\n\nclass DataValidationsXform extends BaseXform {\n  get tag() {\n    return 'dataValidations';\n  }\n\n  render(xmlStream, model) {\n    const optimizedModel = optimiseDataValidations(model);\n    if (optimizedModel.length) {\n      xmlStream.openNode('dataValidations', {count: optimizedModel.length});\n\n      optimizedModel.forEach(value => {\n        xmlStream.openNode('dataValidation');\n\n        if (value.type !== 'any') {\n          xmlStream.addAttribute('type', value.type);\n\n          if (value.operator && value.type !== 'list' && value.operator !== 'between') {\n            xmlStream.addAttribute('operator', value.operator);\n          }\n          if (value.allowBlank) {\n            xmlStream.addAttribute('allowBlank', '1');\n          }\n        }\n        if (value.showInputMessage) {\n          xmlStream.addAttribute('showInputMessage', '1');\n        }\n        if (value.promptTitle) {\n          xmlStream.addAttribute('promptTitle', value.promptTitle);\n        }\n        if (value.prompt) {\n          xmlStream.addAttribute('prompt', value.prompt);\n        }\n        if (value.showErrorMessage) {\n          xmlStream.addAttribute('showErrorMessage', '1');\n        }\n        if (value.errorStyle) {\n          xmlStream.addAttribute('errorStyle', value.errorStyle);\n        }\n        if (value.errorTitle) {\n          xmlStream.addAttribute('errorTitle', value.errorTitle);\n        }\n        if (value.error) {\n          xmlStream.addAttribute('error', value.error);\n        }\n        xmlStream.addAttribute('sqref', value.sqref);\n        (value.formulae || []).forEach((formula, index) => {\n          xmlStream.openNode(`formula${index + 1}`);\n          if (value.type === 'date') {\n            xmlStream.writeText(utils.dateToExcel(new Date(formula)));\n          } else {\n            xmlStream.writeText(formula);\n          }\n          xmlStream.closeNode();\n        });\n        xmlStream.closeNode();\n      });\n      xmlStream.closeNode();\n    }\n  }\n\n  parseOpen(node) {\n    switch (node.name) {\n      case 'dataValidations':\n        this.model = {};\n        return true;\n\n      case 'dataValidation': {\n        this._address = node.attributes.sqref;\n        const dataValidation = node.attributes.type ?\n          {type: node.attributes.type, formulae: []} :\n          {type: 'any'};\n\n        if (node.attributes.type) {\n          assignBool(dataValidation, node.attributes, 'allowBlank');\n        }\n        assignBool(dataValidation, node.attributes, 'showInputMessage');\n        assignBool(dataValidation, node.attributes, 'showErrorMessage');\n\n        switch (dataValidation.type) {\n          case 'any':\n          case 'list':\n          case 'custom':\n            break;\n          default:\n            assign(dataValidation, node.attributes, 'operator', 'between');\n            break;\n        }\n        assign(dataValidation, node.attributes, 'promptTitle');\n        assign(dataValidation, node.attributes, 'prompt');\n        assign(dataValidation, node.attributes, 'errorStyle');\n        assign(dataValidation, node.attributes, 'errorTitle');\n        assign(dataValidation, node.attributes, 'error');\n\n        this._dataValidation = dataValidation;\n        return true;\n      }\n\n      case 'formula1':\n      case 'formula2':\n        this._formula = [];\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  parseText(text) {\n    if (this._formula) {\n      this._formula.push(text);\n    }\n  }\n\n  parseClose(name) {\n    switch (name) {\n      case 'dataValidations':\n\n        return false;\n      case 'dataValidation':\n        if (!this._dataValidation.formulae || !this._dataValidation.formulae.length) {\n          delete this._dataValidation.formulae;\n          delete this._dataValidation.operator;\n        }\n        if (this._address.includes(':')) {\n          const range = new Range(this._address);\n          range.forEachAddress(address => {\n            this.model[address] = this._dataValidation;\n          });\n        } else {\n          this.model[this._address] = this._dataValidation;\n        }\n        return true;\n      case 'formula1':\n      case 'formula2': {\n        let formula = this._formula.join('');\n        switch (this._dataValidation.type) {\n          case 'whole':\n          case 'textLength':\n            formula = parseInt(formula, 10);\n            break;\n          case 'decimal':\n            formula = parseFloat(formula);\n            break;\n          case 'date':\n            formula = utils.excelToDate(parseFloat(formula));\n            break;\n          default:\n            break;\n        }\n        this._dataValidation.formulae.push(formula);\n        this._formula = undefined;\n        return true;\n      }\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = DataValidationsXform;\n"],"mappings":"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"}