{"version":3,"file":"ext-lst-xform.js","names":["CompositeXform","require","ConditionalFormattingsExt","ExtXform","map","conditionalFormattings","model","hasContent","options","prepare","xmlStream","openNode","uri","render","closeNode","name","parser","ExtLstXform","ext","Object","assign","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/ext-lst-xform.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst CompositeXform = require('../composite-xform');\n\nconst ConditionalFormattingsExt = require('./cf-ext/conditional-formattings-ext-xform');\n\nclass ExtXform extends CompositeXform {\n  constructor() {\n    super();\n    this.map = {\n      'x14:conditionalFormattings': this.conditionalFormattings = new ConditionalFormattingsExt(),\n    };\n  }\n\n  get tag() {\n    return 'ext';\n  }\n\n  hasContent(model) {\n    return this.conditionalFormattings.hasContent(model.conditionalFormattings);\n  }\n\n  prepare(model, options) {\n    this.conditionalFormattings.prepare(model.conditionalFormattings, options);\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode('ext', {\n      uri: '{78C0D931-6437-407d-A8EE-F0AAD7539E65}',\n      'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main',\n    });\n\n    this.conditionalFormattings.render(xmlStream, model.conditionalFormattings);\n\n    xmlStream.closeNode();\n  }\n\n  createNewModel() {\n    return {};\n  }\n\n  onParserClose(name, parser) {\n    this.model[name] = parser.model;\n  }\n}\n\nclass ExtLstXform extends CompositeXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'ext': this.ext = new ExtXform(),\n    };\n  }\n\n  get tag() {\n    return 'extLst';\n  }\n\n  prepare(model, options) {\n    this.ext.prepare(model, options);\n  }\n\n  hasContent(model) {\n    return this.ext.hasContent(model);\n  }\n\n  render(xmlStream, model) {\n    if (!this.hasContent(model)) {\n      return;\n    }\n\n    xmlStream.openNode('extLst');\n    this.ext.render(xmlStream, model);\n    xmlStream.closeNode();\n  }\n\n  createNewModel() {\n    return {};\n  }\n\n  onParserClose(name, parser) {\n    Object.assign(this.model, parser.model);\n  }\n}\n\nmodule.exports = ExtLstXform;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAMA,cAAc,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAEA,IAAMC,yBAAyB,GAAGD,OAAO,CAAC,4CAAD,CAAzC;;IAEME,Q;;;;;EACJ,oBAAc;IAAA;;IAAA;;IACZ;IACA,MAAKC,GAAL,GAAW;MACT,8BAA8B,MAAKC,sBAAL,GAA8B,IAAIH,yBAAJ;IADnD,CAAX;IAFY;EAKb;;;;SAED,eAAU;MACR,OAAO,KAAP;IACD;;;WAED,oBAAWI,KAAX,EAAkB;MAChB,OAAO,KAAKD,sBAAL,CAA4BE,UAA5B,CAAuCD,KAAK,CAACD,sBAA7C,CAAP;IACD;;;WAED,iBAAQC,KAAR,EAAeE,OAAf,EAAwB;MACtB,KAAKH,sBAAL,CAA4BI,OAA5B,CAAoCH,KAAK,CAACD,sBAA1C,EAAkEG,OAAlE;IACD;;;WAED,gBAAOE,SAAP,EAAkBJ,KAAlB,EAAyB;MACvBI,SAAS,CAACC,QAAV,CAAmB,KAAnB,EAA0B;QACxBC,GAAG,EAAE,wCADmB;QAExB,aAAa;MAFW,CAA1B;MAKA,KAAKP,sBAAL,CAA4BQ,MAA5B,CAAmCH,SAAnC,EAA8CJ,KAAK,CAACD,sBAApD;MAEAK,SAAS,CAACI,SAAV;IACD;;;WAED,0BAAiB;MACf,OAAO,EAAP;IACD;;;WAED,uBAAcC,IAAd,EAAoBC,MAApB,EAA4B;MAC1B,KAAKV,KAAL,CAAWS,IAAX,IAAmBC,MAAM,CAACV,KAA1B;IACD;;;;EArCoBN,c;;IAwCjBiB,W;;;;;EACJ,uBAAc;IAAA;;IAAA;;IACZ;IAEA,OAAKb,GAAL,GAAW;MACT,OAAO,OAAKc,GAAL,GAAW,IAAIf,QAAJ;IADT,CAAX;IAHY;EAMb;;;;SAED,eAAU;MACR,OAAO,QAAP;IACD;;;WAED,iBAAQG,KAAR,EAAeE,OAAf,EAAwB;MACtB,KAAKU,GAAL,CAAST,OAAT,CAAiBH,KAAjB,EAAwBE,OAAxB;IACD;;;WAED,oBAAWF,KAAX,EAAkB;MAChB,OAAO,KAAKY,GAAL,CAASX,UAAT,CAAoBD,KAApB,CAAP;IACD;;;WAED,gBAAOI,SAAP,EAAkBJ,KAAlB,EAAyB;MACvB,IAAI,CAAC,KAAKC,UAAL,CAAgBD,KAAhB,CAAL,EAA6B;QAC3B;MACD;;MAEDI,SAAS,CAACC,QAAV,CAAmB,QAAnB;MACA,KAAKO,GAAL,CAASL,MAAT,CAAgBH,SAAhB,EAA2BJ,KAA3B;MACAI,SAAS,CAACI,SAAV;IACD;;;WAED,0BAAiB;MACf,OAAO,EAAP;IACD;;;WAED,uBAAcC,IAAd,EAAoBC,MAApB,EAA4B;MAC1BG,MAAM,CAACC,MAAP,CAAc,KAAKd,KAAnB,EAA0BU,MAAM,CAACV,KAAjC;IACD;;;;EArCuBN,c;;AAwC1BqB,MAAM,CAACC,OAAP,GAAiBL,WAAjB"}