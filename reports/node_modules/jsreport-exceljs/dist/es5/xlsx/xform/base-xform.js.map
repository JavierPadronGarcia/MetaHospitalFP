{"version":3,"file":"base-xform.js","names":["Sax","require","XmlStream","BaseXform","node","text","name","model","options","map","Object","values","forEach","xform","reset","obj","assign","parser","stream","Promise","resolve","reject","abort","error","removeAllListeners","on","unpipe","parseOpen","parseText","parseClose","createStream","promise","parse","pipe","toXml","xmlStream","render","xml","value","dflt","allways","undefined","toString","toAttribute","attr","parseInt","parseFloat","module","exports"],"sources":["../../../../lib/xlsx/xform/base-xform.js"],"sourcesContent":["const Sax = require('sax');\n\nconst XmlStream = require('../../utils/xml-stream');\n\n/* 'virtual' methods used as a form of documentation */\n/* eslint-disable class-methods-use-this */\n\n// Base class for Xforms\nclass BaseXform {\n  // constructor(/* model, name */) {}\n\n  // ============================================================\n  // Virtual Interface\n  prepare(/* model, options */) {\n    // optional preparation (mutation) of model so it is ready for write\n  }\n\n  render(/* xmlStream, model */) {\n    // convert model to xml\n  }\n\n  parseOpen(node) {\n    // XML node opened\n  }\n\n  parseText(text) {\n    // chunk of text encountered for current node\n  }\n\n  parseClose(name) {\n    // XML node closed\n  }\n\n  reconcile(model, options) {\n    // optional post-parse step (opposite to prepare)\n  }\n\n  // ============================================================\n  reset() {\n    // to make sure parses don't bleed to next iteration\n    this.model = null;\n\n    // if we have a map - reset them too\n    if (this.map) {\n      Object.values(this.map).forEach(xform => {\n        if (xform instanceof BaseXform) {\n          xform.reset();\n        } else if (xform.xform) {\n          xform.xform.reset();\n        }\n      });\n    }\n  }\n\n  mergeModel(obj) {\n    // set obj's props to this.model\n    this.model = Object.assign(this.model || {}, obj);\n  }\n\n  parse(parser, stream) {\n    return new Promise((resolve, reject) => {\n      const abort = error => {\n        // Abandon ship! Prevent the parser from consuming any more resources\n        parser.removeAllListeners();\n        parser.on('error', () => {}); // Ignore any parse errors from the chunk being processed\n        stream.unpipe(parser);\n        reject(error);\n      };\n\n      parser.on('opentag', node => {\n        try {\n          // console.log('opentag', node.name);\n          this.parseOpen(node);\n        } catch (error) {\n          abort(error);\n        }\n      });\n      parser.on('text', text => {\n        try {\n          this.parseText(text);\n        } catch (error) {\n          abort(error);\n        }\n      });\n      parser.on('closetag', name => {\n        try {\n          // console.log('closetag', name);\n          if (!this.parseClose(name)) {\n            resolve(this.model);\n          }\n        } catch (error) {\n          abort(error);\n        }\n      });\n      parser.on('end', () => {\n        // console.log('end');\n        resolve(this.model);\n      });\n      parser.on('error', error => {\n        abort(error);\n      });\n    });\n  }\n\n  parseStream(stream) {\n    const parser = Sax.createStream(true, {});\n    const promise = this.parse(parser, stream);\n    stream.pipe(parser);\n\n    return promise;\n  }\n\n  get xml() {\n    // convenience function to get the xml of this.model\n    // useful for manager types that are built during the prepare phase\n    return this.toXml(this.model);\n  }\n\n  toXml(model) {\n    const xmlStream = new XmlStream();\n    this.render(xmlStream, model);\n    return xmlStream.xml;\n  }\n\n  // ============================================================\n  // Useful Utilities\n  static toAttribute(value, dflt, allways = false) {\n    if (value === undefined) {\n      if (allways) {\n        return dflt;\n      }\n    } else if (allways || (value !== dflt)) {\n      return value.toString();\n    }\n    return undefined;\n  }\n\n\n  static toStringAttribute(value, dflt, allways = false) {\n    return BaseXform.toAttribute(value, dflt, allways);\n  }\n\n  static toStringValue(attr, dflt) {\n    return (attr === undefined) ? dflt : attr;\n  }\n\n  static toBoolAttribute(value, dflt, allways = false) {\n    if (value === undefined) {\n      if (allways) {\n        return dflt;\n      }\n    } else if (allways || (value !== dflt)) {\n      return value ? '1' : '0';\n    }\n    return undefined;\n  }\n\n  static toBoolValue(attr, dflt) {\n    return (attr === undefined) ? dflt : (attr === '1');\n  }\n\n  static toIntAttribute(value, dflt, allways = false) {\n    return BaseXform.toAttribute(value, dflt, allways);\n  }\n\n  static toIntValue(attr, dflt) {\n    return (attr === undefined) ? dflt : parseInt(attr, 10);\n  }\n\n  static toFloatAttribute(value, dflt, allways = false) {\n    return BaseXform.toAttribute(value, dflt, allways);\n  }\n\n  static toFloatValue(attr, dflt) {\n    return (attr === undefined) ? dflt : parseFloat(attr);\n  }\n\n\n}\n\nmodule.exports = BaseXform;\n"],"mappings":"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"}