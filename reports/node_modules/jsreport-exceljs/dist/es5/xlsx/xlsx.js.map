{"version":3,"file":"xlsx.js","names":["fs","require","ZipStream","StreamBuf","utils","XmlStream","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","workbook","exists","Error","stream","createReadStream","read","close","xform","parseStream","model","workbookXform","worksheetXform","drawingXform","tableXform","reconcile","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","anchors","anchor","hyperlinks","picture","rId","hyperlink","Target","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","entry","path","push","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","themes","toString","promises","ZipReader","getEntryType","match","entryPath","parseRels","parseWorkbook","sheets","definedNames","views","calcProperties","appXform","appProperties","company","manager","coreXform","coreProperties","assign","_processWorksheetEntry","_processWorksheetRelsEntry","_processThemeEntry","_processMediaEntry","_processDrawingEntry","_processCommentEntry","_processTableEntry","_processDrawingRelsEntry","autodrain","destroy","all","emit","zipStream","createInputStream","undefined","base64","Buffer","from","write","end","zip","map","append","dataimg64","content","substring","indexOf","relsXform","prepare","xml","toXml","tableXml","target","theme1","Type","RelType","OfficeDocument","CoreProperties","ExtenderProperties","count","Styles","Theme","SharedStrings","Worksheet","id","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","finalize","creator","lastModifiedBy","created","Date","modified","useSharedStrings","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","prepareModel","addContentTypes","addOfficeRels","addWorkbookRels","addWorksheets","addSharedStrings","addDrawings","addTables","addThemes","addStyles","addMedia","addApp","addCore","addWorkbook","_finalize","createWriteStream","then","module","exports"],"sources":["../../../lib/xlsx/xlsx.js"],"sourcesContent":["const fs = require('fs');\nconst ZipStream = require('../utils/zip-stream');\nconst StreamBuf = require('../utils/stream-buf');\n\nconst utils = require('../utils/utils');\nconst XmlStream = require('../utils/xml-stream');\n\nconst StylesXform = require('./xform/style/styles-xform');\n\nconst CoreXform = require('./xform/core/core-xform');\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\nconst RelationshipsXform = require('./xform/core/relationships-xform');\nconst ContentTypesXform = require('./xform/core/content-types-xform');\nconst AppXform = require('./xform/core/app-xform');\nconst WorkbookXform = require('./xform/book/workbook-xform');\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\nconst DrawingXform = require('./xform/drawing/drawing-xform');\nconst TableXform = require('./xform/table/table-xform');\nconst CommentsXform = require('./xform/comment/comments-xform');\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\n\nconst theme1Xml = require('./xml/theme1.js');\n\nfunction fsReadFileAsync(filename, options) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(filename, options, (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nclass XLSX {\n  constructor(workbook) {\n    this.workbook = workbook;\n  }\n\n  // ===============================================================================\n  // Workbook\n  // =========================================================================\n  // Read\n\n  async readFile(filename, options) {\n    if (!(await utils.fs.exists(filename))) {\n      throw new Error(`File not found: ${filename}`);\n    }\n    const stream = fs.createReadStream(filename);\n    try {\n      const workbook = await this.read(stream, options);\n      stream.close();\n      return workbook;\n    } catch (error) {\n      stream.close();\n      throw error;\n    }\n  }\n\n  parseRels(stream) {\n    const xform = new RelationshipsXform();\n    return xform.parseStream(stream);\n  }\n\n  parseWorkbook(stream) {\n    const xform = new WorkbookXform();\n    return xform.parseStream(stream);\n  }\n\n  parseSharedStrings(stream) {\n    const xform = new SharedStringsXform();\n    return xform.parseStream(stream);\n  }\n\n  reconcile(model, options) {\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform(options);\n    const drawingXform = new DrawingXform();\n    const tableXform = new TableXform();\n\n    workbookXform.reconcile(model);\n\n    // reconcile drawings with their rels\n    const drawingOptions = {\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n    };\n    Object.keys(model.drawings).forEach(name => {\n      const drawing = model.drawings[name];\n      const drawingRel = model.drawingRels[name];\n      if (drawingRel) {\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\n          o[rel.Id] = rel;\n          return o;\n        }, {});\n        (drawing.anchors || []).forEach((anchor) => {\n          const hyperlinks = anchor.picture && anchor.picture.hyperlinks;\n          if (hyperlinks && drawingOptions.rels[hyperlinks.rId]) {\n            hyperlinks.hyperlink = drawingOptions.rels[hyperlinks.rId].Target;\n            delete hyperlinks.rId;\n          }\n        });\n        drawingXform.reconcile(drawing, drawingOptions);\n      }\n    });\n\n    // reconcile tables with the default styles\n    const tableOptions = {\n      styles: model.styles,\n    };\n    Object.values(model.tables).forEach(table => {\n      tableXform.reconcile(table, tableOptions);\n    });\n\n    const sheetOptions = {\n      styles: model.styles,\n      sharedStrings: model.sharedStrings,\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n      date1904: model.properties && model.properties.date1904,\n      drawings: model.drawings,\n      comments: model.comments,\n      tables: model.tables,\n    };\n    model.worksheets.forEach(worksheet => {\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\n      worksheetXform.reconcile(worksheet, sheetOptions);\n    });\n\n    // delete unnecessary parts\n    delete model.worksheetHash;\n    delete model.worksheetRels;\n    delete model.globalRels;\n    delete model.sharedStrings;\n    delete model.workbookRels;\n    delete model.sheetDefs;\n    delete model.styles;\n    delete model.mediaIndex;\n    delete model.drawings;\n    delete model.drawingRels;\n  }\n\n  async _processWorksheetEntry(entry, model, sheetNo, options) {\n    const xform = new WorksheetXform(options);\n    const worksheet = await xform.parseStream(entry);\n    worksheet.sheetNo = sheetNo;\n    model.worksheetHash[entry.path] = worksheet;\n    model.worksheets.push(worksheet);\n  }\n\n  async _processCommentEntry(entry, model, name) {\n    const xform = new CommentsXform();\n    const comments = await xform.parseStream(entry);\n    model.comments[`../${name}.xml`] = comments;\n  }\n\n  async _processTableEntry(entry, model, name) {\n    const xform = new TableXform();\n    const table = await xform.parseStream(entry);\n    model.tables[`../tables/${name}.xml`] = table;\n  }\n\n  async _processWorksheetRelsEntry(entry, model, sheetNo) {\n    const xform = new RelationshipsXform();\n    const relationships = await xform.parseStream(entry);\n    model.worksheetRels[sheetNo] = relationships;\n  }\n\n  async _processMediaEntry(entry, model, filename) {\n    const lastDot = filename.lastIndexOf('.');\n    // if we can't determine extension, ignore it\n    if (lastDot >= 1) {\n      const extension = filename.substr(lastDot + 1);\n      const name = filename.substr(0, lastDot);\n      await new Promise((resolve, reject) => {\n        const streamBuf = new StreamBuf();\n        streamBuf.on('finish', () => {\n          model.mediaIndex[filename] = model.media.length;\n          model.mediaIndex[name] = model.media.length;\n          const medium = {\n            type: 'image',\n            name,\n            extension,\n            buffer: streamBuf.toBuffer(),\n          };\n          model.media.push(medium);\n          resolve();\n        });\n        entry.on('error', error => {\n          reject(error);\n        });\n        entry.pipe(streamBuf);\n      });\n    }\n  }\n\n  async _processDrawingEntry(entry, model, name) {\n    const xform = new DrawingXform();\n    const drawing = await xform.parseStream(entry);\n    model.drawings[name] = drawing;\n  }\n\n  async _processDrawingRelsEntry(entry, model, name) {\n    const xform = new RelationshipsXform();\n    const relationships = await xform.parseStream(entry);\n    model.drawingRels[name] = relationships;\n  }\n\n  async _processThemeEntry(entry, model, name) {\n    await new Promise((resolve, reject) => {\n      // TODO: stream entry into buffer and store the xml in the model.themes[]\n      const stream = new StreamBuf();\n      entry.on('error', reject);\n      stream.on('error', reject);\n      stream.on('finish', () => {\n        model.themes[name] = stream.read().toString();\n        resolve();\n      });\n      entry.pipe(stream);\n    });\n  }\n\n  createInputStream(options) {\n    const model = {\n      worksheets: [],\n      worksheetHash: {},\n      worksheetRels: [],\n      themes: {},\n      media: [],\n      mediaIndex: {},\n      drawings: {},\n      drawingRels: {},\n      comments: {},\n      tables: {},\n    };\n\n    // we have to be prepared to read the zip entries in whatever order they arrive\n    const promises = [];\n    const stream = new ZipStream.ZipReader({\n      getEntryType: path => (path.match(/xl\\/media\\//) ? 'nodebuffer' : 'string'),\n    });\n    stream.on('entry', entry => {\n      promises.push(\n        (async () => {\n          try {\n            let entryPath = entry.path;\n            if (entryPath[0] === '/') {\n              entryPath = entryPath.substr(1);\n            }\n            switch (entryPath) {\n              case '_rels/.rels':\n                model.globalRels = await this.parseRels(entry);\n                break;\n\n              case 'xl/workbook.xml': {\n                const workbook = await this.parseWorkbook(entry);\n                model.sheets = workbook.sheets;\n                model.definedNames = workbook.definedNames;\n                model.views = workbook.views;\n                model.properties = workbook.properties;\n                model.calcProperties = workbook.calcProperties;\n                break;\n              }\n\n              case 'xl/_rels/workbook.xml.rels':\n                model.workbookRels = await this.parseRels(entry);\n                break;\n\n              case 'xl/sharedStrings.xml':\n                model.sharedStrings = new SharedStringsXform();\n                await model.sharedStrings.parseStream(entry);\n                break;\n\n              case 'xl/styles.xml':\n                model.styles = new StylesXform();\n                await model.styles.parseStream(entry);\n                break;\n\n              case 'docProps/app.xml': {\n                const appXform = new AppXform();\n                const appProperties = await appXform.parseStream(entry);\n                model.company = appProperties.company;\n                model.manager = appProperties.manager;\n                break;\n              }\n\n              case 'docProps/core.xml': {\n                const coreXform = new CoreXform();\n                const coreProperties = await coreXform.parseStream(entry);\n                Object.assign(model, coreProperties);\n                break;\n              }\n\n              default: {\n                let match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n                if (match) {\n                  await this._processWorksheetEntry(entry, model, match[1], options);\n                  break;\n                }\n                match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n                if (match) {\n                  await this._processWorksheetRelsEntry(entry, model, match[1]);\n                  break;\n                }\n                match = entry.path.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\n                if (match) {\n                  await this._processThemeEntry(entry, model, match[1]);\n                  break;\n                }\n                match = entry.path.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\n                if (match) {\n                  await this._processMediaEntry(entry, model, match[1]);\n                  break;\n                }\n                match = entry.path.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\n                if (match) {\n                  await this._processDrawingEntry(entry, model, match[1]);\n                  break;\n                }\n                match = entry.path.match(/xl\\/(comments\\d+)[.]xml/);\n                if (match) {\n                  await this._processCommentEntry(entry, model, match[1]);\n                  break;\n                }\n                match = entry.path.match(/xl\\/tables\\/(table\\d+)[.]xml/);\n                if (match) {\n                  await this._processTableEntry(entry, model, match[1]);\n                  break;\n                }\n                match = entry.path.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\n                if (match) {\n                  await this._processDrawingRelsEntry(entry, model, match[1]);\n                  break;\n                }\n\n                entry.autodrain();\n              }\n            }\n          } catch (error) {\n            stream.destroy(error);\n            throw error;\n          }\n        })()\n      );\n    });\n    stream.on('finished', async () => {\n      try {\n        await Promise.all(promises);\n        this.reconcile(model, options);\n\n        // apply model\n        this.workbook.model = model;\n        stream.emit('done');\n      } catch (error) {\n        stream.emit('error', error);\n      }\n    });\n    return stream;\n  }\n\n  read(stream, options) {\n    return new Promise((resolve, reject) => {\n      options = options || {};\n      const zipStream = this.createInputStream(options);\n      zipStream\n        .on('done', () => {\n          resolve(this.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n      stream.pipe(zipStream);\n    });\n  }\n\n  load(data, options) {\n    if (options === undefined) {\n      options = {};\n    }\n    const zipStream = this.createInputStream();\n    return new Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(this.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n\n      if (options.base64) {\n        const buffer = Buffer.from(data.toString(), 'base64');\n        zipStream.write(buffer);\n      } else {\n        zipStream.write(data);\n      }\n      zipStream.end();\n    });\n  }\n\n  // =========================================================================\n  // Write\n\n  async addMedia(zip, model) {\n    await Promise.all(\n      model.media.map(async medium => {\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\n          if (medium.filename) {\n            const data = await fsReadFileAsync(medium.filename);\n            return zip.append(data, {name: filename});\n          }\n          if (medium.buffer) {\n            return zip.append(medium.buffer, {name: filename});\n          }\n          if (medium.base64) {\n            const dataimg64 = medium.base64;\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n            return zip.append(content, {name: filename, base64: true});\n          }\n        }\n        throw new Error('Unsupported media');\n      })\n    );\n  }\n\n  addDrawings(zip, model) {\n    const drawingXform = new DrawingXform();\n    const relsXform = new RelationshipsXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {drawing} = worksheet;\n      if (drawing) {\n        drawingXform.prepare(drawing, {});\n        let xml = drawingXform.toXml(drawing);\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\n\n        xml = relsXform.toXml(drawing.rels);\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\n      }\n    });\n  }\n\n  addTables(zip, model) {\n    const tableXform = new TableXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {tables} = worksheet;\n      tables.forEach(table => {\n        tableXform.prepare(table, {});\n        const tableXml = tableXform.toXml(table);\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\n      });\n    });\n  }\n\n  async addContentTypes(zip, model) {\n    const xform = new ContentTypesXform();\n    const xml = xform.toXml(model);\n    zip.append(xml, {name: '[Content_Types].xml'});\n  }\n\n  async addApp(zip, model) {\n    const xform = new AppXform();\n    const xml = xform.toXml(model);\n    zip.append(xml, {name: 'docProps/app.xml'});\n  }\n\n  async addCore(zip, model) {\n    const coreXform = new CoreXform();\n    zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\n  }\n\n  async addThemes(zip, model) {\n    const themes = model.themes || {theme1: theme1Xml};\n    Object.keys(themes).forEach(name => {\n      const xml = themes[name];\n      const path = `xl/theme/${name}.xml`;\n      zip.append(xml, {name: path});\n    });\n  }\n\n  async addOfficeRels(zip) {\n    const xform = new RelationshipsXform();\n    const xml = xform.toXml([\n      {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\n      {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\n      {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\n    ]);\n    zip.append(xml, {name: '_rels/.rels'});\n  }\n\n  async addWorkbookRels(zip, model) {\n    let count = 1;\n    const relationships = [\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\n    ];\n    if (model.sharedStrings.count) {\n      relationships.push({Id: `rId${count++}`, Type: XLSX.RelType.SharedStrings, Target: 'sharedStrings.xml'});\n    }\n    model.worksheets.forEach(worksheet => {\n      worksheet.rId = `rId${count++}`;\n      relationships.push({Id: worksheet.rId, Type: XLSX.RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml`});\n    });\n    const xform = new RelationshipsXform();\n    const xml = xform.toXml(relationships);\n    zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\n  }\n\n  async addSharedStrings(zip, model) {\n    if (model.sharedStrings && model.sharedStrings.count) {\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\n    }\n  }\n\n  async addStyles(zip, model) {\n    const {xml} = model.styles;\n    if (xml) {\n      zip.append(xml, {name: 'xl/styles.xml'});\n    }\n  }\n\n  async addWorkbook(zip, model) {\n    const xform = new WorkbookXform();\n    zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\n  }\n\n  async addWorksheets(zip, model) {\n    // preparation phase\n    const worksheetXform = new WorksheetXform();\n    const relationshipsXform = new RelationshipsXform();\n    const commentsXform = new CommentsXform();\n    const vmlNotesXform = new VmlNotesXform();\n\n    // write sheets\n    model.worksheets.forEach(worksheet => {\n      let xmlStream = new XmlStream();\n      worksheetXform.render(xmlStream, worksheet);\n      zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\n\n      if (worksheet.rels && worksheet.rels.length) {\n        xmlStream = new XmlStream();\n        relationshipsXform.render(xmlStream, worksheet.rels);\n        zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\n      }\n\n      if (worksheet.comments.length > 0) {\n        xmlStream = new XmlStream();\n        commentsXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\n\n        xmlStream = new XmlStream();\n        vmlNotesXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\n      }\n    });\n  }\n\n  _finalize(zip) {\n    return new Promise((resolve, reject) => {\n      zip.on('finish', () => {\n        resolve(this);\n      });\n      zip.on('error', reject);\n      zip.finalize();\n    });\n  }\n\n  prepareModel(model, options) {\n    // ensure following properties have sane values\n    model.creator = model.creator || 'ExcelJS';\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\n    model.created = model.created || new Date();\n    model.modified = model.modified || new Date();\n\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\n\n    // Manage the shared strings\n    model.sharedStrings = new SharedStringsXform();\n\n    // add a style manager to handle cell formats, fonts, etc.\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\n\n    // prepare all of the things before the render\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform();\n\n    workbookXform.prepare(model);\n\n    const worksheetOptions = {\n      sharedStrings: model.sharedStrings,\n      styles: model.styles,\n      date1904: model.properties.date1904,\n      drawingsCount: 0,\n      media: model.media,\n    };\n    worksheetOptions.drawings = model.drawings = [];\n    worksheetOptions.commentRefs = model.commentRefs = [];\n    let tableCount = 0;\n    model.tables = [];\n    model.worksheets.forEach(worksheet => {\n      // assign unique filenames to tables\n      worksheet.tables.forEach(table => {\n        tableCount++;\n        table.target = `table${tableCount}.xml`;\n        table.id = tableCount;\n        model.tables.push(table);\n      });\n\n      worksheetXform.prepare(worksheet, worksheetOptions);\n    });\n\n    // TODO: workbook drawing list\n  }\n\n  async write(stream, options) {\n    options = options || {};\n    const {model} = this.workbook;\n    const zip = new ZipStream.ZipWriter(options.zip);\n    zip.pipe(stream);\n\n    this.prepareModel(model, options);\n\n    // render\n    await this.addContentTypes(zip, model);\n    await this.addOfficeRels(zip, model);\n    await this.addWorkbookRels(zip, model);\n    await this.addWorksheets(zip, model);\n    await this.addSharedStrings(zip, model); // always after worksheets\n    await this.addDrawings(zip, model);\n    await this.addTables(zip, model);\n    await Promise.all([this.addThemes(zip, model), this.addStyles(zip, model)]);\n    await this.addMedia(zip, model);\n    await Promise.all([this.addApp(zip, model), this.addCore(zip, model)]);\n    await this.addWorkbook(zip, model);\n    return this._finalize(zip);\n  }\n\n  writeFile(filename, options) {\n    const stream = fs.createWriteStream(filename);\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        resolve();\n      });\n      stream.on('error', error => {\n        reject(error);\n      });\n\n      this.write(stream, options)\n        .then(() => {\n          stream.end();\n        });\n    });\n  }\n\n  async writeBuffer(options) {\n    const stream = new StreamBuf();\n    await this.write(stream, options);\n    return stream.read();\n  }\n}\n\nXLSX.RelType = require('./rel-type');\n\nmodule.exports = XLSX;\n"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAzB;;AAEA,IAAMG,KAAK,GAAGH,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,qBAAD,CAAzB;;AAEA,IAAMK,WAAW,GAAGL,OAAO,CAAC,4BAAD,CAA3B;;AAEA,IAAMM,SAAS,GAAGN,OAAO,CAAC,yBAAD,CAAzB;;AACA,IAAMO,kBAAkB,GAAGP,OAAO,CAAC,sCAAD,CAAlC;;AACA,IAAMQ,kBAAkB,GAAGR,OAAO,CAAC,kCAAD,CAAlC;;AACA,IAAMS,iBAAiB,GAAGT,OAAO,CAAC,kCAAD,CAAjC;;AACA,IAAMU,QAAQ,GAAGV,OAAO,CAAC,wBAAD,CAAxB;;AACA,IAAMW,aAAa,GAAGX,OAAO,CAAC,6BAAD,CAA7B;;AACA,IAAMY,cAAc,GAAGZ,OAAO,CAAC,+BAAD,CAA9B;;AACA,IAAMa,YAAY,GAAGb,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAMc,UAAU,GAAGd,OAAO,CAAC,2BAAD,CAA1B;;AACA,IAAMe,aAAa,GAAGf,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAMgB,aAAa,GAAGhB,OAAO,CAAC,iCAAD,CAA7B;;AAEA,IAAMiB,SAAS,GAAGjB,OAAO,CAAC,iBAAD,CAAzB;;AAEA,SAASkB,eAAT,CAAyBC,QAAzB,EAAmCC,OAAnC,EAA4C;EAC1C,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;IACtCxB,EAAE,CAACyB,QAAH,CAAYL,QAAZ,EAAsBC,OAAtB,EAA+B,UAACK,KAAD,EAAQC,IAAR,EAAiB;MAC9C,IAAID,KAAJ,EAAW;QACTF,MAAM,CAACE,KAAD,CAAN;MACD,CAFD,MAEO;QACLH,OAAO,CAACI,IAAD,CAAP;MACD;IACF,CAND;EAOD,CARM,CAAP;AASD;;IAEKC,I;EACJ,cAAYC,QAAZ,EAAsB;IAAA;;IACpB,KAAKA,QAAL,GAAgBA,QAAhB;EACD,C,CAED;EACA;EACA;EACA;;;;;;8EAEA,iBAAeT,QAAf,EAAyBC,OAAzB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACcjB,KAAK,CAACJ,EAAN,CAAS8B,MAAT,CAAgBV,QAAhB,CADd;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBAAA,MAEU,IAAIW,KAAJ,2BAA6BX,QAA7B,EAFV;;cAAA;gBAIQY,MAJR,GAIiBhC,EAAE,CAACiC,gBAAH,CAAoBb,QAApB,CAJjB;gBAAA;gBAAA;gBAAA,OAM2B,KAAKc,IAAL,CAAUF,MAAV,EAAkBX,OAAlB,CAN3B;;cAAA;gBAMUQ,QANV;gBAOIG,MAAM,CAACG,KAAP;gBAPJ,iCAQWN,QARX;;cAAA;gBAAA;gBAAA;gBAUIG,MAAM,CAACG,KAAP;gBAVJ;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAeA,mBAAUH,MAAV,EAAkB;MAChB,IAAMI,KAAK,GAAG,IAAI3B,kBAAJ,EAAd;MACA,OAAO2B,KAAK,CAACC,WAAN,CAAkBL,MAAlB,CAAP;IACD;;;WAED,uBAAcA,MAAd,EAAsB;MACpB,IAAMI,KAAK,GAAG,IAAIxB,aAAJ,EAAd;MACA,OAAOwB,KAAK,CAACC,WAAN,CAAkBL,MAAlB,CAAP;IACD;;;WAED,4BAAmBA,MAAnB,EAA2B;MACzB,IAAMI,KAAK,GAAG,IAAI5B,kBAAJ,EAAd;MACA,OAAO4B,KAAK,CAACC,WAAN,CAAkBL,MAAlB,CAAP;IACD;;;WAED,mBAAUM,KAAV,EAAiBjB,OAAjB,EAA0B;MACxB,IAAMkB,aAAa,GAAG,IAAI3B,aAAJ,EAAtB;MACA,IAAM4B,cAAc,GAAG,IAAI3B,cAAJ,CAAmBQ,OAAnB,CAAvB;MACA,IAAMoB,YAAY,GAAG,IAAI3B,YAAJ,EAArB;MACA,IAAM4B,UAAU,GAAG,IAAI3B,UAAJ,EAAnB;MAEAwB,aAAa,CAACI,SAAd,CAAwBL,KAAxB,EANwB,CAQxB;;MACA,IAAMM,cAAc,GAAG;QACrBC,KAAK,EAAEP,KAAK,CAACO,KADQ;QAErBC,UAAU,EAAER,KAAK,CAACQ;MAFG,CAAvB;MAIAC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACW,QAAlB,EAA4BC,OAA5B,CAAoC,UAAAC,IAAI,EAAI;QAC1C,IAAMC,OAAO,GAAGd,KAAK,CAACW,QAAN,CAAeE,IAAf,CAAhB;QACA,IAAME,UAAU,GAAGf,KAAK,CAACgB,WAAN,CAAkBH,IAAlB,CAAnB;;QACA,IAAIE,UAAJ,EAAgB;UACdT,cAAc,CAACW,IAAf,GAAsBF,UAAU,CAACG,MAAX,CAAkB,UAACC,CAAD,EAAIC,GAAJ,EAAY;YAClDD,CAAC,CAACC,GAAG,CAACC,EAAL,CAAD,GAAYD,GAAZ;YACA,OAAOD,CAAP;UACD,CAHqB,EAGnB,EAHmB,CAAtB;UAIA,CAACL,OAAO,CAACQ,OAAR,IAAmB,EAApB,EAAwBV,OAAxB,CAAgC,UAACW,MAAD,EAAY;YAC1C,IAAMC,UAAU,GAAGD,MAAM,CAACE,OAAP,IAAkBF,MAAM,CAACE,OAAP,CAAeD,UAApD;;YACA,IAAIA,UAAU,IAAIlB,cAAc,CAACW,IAAf,CAAoBO,UAAU,CAACE,GAA/B,CAAlB,EAAuD;cACrDF,UAAU,CAACG,SAAX,GAAuBrB,cAAc,CAACW,IAAf,CAAoBO,UAAU,CAACE,GAA/B,EAAoCE,MAA3D;cACA,OAAOJ,UAAU,CAACE,GAAlB;YACD;UACF,CAND;UAOAvB,YAAY,CAACE,SAAb,CAAuBS,OAAvB,EAAgCR,cAAhC;QACD;MACF,CAjBD,EAbwB,CAgCxB;;MACA,IAAMuB,YAAY,GAAG;QACnBC,MAAM,EAAE9B,KAAK,CAAC8B;MADK,CAArB;MAGArB,MAAM,CAACsB,MAAP,CAAc/B,KAAK,CAACgC,MAApB,EAA4BpB,OAA5B,CAAoC,UAAAqB,KAAK,EAAI;QAC3C7B,UAAU,CAACC,SAAX,CAAqB4B,KAArB,EAA4BJ,YAA5B;MACD,CAFD;MAIA,IAAMK,YAAY,GAAG;QACnBJ,MAAM,EAAE9B,KAAK,CAAC8B,MADK;QAEnBK,aAAa,EAAEnC,KAAK,CAACmC,aAFF;QAGnB5B,KAAK,EAAEP,KAAK,CAACO,KAHM;QAInBC,UAAU,EAAER,KAAK,CAACQ,UAJC;QAKnB4B,QAAQ,EAAEpC,KAAK,CAACqC,UAAN,IAAoBrC,KAAK,CAACqC,UAAN,CAAiBD,QAL5B;QAMnBzB,QAAQ,EAAEX,KAAK,CAACW,QANG;QAOnB2B,QAAQ,EAAEtC,KAAK,CAACsC,QAPG;QAQnBN,MAAM,EAAEhC,KAAK,CAACgC;MARK,CAArB;MAUAhC,KAAK,CAACuC,UAAN,CAAiB3B,OAAjB,CAAyB,UAAA4B,SAAS,EAAI;QACpCA,SAAS,CAACC,aAAV,GAA0BzC,KAAK,CAAC0C,aAAN,CAAoBF,SAAS,CAACG,OAA9B,CAA1B;QACAzC,cAAc,CAACG,SAAf,CAAyBmC,SAAzB,EAAoCN,YAApC;MACD,CAHD,EAlDwB,CAuDxB;;MACA,OAAOlC,KAAK,CAAC4C,aAAb;MACA,OAAO5C,KAAK,CAAC0C,aAAb;MACA,OAAO1C,KAAK,CAAC6C,UAAb;MACA,OAAO7C,KAAK,CAACmC,aAAb;MACA,OAAOnC,KAAK,CAAC8C,YAAb;MACA,OAAO9C,KAAK,CAAC+C,SAAb;MACA,OAAO/C,KAAK,CAAC8B,MAAb;MACA,OAAO9B,KAAK,CAACQ,UAAb;MACA,OAAOR,KAAK,CAACW,QAAb;MACA,OAAOX,KAAK,CAACgB,WAAb;IACD;;;;4FAED,kBAA6BgC,KAA7B,EAAoChD,KAApC,EAA2C2C,OAA3C,EAAoD5D,OAApD;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQe,KADR,GACgB,IAAIvB,cAAJ,CAAmBQ,OAAnB,CADhB;gBAAA;gBAAA,OAE0Be,KAAK,CAACC,WAAN,CAAkBiD,KAAlB,CAF1B;;cAAA;gBAEQR,SAFR;gBAGEA,SAAS,CAACG,OAAV,GAAoBA,OAApB;gBACA3C,KAAK,CAAC4C,aAAN,CAAoBI,KAAK,CAACC,IAA1B,IAAkCT,SAAlC;gBACAxC,KAAK,CAACuC,UAAN,CAAiBW,IAAjB,CAAsBV,SAAtB;;cALF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;0FAQA,kBAA2BQ,KAA3B,EAAkChD,KAAlC,EAAyCa,IAAzC;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQf,KADR,GACgB,IAAIpB,aAAJ,EADhB;gBAAA;gBAAA,OAEyBoB,KAAK,CAACC,WAAN,CAAkBiD,KAAlB,CAFzB;;cAAA;gBAEQV,QAFR;gBAGEtC,KAAK,CAACsC,QAAN,cAAqBzB,IAArB,aAAmCyB,QAAnC;;cAHF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wFAMA,kBAAyBU,KAAzB,EAAgChD,KAAhC,EAAuCa,IAAvC;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQf,KADR,GACgB,IAAIrB,UAAJ,EADhB;gBAAA;gBAAA,OAEsBqB,KAAK,CAACC,WAAN,CAAkBiD,KAAlB,CAFtB;;cAAA;gBAEQf,KAFR;gBAGEjC,KAAK,CAACgC,MAAN,qBAA0BnB,IAA1B,aAAwCoB,KAAxC;;cAHF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;gGAMA,kBAAiCe,KAAjC,EAAwChD,KAAxC,EAA+C2C,OAA/C;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQ7C,KADR,GACgB,IAAI3B,kBAAJ,EADhB;gBAAA;gBAAA,OAE8B2B,KAAK,CAACC,WAAN,CAAkBiD,KAAlB,CAF9B;;cAAA;gBAEQP,aAFR;gBAGEzC,KAAK,CAAC0C,aAAN,CAAoBC,OAApB,IAA+BF,aAA/B;;cAHF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wFAMA,kBAAyBO,KAAzB,EAAgChD,KAAhC,EAAuClB,QAAvC;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQqE,OADR,GACkBrE,QAAQ,CAACsE,WAAT,CAAqB,GAArB,CADlB,EAEE;;gBAFF,MAGMD,OAAO,IAAI,CAHjB;kBAAA;kBAAA;gBAAA;;gBAIUE,SAJV,GAIsBvE,QAAQ,CAACwE,MAAT,CAAgBH,OAAO,GAAG,CAA1B,CAJtB;gBAKUtC,IALV,GAKiB/B,QAAQ,CAACwE,MAAT,CAAgB,CAAhB,EAAmBH,OAAnB,CALjB;gBAAA;gBAAA,OAMU,IAAInE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;kBACrC,IAAMqE,SAAS,GAAG,IAAI1F,SAAJ,EAAlB;kBACA0F,SAAS,CAACC,EAAV,CAAa,QAAb,EAAuB,YAAM;oBAC3BxD,KAAK,CAACQ,UAAN,CAAiB1B,QAAjB,IAA6BkB,KAAK,CAACO,KAAN,CAAYkD,MAAzC;oBACAzD,KAAK,CAACQ,UAAN,CAAiBK,IAAjB,IAAyBb,KAAK,CAACO,KAAN,CAAYkD,MAArC;oBACA,IAAMC,MAAM,GAAG;sBACbC,IAAI,EAAE,OADO;sBAEb9C,IAAI,EAAJA,IAFa;sBAGbwC,SAAS,EAATA,SAHa;sBAIbO,MAAM,EAAEL,SAAS,CAACM,QAAV;oBAJK,CAAf;oBAMA7D,KAAK,CAACO,KAAN,CAAY2C,IAAZ,CAAiBQ,MAAjB;oBACAzE,OAAO;kBACR,CAXD;kBAYA+D,KAAK,CAACQ,EAAN,CAAS,OAAT,EAAkB,UAAApE,KAAK,EAAI;oBACzBF,MAAM,CAACE,KAAD,CAAN;kBACD,CAFD;kBAGA4D,KAAK,CAACc,IAAN,CAAWP,SAAX;gBACD,CAlBK,CANV;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;0FA4BA,kBAA2BP,KAA3B,EAAkChD,KAAlC,EAAyCa,IAAzC;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQf,KADR,GACgB,IAAItB,YAAJ,EADhB;gBAAA;gBAAA,OAEwBsB,KAAK,CAACC,WAAN,CAAkBiD,KAAlB,CAFxB;;cAAA;gBAEQlC,OAFR;gBAGEd,KAAK,CAACW,QAAN,CAAeE,IAAf,IAAuBC,OAAvB;;cAHF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;8FAMA,kBAA+BkC,KAA/B,EAAsChD,KAAtC,EAA6Ca,IAA7C;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQf,KADR,GACgB,IAAI3B,kBAAJ,EADhB;gBAAA;gBAAA,OAE8B2B,KAAK,CAACC,WAAN,CAAkBiD,KAAlB,CAF9B;;cAAA;gBAEQP,aAFR;gBAGEzC,KAAK,CAACgB,WAAN,CAAkBH,IAAlB,IAA0B4B,aAA1B;;cAHF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wFAMA,kBAAyBO,KAAzB,EAAgChD,KAAhC,EAAuCa,IAAvC;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,IAAI7B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;kBACrC;kBACA,IAAMQ,MAAM,GAAG,IAAI7B,SAAJ,EAAf;kBACAmF,KAAK,CAACQ,EAAN,CAAS,OAAT,EAAkBtE,MAAlB;kBACAQ,MAAM,CAAC8D,EAAP,CAAU,OAAV,EAAmBtE,MAAnB;kBACAQ,MAAM,CAAC8D,EAAP,CAAU,QAAV,EAAoB,YAAM;oBACxBxD,KAAK,CAAC+D,MAAN,CAAalD,IAAb,IAAqBnB,MAAM,CAACE,IAAP,GAAcoE,QAAd,EAArB;oBACA/E,OAAO;kBACR,CAHD;kBAIA+D,KAAK,CAACc,IAAN,CAAWpE,MAAX;gBACD,CAVK,CADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAcA,2BAAkBX,OAAlB,EAA2B;MAAA;;MACzB,IAAMiB,KAAK,GAAG;QACZuC,UAAU,EAAE,EADA;QAEZK,aAAa,EAAE,EAFH;QAGZF,aAAa,EAAE,EAHH;QAIZqB,MAAM,EAAE,EAJI;QAKZxD,KAAK,EAAE,EALK;QAMZC,UAAU,EAAE,EANA;QAOZG,QAAQ,EAAE,EAPE;QAQZK,WAAW,EAAE,EARD;QASZsB,QAAQ,EAAE,EATE;QAUZN,MAAM,EAAE;MAVI,CAAd,CADyB,CAczB;;MACA,IAAMiC,QAAQ,GAAG,EAAjB;MACA,IAAMvE,MAAM,GAAG,IAAI9B,SAAS,CAACsG,SAAd,CAAwB;QACrCC,YAAY,EAAE,sBAAAlB,IAAI;UAAA,OAAKA,IAAI,CAACmB,KAAL,CAAW,aAAX,IAA4B,YAA5B,GAA2C,QAAhD;QAAA;MADmB,CAAxB,CAAf;MAGA1E,MAAM,CAAC8D,EAAP,CAAU,OAAV,EAAmB,UAAAR,KAAK,EAAI;QAC1BiB,QAAQ,CAACf,IAAT,CACE,wDAAC;UAAA;UAAA;YAAA;cAAA;gBAAA;kBAAA;kBAEOmB,SAFP,GAEmBrB,KAAK,CAACC,IAFzB;;kBAGG,IAAIoB,SAAS,CAAC,CAAD,CAAT,KAAiB,GAArB,EAA0B;oBACxBA,SAAS,GAAGA,SAAS,CAACf,MAAV,CAAiB,CAAjB,CAAZ;kBACD;;kBALJ,gBAMWe,SANX;kBAAA,oCAOU,aAPV,yBAWU,iBAXV,0BAqBU,4BArBV,0BAyBU,sBAzBV,0BA8BU,eA9BV,0BAmCU,kBAnCV,0BA2CU,mBA3CV;kBAAA;;gBAAA;kBAAA;kBAAA,OAQgC,KAAI,CAACC,SAAL,CAAetB,KAAf,CARhC;;gBAAA;kBAQOhD,KAAK,CAAC6C,UARb;kBAAA;;gBAAA;kBAAA;kBAAA,OAY8B,KAAI,CAAC0B,aAAL,CAAmBvB,KAAnB,CAZ9B;;gBAAA;kBAYazD,QAZb;kBAaOS,KAAK,CAACwE,MAAN,GAAejF,QAAQ,CAACiF,MAAxB;kBACAxE,KAAK,CAACyE,YAAN,GAAqBlF,QAAQ,CAACkF,YAA9B;kBACAzE,KAAK,CAAC0E,KAAN,GAAcnF,QAAQ,CAACmF,KAAvB;kBACA1E,KAAK,CAACqC,UAAN,GAAmB9C,QAAQ,CAAC8C,UAA5B;kBACArC,KAAK,CAAC2E,cAAN,GAAuBpF,QAAQ,CAACoF,cAAhC;kBAjBP;;gBAAA;kBAAA;kBAAA,OAsBkC,KAAI,CAACL,SAAL,CAAetB,KAAf,CAtBlC;;gBAAA;kBAsBOhD,KAAK,CAAC8C,YAtBb;kBAAA;;gBAAA;kBA0BO9C,KAAK,CAACmC,aAAN,GAAsB,IAAIjE,kBAAJ,EAAtB;kBA1BP;kBAAA,OA2Ba8B,KAAK,CAACmC,aAAN,CAAoBpC,WAApB,CAAgCiD,KAAhC,CA3Bb;;gBAAA;kBAAA;;gBAAA;kBA+BOhD,KAAK,CAAC8B,MAAN,GAAe,IAAI9D,WAAJ,EAAf;kBA/BP;kBAAA,OAgCagC,KAAK,CAAC8B,MAAN,CAAa/B,WAAb,CAAyBiD,KAAzB,CAhCb;;gBAAA;kBAAA;;gBAAA;kBAoCa4B,QApCb,GAoCwB,IAAIvG,QAAJ,EApCxB;kBAAA;kBAAA,OAqCmCuG,QAAQ,CAAC7E,WAAT,CAAqBiD,KAArB,CArCnC;;gBAAA;kBAqCa6B,aArCb;kBAsCO7E,KAAK,CAAC8E,OAAN,GAAgBD,aAAa,CAACC,OAA9B;kBACA9E,KAAK,CAAC+E,OAAN,GAAgBF,aAAa,CAACE,OAA9B;kBAvCP;;gBAAA;kBA4CaC,SA5Cb,GA4CyB,IAAI/G,SAAJ,EA5CzB;kBAAA;kBAAA,OA6CoC+G,SAAS,CAACjF,WAAV,CAAsBiD,KAAtB,CA7CpC;;gBAAA;kBA6CaiC,cA7Cb;kBA8COxE,MAAM,CAACyE,MAAP,CAAclF,KAAd,EAAqBiF,cAArB;kBA9CP;;gBAAA;kBAmDWb,KAnDX,GAmDmBpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,kCAAjB,CAnDnB;;kBAAA,KAoDWA,KApDX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OAqDe,KAAI,CAACe,sBAAL,CAA4BnC,KAA5B,EAAmChD,KAAnC,EAA0CoE,KAAK,CAAC,CAAD,CAA/C,EAAoDrF,OAApD,CArDf;;gBAAA;kBAAA;;gBAAA;kBAwDOqF,KAAK,GAAGpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,8CAAjB,CAAR;;kBAxDP,KAyDWA,KAzDX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OA0De,KAAI,CAACgB,0BAAL,CAAgCpC,KAAhC,EAAuChD,KAAvC,EAA8CoE,KAAK,CAAC,CAAD,CAAnD,CA1Df;;gBAAA;kBAAA;;gBAAA;kBA6DOA,KAAK,GAAGpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,iCAAjB,CAAR;;kBA7DP,KA8DWA,KA9DX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OA+De,KAAI,CAACiB,kBAAL,CAAwBrC,KAAxB,EAA+BhD,KAA/B,EAAsCoE,KAAK,CAAC,CAAD,CAA3C,CA/Df;;gBAAA;kBAAA;;gBAAA;kBAkEOA,KAAK,GAAGpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,+CAAjB,CAAR;;kBAlEP,KAmEWA,KAnEX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OAoEe,KAAI,CAACkB,kBAAL,CAAwBtC,KAAxB,EAA+BhD,KAA/B,EAAsCoE,KAAK,CAAC,CAAD,CAA3C,CApEf;;gBAAA;kBAAA;;gBAAA;kBAuEOA,KAAK,GAAGpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,oCAAjB,CAAR;;kBAvEP,KAwEWA,KAxEX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OAyEe,KAAI,CAACmB,oBAAL,CAA0BvC,KAA1B,EAAiChD,KAAjC,EAAwCoE,KAAK,CAAC,CAAD,CAA7C,CAzEf;;gBAAA;kBAAA;;gBAAA;kBA4EOA,KAAK,GAAGpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,yBAAjB,CAAR;;kBA5EP,KA6EWA,KA7EX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OA8Ee,KAAI,CAACoB,oBAAL,CAA0BxC,KAA1B,EAAiChD,KAAjC,EAAwCoE,KAAK,CAAC,CAAD,CAA7C,CA9Ef;;gBAAA;kBAAA;;gBAAA;kBAiFOA,KAAK,GAAGpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,8BAAjB,CAAR;;kBAjFP,KAkFWA,KAlFX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OAmFe,KAAI,CAACqB,kBAAL,CAAwBzC,KAAxB,EAA+BhD,KAA/B,EAAsCoE,KAAK,CAAC,CAAD,CAA3C,CAnFf;;gBAAA;kBAAA;;gBAAA;kBAsFOA,KAAK,GAAGpB,KAAK,CAACC,IAAN,CAAWmB,KAAX,CAAiB,kDAAjB,CAAR;;kBAtFP,KAuFWA,KAvFX;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA,OAwFe,KAAI,CAACsB,wBAAL,CAA8B1C,KAA9B,EAAqChD,KAArC,EAA4CoE,KAAK,CAAC,CAAD,CAAjD,CAxFf;;gBAAA;kBAAA;;gBAAA;kBA4FOpB,KAAK,CAAC2C,SAAN;;gBA5FP;kBAAA;kBAAA;;gBAAA;kBAAA;kBAAA;kBAgGGjG,MAAM,CAACkG,OAAP;kBAhGH;;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAAD,IADF;MAsGD,CAvGD;MAwGAlG,MAAM,CAAC8D,EAAP,CAAU,UAAV,uEAAsB;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEZxE,OAAO,CAAC6G,GAAR,CAAY5B,QAAZ,CAFY;;cAAA;gBAGlB,KAAI,CAAC5D,SAAL,CAAeL,KAAf,EAAsBjB,OAAtB,EAHkB,CAKlB;;;gBACA,KAAI,CAACQ,QAAL,CAAcS,KAAd,GAAsBA,KAAtB;gBACAN,MAAM,CAACoG,IAAP,CAAY,MAAZ;gBAPkB;gBAAA;;cAAA;gBAAA;gBAAA;gBASlBpG,MAAM,CAACoG,IAAP,CAAY,OAAZ;;cATkB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAtB;MAYA,OAAOpG,MAAP;IACD;;;WAED,cAAKA,MAAL,EAAaX,OAAb,EAAsB;MAAA;;MACpB,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QACtCH,OAAO,GAAGA,OAAO,IAAI,EAArB;;QACA,IAAMgH,SAAS,GAAG,MAAI,CAACC,iBAAL,CAAuBjH,OAAvB,CAAlB;;QACAgH,SAAS,CACNvC,EADH,CACM,MADN,EACc,YAAM;UAChBvE,OAAO,CAAC,MAAI,CAACM,QAAN,CAAP;QACD,CAHH,EAIGiE,EAJH,CAIM,OAJN,EAIe,UAAApE,KAAK,EAAI;UACpBF,MAAM,CAACE,KAAD,CAAN;QACD,CANH;QAOAM,MAAM,CAACoE,IAAP,CAAYiC,SAAZ;MACD,CAXM,CAAP;IAYD;;;WAED,cAAK1G,IAAL,EAAWN,OAAX,EAAoB;MAAA;;MAClB,IAAIA,OAAO,KAAKkH,SAAhB,EAA2B;QACzBlH,OAAO,GAAG,EAAV;MACD;;MACD,IAAMgH,SAAS,GAAG,KAAKC,iBAAL,EAAlB;MACA,OAAO,IAAIhH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QACtC6G,SAAS,CACNvC,EADH,CACM,MADN,EACc,YAAM;UAChBvE,OAAO,CAAC,MAAI,CAACM,QAAN,CAAP;QACD,CAHH,EAIGiE,EAJH,CAIM,OAJN,EAIe,UAAApE,KAAK,EAAI;UACpBF,MAAM,CAACE,KAAD,CAAN;QACD,CANH;;QAQA,IAAIL,OAAO,CAACmH,MAAZ,EAAoB;UAClB,IAAMtC,MAAM,GAAGuC,MAAM,CAACC,IAAP,CAAY/G,IAAI,CAAC2E,QAAL,EAAZ,EAA6B,QAA7B,CAAf;UACA+B,SAAS,CAACM,KAAV,CAAgBzC,MAAhB;QACD,CAHD,MAGO;UACLmC,SAAS,CAACM,KAAV,CAAgBhH,IAAhB;QACD;;QACD0G,SAAS,CAACO,GAAV;MACD,CAhBM,CAAP;IAiBD,C,CAED;IACA;;;;;8EAEA,mBAAeC,GAAf,EAAoBvG,KAApB;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQhB,OAAO,CAAC6G,GAAR,CACJ7F,KAAK,CAACO,KAAN,CAAYiG,GAAZ;kBAAA,oEAAgB,mBAAM9C,MAAN;oBAAA;oBAAA;sBAAA;wBAAA;0BAAA;4BAAA,MACVA,MAAM,CAACC,IAAP,KAAgB,OADN;8BAAA;8BAAA;4BAAA;;4BAEN7E,QAFM,sBAEiB4E,MAAM,CAAC7C,IAFxB,cAEgC6C,MAAM,CAACL,SAFvC;;4BAAA,KAGRK,MAAM,CAAC5E,QAHC;8BAAA;8BAAA;4BAAA;;4BAAA;4BAAA,OAISD,eAAe,CAAC6E,MAAM,CAAC5E,QAAR,CAJxB;;0BAAA;4BAIJO,IAJI;4BAAA,mCAKHkH,GAAG,CAACE,MAAJ,CAAWpH,IAAX,EAAiB;8BAACwB,IAAI,EAAE/B;4BAAP,CAAjB,CALG;;0BAAA;4BAAA,KAOR4E,MAAM,CAACE,MAPC;8BAAA;8BAAA;4BAAA;;4BAAA,mCAQH2C,GAAG,CAACE,MAAJ,CAAW/C,MAAM,CAACE,MAAlB,EAA0B;8BAAC/C,IAAI,EAAE/B;4BAAP,CAA1B,CARG;;0BAAA;4BAAA,KAUR4E,MAAM,CAACwC,MAVC;8BAAA;8BAAA;4BAAA;;4BAWJQ,SAXI,GAWQhD,MAAM,CAACwC,MAXf;4BAYJS,OAZI,GAYMD,SAAS,CAACE,SAAV,CAAoBF,SAAS,CAACG,OAAV,CAAkB,GAAlB,IAAyB,CAA7C,CAZN;4BAAA,mCAaHN,GAAG,CAACE,MAAJ,CAAWE,OAAX,EAAoB;8BAAC9F,IAAI,EAAE/B,QAAP;8BAAiBoH,MAAM,EAAE;4BAAzB,CAApB,CAbG;;0BAAA;4BAAA,MAgBR,IAAIzG,KAAJ,CAAU,mBAAV,CAhBQ;;0BAAA;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA,CAAhB;;kBAAA;oBAAA;kBAAA;gBAAA,IADI,CADR;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAuBA,qBAAY8G,GAAZ,EAAiBvG,KAAjB,EAAwB;MACtB,IAAMG,YAAY,GAAG,IAAI3B,YAAJ,EAArB;MACA,IAAMsI,SAAS,GAAG,IAAI3I,kBAAJ,EAAlB;MAEA6B,KAAK,CAACuC,UAAN,CAAiB3B,OAAjB,CAAyB,UAAA4B,SAAS,EAAI;QACpC,IAAO1B,OAAP,GAAkB0B,SAAlB,CAAO1B,OAAP;;QACA,IAAIA,OAAJ,EAAa;UACXX,YAAY,CAAC4G,OAAb,CAAqBjG,OAArB,EAA8B,EAA9B;UACA,IAAIkG,GAAG,GAAG7G,YAAY,CAAC8G,KAAb,CAAmBnG,OAAnB,CAAV;UACAyF,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;YAACnG,IAAI,wBAAiBC,OAAO,CAACD,IAAzB;UAAL,CAAhB;UAEAmG,GAAG,GAAGF,SAAS,CAACG,KAAV,CAAgBnG,OAAO,CAACG,IAAxB,CAAN;UACAsF,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;YAACnG,IAAI,8BAAuBC,OAAO,CAACD,IAA/B;UAAL,CAAhB;QACD;MACF,CAVD;IAWD;;;WAED,mBAAU0F,GAAV,EAAevG,KAAf,EAAsB;MACpB,IAAMI,UAAU,GAAG,IAAI3B,UAAJ,EAAnB;MAEAuB,KAAK,CAACuC,UAAN,CAAiB3B,OAAjB,CAAyB,UAAA4B,SAAS,EAAI;QACpC,IAAOR,MAAP,GAAiBQ,SAAjB,CAAOR,MAAP;QACAA,MAAM,CAACpB,OAAP,CAAe,UAAAqB,KAAK,EAAI;UACtB7B,UAAU,CAAC2G,OAAX,CAAmB9E,KAAnB,EAA0B,EAA1B;UACA,IAAMiF,QAAQ,GAAG9G,UAAU,CAAC6G,KAAX,CAAiBhF,KAAjB,CAAjB;UACAsE,GAAG,CAACE,MAAJ,CAAWS,QAAX,EAAqB;YAACrG,IAAI,sBAAeoB,KAAK,CAACkF,MAArB;UAAL,CAArB;QACD,CAJD;MAKD,CAPD;IAQD;;;;qFAED,mBAAsBZ,GAAtB,EAA2BvG,KAA3B;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQF,KADR,GACgB,IAAI1B,iBAAJ,EADhB;gBAEQ4I,GAFR,GAEclH,KAAK,CAACmH,KAAN,CAAYjH,KAAZ,CAFd;gBAGEuG,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;kBAACnG,IAAI,EAAE;gBAAP,CAAhB;;cAHF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;4EAMA,mBAAa0F,GAAb,EAAkBvG,KAAlB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQF,KADR,GACgB,IAAIzB,QAAJ,EADhB;gBAEQ2I,GAFR,GAEclH,KAAK,CAACmH,KAAN,CAAYjH,KAAZ,CAFd;gBAGEuG,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;kBAACnG,IAAI,EAAE;gBAAP,CAAhB;;cAHF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;6EAMA,mBAAc0F,GAAd,EAAmBvG,KAAnB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQgF,SADR,GACoB,IAAI/G,SAAJ,EADpB;gBAEEsI,GAAG,CAACE,MAAJ,CAAWzB,SAAS,CAACiC,KAAV,CAAgBjH,KAAhB,CAAX,EAAmC;kBAACa,IAAI,EAAE;gBAAP,CAAnC;;cAFF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;+EAKA,mBAAgB0F,GAAhB,EAAqBvG,KAArB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQ+D,MADR,GACiB/D,KAAK,CAAC+D,MAAN,IAAgB;kBAACqD,MAAM,EAAExI;gBAAT,CADjC;gBAEE6B,MAAM,CAACC,IAAP,CAAYqD,MAAZ,EAAoBnD,OAApB,CAA4B,UAAAC,IAAI,EAAI;kBAClC,IAAMmG,GAAG,GAAGjD,MAAM,CAAClD,IAAD,CAAlB;kBACA,IAAMoC,IAAI,sBAAepC,IAAf,SAAV;kBACA0F,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;oBAACnG,IAAI,EAAEoC;kBAAP,CAAhB;gBACD,CAJD;;cAFF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;mFASA,mBAAoBsD,GAApB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQzG,KADR,GACgB,IAAI3B,kBAAJ,EADhB;gBAEQ6I,GAFR,GAEclH,KAAK,CAACmH,KAAN,CAAY,CACtB;kBAAC5F,EAAE,EAAE,MAAL;kBAAagG,IAAI,EAAE/H,IAAI,CAACgI,OAAL,CAAaC,cAAhC;kBAAgD3F,MAAM,EAAE;gBAAxD,CADsB,EAEtB;kBAACP,EAAE,EAAE,MAAL;kBAAagG,IAAI,EAAE/H,IAAI,CAACgI,OAAL,CAAaE,cAAhC;kBAAgD5F,MAAM,EAAE;gBAAxD,CAFsB,EAGtB;kBAACP,EAAE,EAAE,MAAL;kBAAagG,IAAI,EAAE/H,IAAI,CAACgI,OAAL,CAAaG,kBAAhC;kBAAoD7F,MAAM,EAAE;gBAA5D,CAHsB,CAAZ,CAFd;gBAOE2E,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;kBAACnG,IAAI,EAAE;gBAAP,CAAhB;;cAPF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;qFAUA,mBAAsB0F,GAAtB,EAA2BvG,KAA3B;QAAA;QAAA;UAAA;YAAA;cAAA;gBACM0H,KADN,GACc,CADd;gBAEQjF,aAFR,GAEwB,CACpB;kBAACpB,EAAE,eAAQqG,KAAK,EAAb,CAAH;kBAAsBL,IAAI,EAAE/H,IAAI,CAACgI,OAAL,CAAaK,MAAzC;kBAAiD/F,MAAM,EAAE;gBAAzD,CADoB,EAEpB;kBAACP,EAAE,eAAQqG,KAAK,EAAb,CAAH;kBAAsBL,IAAI,EAAE/H,IAAI,CAACgI,OAAL,CAAaM,KAAzC;kBAAgDhG,MAAM,EAAE;gBAAxD,CAFoB,CAFxB;;gBAME,IAAI5B,KAAK,CAACmC,aAAN,CAAoBuF,KAAxB,EAA+B;kBAC7BjF,aAAa,CAACS,IAAd,CAAmB;oBAAC7B,EAAE,eAAQqG,KAAK,EAAb,CAAH;oBAAsBL,IAAI,EAAE/H,IAAI,CAACgI,OAAL,CAAaO,aAAzC;oBAAwDjG,MAAM,EAAE;kBAAhE,CAAnB;gBACD;;gBACD5B,KAAK,CAACuC,UAAN,CAAiB3B,OAAjB,CAAyB,UAAA4B,SAAS,EAAI;kBACpCA,SAAS,CAACd,GAAV,gBAAsBgG,KAAK,EAA3B;kBACAjF,aAAa,CAACS,IAAd,CAAmB;oBAAC7B,EAAE,EAAEmB,SAAS,CAACd,GAAf;oBAAoB2F,IAAI,EAAE/H,IAAI,CAACgI,OAAL,CAAaQ,SAAvC;oBAAkDlG,MAAM,4BAAqBY,SAAS,CAACuF,EAA/B;kBAAxD,CAAnB;gBACD,CAHD;gBAIMjI,KAbR,GAagB,IAAI3B,kBAAJ,EAbhB;gBAcQ6I,GAdR,GAcclH,KAAK,CAACmH,KAAN,CAAYxE,aAAZ,CAdd;gBAeE8D,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;kBAACnG,IAAI,EAAE;gBAAP,CAAhB;;cAfF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;sFAkBA,mBAAuB0F,GAAvB,EAA4BvG,KAA5B;QAAA;UAAA;YAAA;cAAA;gBACE,IAAIA,KAAK,CAACmC,aAAN,IAAuBnC,KAAK,CAACmC,aAAN,CAAoBuF,KAA/C,EAAsD;kBACpDnB,GAAG,CAACE,MAAJ,CAAWzG,KAAK,CAACmC,aAAN,CAAoB6E,GAA/B,EAAoC;oBAACnG,IAAI,EAAE;kBAAP,CAApC;gBACD;;cAHH;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;+EAMA,mBAAgB0F,GAAhB,EAAqBvG,KAArB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACSgH,GADT,GACgBhH,KAAK,CAAC8B,MADtB,CACSkF,GADT;;gBAEE,IAAIA,GAAJ,EAAS;kBACPT,GAAG,CAACE,MAAJ,CAAWO,GAAX,EAAgB;oBAACnG,IAAI,EAAE;kBAAP,CAAhB;gBACD;;cAJH;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;iFAOA,mBAAkB0F,GAAlB,EAAuBvG,KAAvB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQF,KADR,GACgB,IAAIxB,aAAJ,EADhB;gBAEEiI,GAAG,CAACE,MAAJ,CAAW3G,KAAK,CAACmH,KAAN,CAAYjH,KAAZ,CAAX,EAA+B;kBAACa,IAAI,EAAE;gBAAP,CAA/B;;cAFF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;mFAKA,mBAAoB0F,GAApB,EAAyBvG,KAAzB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACE;gBACME,cAFR,GAEyB,IAAI3B,cAAJ,EAFzB;gBAGQyJ,kBAHR,GAG6B,IAAI7J,kBAAJ,EAH7B;gBAIQ8J,aAJR,GAIwB,IAAIvJ,aAAJ,EAJxB;gBAKQwJ,aALR,GAKwB,IAAIvJ,aAAJ,EALxB,EAOE;;gBACAqB,KAAK,CAACuC,UAAN,CAAiB3B,OAAjB,CAAyB,UAAA4B,SAAS,EAAI;kBACpC,IAAI2F,SAAS,GAAG,IAAIpK,SAAJ,EAAhB;kBACAmC,cAAc,CAACkI,MAAf,CAAsBD,SAAtB,EAAiC3F,SAAjC;kBACA+D,GAAG,CAACE,MAAJ,CAAW0B,SAAS,CAACnB,GAArB,EAA0B;oBAACnG,IAAI,+BAAwB2B,SAAS,CAACuF,EAAlC;kBAAL,CAA1B;;kBAEA,IAAIvF,SAAS,CAACvB,IAAV,IAAkBuB,SAAS,CAACvB,IAAV,CAAewC,MAArC,EAA6C;oBAC3C0E,SAAS,GAAG,IAAIpK,SAAJ,EAAZ;oBACAiK,kBAAkB,CAACI,MAAnB,CAA0BD,SAA1B,EAAqC3F,SAAS,CAACvB,IAA/C;oBACAsF,GAAG,CAACE,MAAJ,CAAW0B,SAAS,CAACnB,GAArB,EAA0B;sBAACnG,IAAI,qCAA8B2B,SAAS,CAACuF,EAAxC;oBAAL,CAA1B;kBACD;;kBAED,IAAIvF,SAAS,CAACF,QAAV,CAAmBmB,MAAnB,GAA4B,CAAhC,EAAmC;oBACjC0E,SAAS,GAAG,IAAIpK,SAAJ,EAAZ;oBACAkK,aAAa,CAACG,MAAd,CAAqBD,SAArB,EAAgC3F,SAAhC;oBACA+D,GAAG,CAACE,MAAJ,CAAW0B,SAAS,CAACnB,GAArB,EAA0B;sBAACnG,IAAI,uBAAgB2B,SAAS,CAACuF,EAA1B;oBAAL,CAA1B;oBAEAI,SAAS,GAAG,IAAIpK,SAAJ,EAAZ;oBACAmK,aAAa,CAACE,MAAd,CAAqBD,SAArB,EAAgC3F,SAAhC;oBACA+D,GAAG,CAACE,MAAJ,CAAW0B,SAAS,CAACnB,GAArB,EAA0B;sBAACnG,IAAI,kCAA2B2B,SAAS,CAACuF,EAArC;oBAAL,CAA1B;kBACD;gBACF,CApBD;;cARF;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WA+BA,mBAAUxB,GAAV,EAAe;MAAA;;MACb,OAAO,IAAIvH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QACtCqH,GAAG,CAAC/C,EAAJ,CAAO,QAAP,EAAiB,YAAM;UACrBvE,OAAO,CAAC,MAAD,CAAP;QACD,CAFD;QAGAsH,GAAG,CAAC/C,EAAJ,CAAO,OAAP,EAAgBtE,MAAhB;QACAqH,GAAG,CAAC8B,QAAJ;MACD,CANM,CAAP;IAOD;;;WAED,sBAAarI,KAAb,EAAoBjB,OAApB,EAA6B;MAC3B;MACAiB,KAAK,CAACsI,OAAN,GAAgBtI,KAAK,CAACsI,OAAN,IAAiB,SAAjC;MACAtI,KAAK,CAACuI,cAAN,GAAuBvI,KAAK,CAACuI,cAAN,IAAwB,SAA/C;MACAvI,KAAK,CAACwI,OAAN,GAAgBxI,KAAK,CAACwI,OAAN,IAAiB,IAAIC,IAAJ,EAAjC;MACAzI,KAAK,CAAC0I,QAAN,GAAiB1I,KAAK,CAAC0I,QAAN,IAAkB,IAAID,IAAJ,EAAnC;MAEAzI,KAAK,CAAC2I,gBAAN,GAAyB5J,OAAO,CAAC4J,gBAAR,KAA6B1C,SAA7B,GAAyClH,OAAO,CAAC4J,gBAAjD,GAAoE,IAA7F;MACA3I,KAAK,CAAC4I,SAAN,GAAkB7J,OAAO,CAAC6J,SAAR,KAAsB3C,SAAtB,GAAkClH,OAAO,CAAC6J,SAA1C,GAAsD,IAAxE,CAR2B,CAU3B;;MACA5I,KAAK,CAACmC,aAAN,GAAsB,IAAIjE,kBAAJ,EAAtB,CAX2B,CAa3B;;MACA8B,KAAK,CAAC8B,MAAN,GAAe9B,KAAK,CAAC4I,SAAN,GAAkB,IAAI5K,WAAJ,CAAgB,IAAhB,CAAlB,GAA0C,IAAIA,WAAW,CAAC6K,IAAhB,EAAzD,CAd2B,CAgB3B;;MACA,IAAM5I,aAAa,GAAG,IAAI3B,aAAJ,EAAtB;MACA,IAAM4B,cAAc,GAAG,IAAI3B,cAAJ,EAAvB;MAEA0B,aAAa,CAAC8G,OAAd,CAAsB/G,KAAtB;MAEA,IAAM8I,gBAAgB,GAAG;QACvB3G,aAAa,EAAEnC,KAAK,CAACmC,aADE;QAEvBL,MAAM,EAAE9B,KAAK,CAAC8B,MAFS;QAGvBM,QAAQ,EAAEpC,KAAK,CAACqC,UAAN,CAAiBD,QAHJ;QAIvB2G,aAAa,EAAE,CAJQ;QAKvBxI,KAAK,EAAEP,KAAK,CAACO;MALU,CAAzB;MAOAuI,gBAAgB,CAACnI,QAAjB,GAA4BX,KAAK,CAACW,QAAN,GAAiB,EAA7C;MACAmI,gBAAgB,CAACE,WAAjB,GAA+BhJ,KAAK,CAACgJ,WAAN,GAAoB,EAAnD;MACA,IAAIC,UAAU,GAAG,CAAjB;MACAjJ,KAAK,CAACgC,MAAN,GAAe,EAAf;MACAhC,KAAK,CAACuC,UAAN,CAAiB3B,OAAjB,CAAyB,UAAA4B,SAAS,EAAI;QACpC;QACAA,SAAS,CAACR,MAAV,CAAiBpB,OAAjB,CAAyB,UAAAqB,KAAK,EAAI;UAChCgH,UAAU;UACVhH,KAAK,CAACkF,MAAN,kBAAuB8B,UAAvB;UACAhH,KAAK,CAAC8F,EAAN,GAAWkB,UAAX;UACAjJ,KAAK,CAACgC,MAAN,CAAakB,IAAb,CAAkBjB,KAAlB;QACD,CALD;QAOA/B,cAAc,CAAC6G,OAAf,CAAuBvE,SAAvB,EAAkCsG,gBAAlC;MACD,CAVD,EAjC2B,CA6C3B;IACD;;;;2EAED,mBAAYpJ,MAAZ,EAAoBX,OAApB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACEA,OAAO,GAAGA,OAAO,IAAI,EAArB;gBACOiB,KAFT,GAEkB,KAAKT,QAFvB,CAESS,KAFT;gBAGQuG,GAHR,GAGc,IAAI3I,SAAS,CAACsL,SAAd,CAAwBnK,OAAO,CAACwH,GAAhC,CAHd;gBAIEA,GAAG,CAACzC,IAAJ,CAASpE,MAAT;gBAEA,KAAKyJ,YAAL,CAAkBnJ,KAAlB,EAAyBjB,OAAzB,EANF,CAQE;;gBARF;gBAAA,OASQ,KAAKqK,eAAL,CAAqB7C,GAArB,EAA0BvG,KAA1B,CATR;;cAAA;gBAAA;gBAAA,OAUQ,KAAKqJ,aAAL,CAAmB9C,GAAnB,EAAwBvG,KAAxB,CAVR;;cAAA;gBAAA;gBAAA,OAWQ,KAAKsJ,eAAL,CAAqB/C,GAArB,EAA0BvG,KAA1B,CAXR;;cAAA;gBAAA;gBAAA,OAYQ,KAAKuJ,aAAL,CAAmBhD,GAAnB,EAAwBvG,KAAxB,CAZR;;cAAA;gBAAA;gBAAA,OAaQ,KAAKwJ,gBAAL,CAAsBjD,GAAtB,EAA2BvG,KAA3B,CAbR;;cAAA;gBAAA;gBAAA,OAcQ,KAAKyJ,WAAL,CAAiBlD,GAAjB,EAAsBvG,KAAtB,CAdR;;cAAA;gBAAA;gBAAA,OAeQ,KAAK0J,SAAL,CAAenD,GAAf,EAAoBvG,KAApB,CAfR;;cAAA;gBAAA;gBAAA,OAgBQhB,OAAO,CAAC6G,GAAR,CAAY,CAAC,KAAK8D,SAAL,CAAepD,GAAf,EAAoBvG,KAApB,CAAD,EAA6B,KAAK4J,SAAL,CAAerD,GAAf,EAAoBvG,KAApB,CAA7B,CAAZ,CAhBR;;cAAA;gBAAA;gBAAA,OAiBQ,KAAK6J,QAAL,CAActD,GAAd,EAAmBvG,KAAnB,CAjBR;;cAAA;gBAAA;gBAAA,OAkBQhB,OAAO,CAAC6G,GAAR,CAAY,CAAC,KAAKiE,MAAL,CAAYvD,GAAZ,EAAiBvG,KAAjB,CAAD,EAA0B,KAAK+J,OAAL,CAAaxD,GAAb,EAAkBvG,KAAlB,CAA1B,CAAZ,CAlBR;;cAAA;gBAAA;gBAAA,OAmBQ,KAAKgK,WAAL,CAAiBzD,GAAjB,EAAsBvG,KAAtB,CAnBR;;cAAA;gBAAA,mCAoBS,KAAKiK,SAAL,CAAe1D,GAAf,CApBT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAuBA,mBAAUzH,QAAV,EAAoBC,OAApB,EAA6B;MAAA;;MAC3B,IAAMW,MAAM,GAAGhC,EAAE,CAACwM,iBAAH,CAAqBpL,QAArB,CAAf;MAEA,OAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QACtCQ,MAAM,CAAC8D,EAAP,CAAU,QAAV,EAAoB,YAAM;UACxBvE,OAAO;QACR,CAFD;QAGAS,MAAM,CAAC8D,EAAP,CAAU,OAAV,EAAmB,UAAApE,KAAK,EAAI;UAC1BF,MAAM,CAACE,KAAD,CAAN;QACD,CAFD;;QAIA,MAAI,CAACiH,KAAL,CAAW3G,MAAX,EAAmBX,OAAnB,EACGoL,IADH,CACQ,YAAM;UACVzK,MAAM,CAAC4G,GAAP;QACD,CAHH;MAID,CAZM,CAAP;IAaD;;;;iFAED,mBAAkBvH,OAAlB;QAAA;QAAA;UAAA;YAAA;cAAA;gBACQW,MADR,GACiB,IAAI7B,SAAJ,EADjB;gBAAA;gBAAA,OAEQ,KAAKwI,KAAL,CAAW3G,MAAX,EAAmBX,OAAnB,CAFR;;cAAA;gBAAA,mCAGSW,MAAM,CAACE,IAAP,EAHT;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;;;AAOFN,IAAI,CAACgI,OAAL,GAAe3J,OAAO,CAAC,YAAD,CAAtB;AAEAyM,MAAM,CAACC,OAAP,GAAiB/K,IAAjB"}