{"version":3,"file":"zip-stream.js","names":["events","require","JSZip","StreamBuf","ZipReader","options","count","jsZip","stream","on","_process","getEntryType","process","nextTick","emit","content","read","loadAsync","zip","forEach","path","entry","dir","async","data","entryStream","write","autodrain","_finished","encoding","callback","error","result","cork","uncork","end","EventEmitter","ZipWriter","Object","assign","type","compression","hasOwnProperty","base64","file","name","generateAsync","size","setEncoding","pause","resume","isPaused","destination","pipe","unpipe","chunk","unshift","wrap","module","exports"],"sources":["../../../lib/utils/zip-stream.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst events = require('events');\nconst JSZip = require('jszip');\n\nconst StreamBuf = require('./stream-buf');\n\n// The purpose of this module is to wrap the js-zip library into a streaming zip library\n// since most of the exceljs code uses streams.\n// One day I might find (or build) a properly streaming browser safe zip lib\n\n\n// =============================================================================\n// The ZipReader class\n// Unpacks an incoming zip stream\nclass ZipReader extends events.EventEmitter {\n  constructor(options) {\n    super();\n\n    this.count = 0;\n    this.jsZip = new JSZip();\n    this.stream = new StreamBuf();\n    this.stream.on('finish', () => {\n      this._process();\n    });\n    this.getEntryType = options.getEntryType || (() => 'string');\n  };\n\n  _finished() {\n    if (!--this.count) {\n      process.nextTick(() => {\n        this.emit('finished');\n      });\n    }\n  }\n\n  async _process() {\n    try {\n      const content = this.stream.read();\n      const zip = await this.jsZip.loadAsync(content);\n      zip.forEach(async (path, entry) => {\n        if (!entry.dir) {\n          this.count++;\n          try {\n            const data = await entry.async(this.getEntryType(path));\n            const entryStream = new StreamBuf();\n            entryStream.path = path;\n            entryStream.write(data);\n            entryStream.autodrain = () => {\n              this._finished();\n            };\n            entryStream.on('finish', () => {\n              this._finished();\n            });\n\n            this.emit('entry', entryStream);\n          } catch (error) {\n            this.emit('error', error);\n          }\n        }\n      });\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  // ==========================================================================\n  // Stream.Writable interface\n  async write(data, encoding, callback) {\n    if (this.error) {\n      if (callback) {\n        callback(this.error);\n      }\n      throw this.error;\n    } else {\n      try {\n        const result = await this.stream.write(data, encoding, callback);\n        return result;\n     } catch (err) {\n       this.emit('error', err);\n       return err;\n     }\n    }\n  }\n\n  cork() {\n    return this.stream.cork();\n  }\n\n  uncork() {\n    return this.stream.uncork();\n  }\n\n  end() {\n    return this.stream.end();\n  }\n\n  destroy(error) {\n    this.emit('finished');\n    this.error = error;\n  }\n}\n\n// =============================================================================\n// The ZipWriter class\n// Packs streamed data into an output zip stream\nclass ZipWriter extends events.EventEmitter {\n  constructor(options) {\n    super();\n    this.options = Object.assign({\n      type: 'nodebuffer',\n      compression: 'DEFLATE',\n    }, options);\n\n    this.zip = new JSZip();\n    this.stream = new StreamBuf();\n  };\n\n  append(data, options) {\n    if (options.hasOwnProperty('base64') && options.base64) {\n      this.zip.file(options.name, data, {base64: true});\n    } else {\n      this.zip.file(options.name, data);\n    }\n  }\n\n  async finalize() {\n    const content = await this.zip.generateAsync(this.options);\n    this.stream.end(content);\n    this.emit('finish');\n  }\n\n  // ==========================================================================\n  // Stream.Readable interface\n  read(size) {\n    return this.stream.read(size);\n  }\n\n  setEncoding(encoding) {\n    return this.stream.setEncoding(encoding);\n  }\n\n  pause() {\n    return this.stream.pause();\n  }\n\n  resume() {\n    return this.stream.resume();\n  }\n\n  isPaused() {\n    return this.stream.isPaused();\n  }\n\n  pipe(destination, options) {\n    return this.stream.pipe(\n      destination,\n      options\n    );\n  }\n\n  unpipe(destination) {\n    return this.stream.unpipe(destination);\n  }\n\n  unshift(chunk) {\n    return this.stream.unshift(chunk);\n  }\n\n  wrap(stream) {\n    return this.stream.wrap(stream);\n  }\n}\n\n// =============================================================================\n\nmodule.exports = {\n  ZipReader,\n  ZipWriter,\n};\n"],"mappings":"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"}