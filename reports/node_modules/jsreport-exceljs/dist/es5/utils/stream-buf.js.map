{"version":3,"file":"stream-buf.js","names":["Stream","require","utils","StringBuf","StringChunk","data","encoding","_data","_encoding","toBuffer","length","target","targetOffset","offset","copy","_buffer","Buffer","from","StringBufChunk","_buf","BufferChunk","ReadWriteBuf","size","buffer","alloc","iRead","iWrite","buf","undefined","chunk","Math","min","StreamBuf","options","bufSize","buffers","batch","corked","inPos","outPos","pipes","paused","inherits","Duplex","concat","map","rwBuf","_getWritableBuffer","last","full","push","_pipe","write","pipe","Promise","resolve","all","_writeToBuffers","inLen","callback","Function","nop","String","Error","shift","process","nextTick","emit","cork","_flush","uncork","end","writeComplete","error","forEach","read","eod","first","filter","Boolean","setEncoding","pause","resume","isPaused","destination","unpipe","unshift","wrap","module","exports"],"sources":["../../../lib/utils/stream-buf.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nconst Stream = require('stream');\n\nconst utils = require('./utils');\nconst StringBuf = require('./string-buf');\n\n// =============================================================================\n// data chunks - encapsulating incoming data\nclass StringChunk {\n  constructor(data, encoding) {\n    this._data = data;\n    this._encoding = encoding;\n  }\n\n  get length() {\n    return this.toBuffer().length;\n  }\n\n  // copy to target buffer\n  copy(target, targetOffset, offset, length) {\n    return this.toBuffer().copy(target, targetOffset, offset, length);\n  }\n\n  toBuffer() {\n    if (!this._buffer) {\n      this._buffer = Buffer.from(this._data, this._encoding);\n    }\n    return this._buffer;\n  }\n}\n\nclass StringBufChunk {\n  constructor(data) {\n    this._data = data;\n  }\n\n  get length() {\n    return this._data.length;\n  }\n\n  // copy to target buffer\n  copy(target, targetOffset, offset, length) {\n    // eslint-disable-next-line no-underscore-dangle\n    return this._data._buf.copy(target, targetOffset, offset, length);\n  }\n\n  toBuffer() {\n    return this._data.toBuffer();\n  }\n}\n\nclass BufferChunk {\n  constructor(data) {\n    this._data = data;\n  }\n\n  get length() {\n    return this._data.length;\n  }\n\n  // copy to target buffer\n  copy(target, targetOffset, offset, length) {\n    this._data.copy(target, targetOffset, offset, length);\n  }\n\n  toBuffer() {\n    return this._data;\n  }\n}\n\n// =============================================================================\n// ReadWriteBuf - a single buffer supporting simple read-write\nclass ReadWriteBuf {\n  constructor(size) {\n    this.size = size;\n    // the buffer\n    this.buffer = Buffer.alloc(size);\n    // read index\n    this.iRead = 0;\n    // write index\n    this.iWrite = 0;\n  }\n\n  toBuffer() {\n    if (this.iRead === 0 && this.iWrite === this.size) {\n      return this.buffer;\n    }\n\n    const buf = Buffer.alloc(this.iWrite - this.iRead);\n    this.buffer.copy(buf, 0, this.iRead, this.iWrite);\n    return buf;\n  }\n\n  get length() {\n    return this.iWrite - this.iRead;\n  }\n\n  get eod() {\n    return this.iRead === this.iWrite;\n  }\n\n  get full() {\n    return this.iWrite === this.size;\n  }\n\n  read(size) {\n    let buf;\n    // read size bytes from buffer and return buffer\n    if (size === 0) {\n      // special case - return null if no data requested\n      return null;\n    }\n\n    if (size === undefined || size >= this.length) {\n      // if no size specified or size is at least what we have then return all of the bytes\n      buf = this.toBuffer();\n      this.iRead = this.iWrite;\n      return buf;\n    }\n\n    // otherwise return a chunk\n    buf = Buffer.alloc(size);\n    this.buffer.copy(buf, 0, this.iRead, size);\n    this.iRead += size;\n    return buf;\n  }\n\n  write(chunk, offset, length) {\n    // write as many bytes from data from optional source offset\n    // and return number of bytes written\n    const size = Math.min(length, this.size - this.iWrite);\n    chunk.copy(this.buffer, this.iWrite, offset, offset + size);\n    this.iWrite += size;\n    return size;\n  }\n}\n\n// =============================================================================\n// StreamBuf - a multi-purpose read-write stream\n//  As MemBuf - write as much data as you like. Then call toBuffer() to consolidate\n//  As StreamHub - pipe to multiple writables\n//  As readable stream - feed data into the writable part and have some other code read from it.\n\n// Note: Not sure why but StreamBuf does not like JS \"class\" sugar. It fails the\n// integration tests\nconst StreamBuf = function(options) {\n  options = options || {};\n  this.bufSize = options.bufSize || 1024 * 1024;\n  this.buffers = [];\n\n  // batch mode fills a buffer completely before passing the data on\n  // to pipes or 'readable' event listeners\n  this.batch = options.batch || false;\n\n  this.corked = false;\n  // where in the current writable buffer we're up to\n  this.inPos = 0;\n\n  // where in the current readable buffer we've read up to\n  this.outPos = 0;\n\n  // consuming pipe streams go here\n  this.pipes = [];\n\n  // controls emit('data')\n  this.paused = false;\n\n  this.encoding = null;\n};\n\nutils.inherits(StreamBuf, Stream.Duplex, {\n  toBuffer() {\n    switch (this.buffers.length) {\n      case 0:\n        return null;\n      case 1:\n        return this.buffers[0].toBuffer();\n      default:\n        return Buffer.concat(this.buffers.map(rwBuf => rwBuf.toBuffer()));\n    }\n  },\n\n  // writable\n  // event drain - if write returns false (which it won't), indicates when safe to write again.\n  // finish - end() has been called\n  // pipe(src) - pipe() has been called on readable\n  // unpipe(src) - unpipe() has been called on readable\n  // error - duh\n\n  _getWritableBuffer() {\n    if (this.buffers.length) {\n      const last = this.buffers[this.buffers.length - 1];\n      if (!last.full) {\n        return last;\n      }\n    }\n    const buf = new ReadWriteBuf(this.bufSize);\n    this.buffers.push(buf);\n    return buf;\n  },\n\n  async _pipe(chunk) {\n    const write = function(pipe) {\n      return new Promise(resolve => {\n        pipe.write(chunk.toBuffer(), () => {\n          resolve();\n        });\n      });\n    };\n    await Promise.all(this.pipes.map(write));\n  },\n  _writeToBuffers(chunk) {\n    let inPos = 0;\n    const inLen = chunk.length;\n    while (inPos < inLen) {\n      // find writable buffer\n      const buffer = this._getWritableBuffer();\n\n      // write some data\n      inPos += buffer.write(chunk, inPos, inLen - inPos);\n    }\n  },\n  async write(data, encoding, callback) {\n    if (encoding instanceof Function) {\n      callback = encoding;\n      encoding = 'utf8';\n    }\n    callback = callback || utils.nop;\n\n    // encapsulate data into a chunk\n    let chunk;\n    if (data instanceof StringBuf) {\n      chunk = new StringBufChunk(data);\n    } else if (data instanceof Buffer) {\n      chunk = new BufferChunk(data);\n    } else if (typeof data === 'string' || data instanceof String) {\n      chunk = new StringChunk(data, encoding);\n    } else {\n      throw new Error('Chunk must be one of type String, Buffer or StringBuf.');\n    }\n\n    // now, do something with the chunk\n    if (this.pipes.length) {\n      if (this.batch) {\n        this._writeToBuffers(chunk);\n        while (!this.corked && this.buffers.length > 1) {\n          this._pipe(this.buffers.shift());\n        }\n      } else if (!this.corked) {\n        await this._pipe(chunk);\n        callback();\n      } else {\n        this._writeToBuffers(chunk);\n        process.nextTick(callback);\n      }\n    } else {\n      if (!this.paused) {\n        this.emit('data', chunk.toBuffer());\n      }\n\n      this._writeToBuffers(chunk);\n      this.emit('readable');\n    }\n\n    return true;\n  },\n  cork() {\n    this.corked = true;\n  },\n  _flush(/* destination */) {\n    // if we have comsumers...\n    if (this.pipes.length) {\n      // and there's stuff not written\n      while (this.buffers.length) {\n        this._pipe(this.buffers.shift());\n      }\n    }\n  },\n  uncork() {\n    this.corked = false;\n    this._flush();\n  },\n  end(chunk, encoding, callback) {\n    const writeComplete = error => {\n      if (error) {\n        callback(error);\n      } else {\n        this._flush();\n        this.pipes.forEach(pipe => {\n          pipe.end();\n        });\n        this.emit('finish');\n      }\n    };\n    if (chunk) {\n      this.write(chunk, encoding, writeComplete);\n    } else {\n      writeComplete();\n    }\n  },\n\n  // readable\n  // event readable - some data is now available\n  // event data - switch to flowing mode - feeds chunks to handler\n  // event end - no more data\n  // event close - optional, indicates upstream close\n  // event error - duh\n  read(size) {\n    let buffers;\n    // read min(buffer, size || infinity)\n    if (size) {\n      buffers = [];\n      while (size && this.buffers.length && !this.buffers[0].eod) {\n        const first = this.buffers[0];\n        const buffer = first.read(size);\n        size -= buffer.length;\n        buffers.push(buffer);\n        if (first.eod && first.full) {\n          this.buffers.shift();\n        }\n      }\n      return Buffer.concat(buffers);\n    }\n\n    buffers = this.buffers.map(buf => buf.toBuffer()).filter(Boolean);\n    this.buffers = [];\n    return Buffer.concat(buffers);\n  },\n  setEncoding(encoding) {\n    // causes stream.read or stream.on('data) to return strings of encoding instead of Buffer objects\n    this.encoding = encoding;\n  },\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    this.paused = false;\n  },\n  isPaused() {\n    return !!this.paused;\n  },\n  pipe(destination) {\n    // add destination to pipe list & write current buffer\n    this.pipes.push(destination);\n    if (!this.paused && this.buffers.length) {\n      this.end();\n    }\n  },\n  unpipe(destination) {\n    // remove destination from pipe list\n    this.pipes = this.pipes.filter(pipe => pipe !== destination);\n  },\n  unshift(/* chunk */) {\n    // some numpty has read some data that's not for them and they want to put it back!\n    // Might implement this some day\n    throw new Error('Not Implemented');\n  },\n  wrap(/* stream */) {\n    // not implemented\n    throw new Error('Not Implemented');\n  },\n});\n\nmodule.exports = StreamBuf;\n"],"mappings":"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"}