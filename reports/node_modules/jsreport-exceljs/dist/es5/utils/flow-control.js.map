{"version":3,"file":"flow-control.js","names":["require","EventEmitter","utils","FlowControl","options","queue","pipes","children","parent","flushing","gc","getTimeout","threshold","undefined","divisor","memory","process","memoryUsage","heapSize","heapTotal","Math","floor","corked","join","length","some","child","dst","data","encoding","Promise","resolve","reject","write","error","chunk","promises","forEach","pipe","sync","stream","push","_write","end","all","callback","e","count","seq","cr","setInterval","stdout","timeout","anime","_animate","setTimeout","clearInterval","_delay","_pipe","shift","setImmediate","_flush","stem","emit","Function","nop","Error","stemFlow","filter","on","item","module","exports"],"sources":["../../../lib/utils/flow-control.js"],"sourcesContent":["const {EventEmitter} = require('events');\n\nconst utils = require('./utils');\n\n// =============================================================================\n// FlowControl - Used to slow down streaming to manageable speed\n// Implements a subset of Stream.Duplex: pipe() and write()\nclass FlowControl extends EventEmitter {\n  constructor(options) {\n    super();\n\n    this.options = options = options || {};\n\n    // Buffer queue\n    this.queue = [];\n\n    // Consumer streams\n    this.pipes = [];\n\n    // Down-stream flow-control instances\n    this.children = [];\n\n    // Up-stream flow-control instances\n    this.parent = options.parent;\n\n    // Ensure we don't flush more than once at a time\n    this.flushing = false;\n\n    // determine timeout for flow control delays\n    if (options.gc) {\n      const {gc} = options;\n      if (gc.getTimeout) {\n        this.getTimeout = gc.getTimeout;\n      } else {\n        // heap size below which we don't bother delaying\n        const threshold = gc.threshold !== undefined ? gc.threshold : 150000000;\n        // convert from heapsize to ms timeout\n        const divisor = gc.divisor !== undefined ? gc.divisor : 500000;\n        this.getTimeout = function() {\n          const memory = process.memoryUsage();\n          const heapSize = memory.heapTotal;\n          return heapSize < threshold ? 0 : Math.floor(heapSize / divisor);\n        };\n      }\n    } else {\n      this.getTimeout = null;\n    }\n  }\n\n  get name() {\n    return ['FlowControl', this.parent ? 'Child' : 'Root', this.corked ? 'corked' : 'open'].join(' ');\n  }\n\n  get corked() {\n    // We remain corked while we have children and at least one has data to consume\n    return this.children.length > 0 && this.children.some(child => child.queue && child.queue.length);\n  }\n\n  get stem() {\n    // the decision to stem the incoming data depends on whether the children are corked\n    // and how many buffers we have backed up\n    return this.corked || !this.queue || this.queue.length > 2;\n  }\n\n  _write(dst, data, encoding) {\n    // Write to a single destination and return a promise\n\n    return new Promise((resolve, reject) => {\n      dst.write(data, encoding, error => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  async _pipe(chunk) {\n    // Write chunk to all pipes. A chunk with no data is the end\n    const promises = [];\n    this.pipes.forEach(pipe => {\n      if (chunk.data) {\n        if (pipe.sync) {\n          pipe.stream.write(chunk.data, chunk.encoding);\n        } else {\n          promises.push(this._write(pipe.stream, chunk.data, chunk.encoding));\n        }\n      } else {\n        pipe.stream.end();\n      }\n    });\n    if (!promises.length) {\n      promises.push(Promise.resolve());\n    }\n    await Promise.all(promises);\n    try {\n      chunk.callback();\n    } catch (e) {\n      // quietly ignore\n    }\n  }\n\n  _animate() {\n    let count = 0;\n    const seq = ['|', '/', '-', '\\\\'];\n    const cr = '\\u001b[0G'; // was '\\033[0G'\n    return setInterval(() => {\n      process.stdout.write(seq[count++ % 4] + cr);\n    }, 100);\n  }\n\n  _delay() {\n    // in certain situations it may be useful to delay processing (e.g. for GC)\n    const timeout = this.getTimeout && this.getTimeout();\n    if (timeout) {\n      return new Promise(resolve => {\n        const anime = this._animate();\n        setTimeout(() => {\n          clearInterval(anime);\n          resolve();\n        }, timeout);\n      });\n    }\n    return Promise.resolve();\n  }\n\n  async _flush() {\n    // If/while not corked and we have buffers to send, send them\n    if (this.queue && !this.flushing && !this.corked) {\n      if (this.queue.length) {\n        this.flushing = true;\n        await this._delay();\n        await this._pipe(this.queue.shift());\n        setImmediate(() => {\n          this.flushing = false;\n          this._flush();\n        });\n      }\n\n      if (!this.stem) {\n        // Signal up-stream that we're ready for more data\n        this.emit('drain');\n      }\n    }\n  }\n\n  write(data, encoding, callback) {\n    // Called by up-stream pipe\n    if (encoding instanceof Function) {\n      callback = encoding;\n      encoding = 'utf8';\n    }\n    callback = callback || utils.nop;\n\n    if (!this.queue) {\n      throw new Error('Cannot write to stream after end');\n    }\n\n    // Always queue chunks and then flush\n    this.queue.push({\n      data,\n      encoding,\n      callback,\n    });\n    this._flush();\n\n    // restrict further incoming data if we have backed up buffers or\n    // the children are still busy\n    const stemFlow = this.corked || this.queue.length > 3;\n    return !stemFlow;\n  }\n\n  end() {\n    // Signal from up-stream\n    this.queue.push({\n      callback: () => {\n        this.queue = null;\n        this.emit('finish');\n      },\n    });\n    this._flush();\n  }\n\n  pipe(stream, options) {\n    options = options || {};\n\n    // some streams don't call callbacks\n    const sync = options.sync || false;\n\n    this.pipes.push({\n      stream,\n      sync,\n    });\n  }\n\n  unpipe(stream) {\n    this.pipes = this.pipes.filter(pipe => pipe.stream !== stream);\n  }\n\n  createChild() {\n    // Create a down-stream flow-control\n    const options = {\n      parent: this,\n      ...this.options,\n    };\n    const child = new FlowControl(options);\n    this.children.push(child);\n\n    child.on('drain', () => {\n      // a child is ready for more\n      this._flush();\n    });\n\n    child.on('finish', () => {\n      // One child has finished its stream. Remove it and continue\n      this.children = this.children.filter(item => item !== child);\n      this._flush();\n    });\n\n    return child;\n  }\n}\n\nmodule.exports = FlowControl;\n"],"mappings":"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"}